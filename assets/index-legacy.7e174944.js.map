{"version":3,"file":"index-legacy.7e174944.js","sources":["../../vite/modulepreload-polyfill","../../preact/jsx-runtime","../../src/app.jsx","../../src/main.jsx","../../src/getIdiomStates.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import * as jsxRuntime from \"/home/runner/work/chengyu-wordle/chengyu-wordle/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import {\n  useState,\n  useEffect,\n  useMemo,\n  useRef,\n  useCallback,\n} from 'preact/hooks';\nimport { pinyin } from 'pinyin-pro';\nconst py = pinyin;\nwindow.pinyin = pinyin;\n\nimport { useTranslation, Trans } from 'react-i18next';\n\nimport toast, { Toaster, useToasterStore } from 'react-hot-toast';\nconst alert = (text) => toast(text);\n\nimport Switch from 'rc-switch';\n\nimport { toClipboard } from 'copee';\nconst copy = (text, fn = () => {}) => {\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard\n      .writeText(text)\n      .then(fn)\n      .catch((e) => {});\n  } else {\n    toClipboard(text);\n    fn();\n  }\n};\n\nimport getIdiomStates from './getIdiomStates';\n\n// Always need to wrap localStorage in a try/catch block because\n// it can throw an exception in some browsers (e.g. Safari)\nconst LS = {\n  getItem: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n  setItem: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      return null;\n    }\n  },\n  removeItem: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n};\n\nconst fireEvent = (...props) => {\n  if (window.plausible) {\n    plausible(...props);\n  }\n};\n\n// Data\nimport idiomsTxt from '../game-data/all-idioms.txt?raw';\nconst idioms = idiomsTxt.split('\\n');\nimport gameIdioms from '../game-data/game-idioms.csv';\nconst games = gameIdioms.slice(1).map((row) => ({\n  id: row[0],\n  idiom: row[1],\n}));\n\nconst KEY_PREFIX = 'cywd-';\nconst HARD_MODE = JSON.parse(LS.getItem(`${KEY_PREFIX}hardMode`) || false);\nconst MAX_GAMES_BEFORE_SHOW_DASHBOARD = 7000;\nconst MAX_LETTERS = 4;\nconst MAX_KEYS = HARD_MODE ? 40 : 20;\nconst MAX_STEPS = 6;\nconst MIN_IDIOMS = HARD_MODE ? 10 : 6;\n\nif (HARD_MODE) {\n  fireEvent('Hard mode');\n}\n\n// Check letters with multiple pinyins\n// const letter2PY = new Map();\n// const differentPinyins = [];\n// games.forEach((game) => {\n//   const letters = game.idiom.split('');\n//   const pinyins = pinyin(game.idiom, { type: 'array' });\n//   letters.forEach((letter, i) => {\n//     if (!letter2PY.has(letter)) {\n//       letter2PY.set(letter, pinyins[i]);\n//     } else if (letter2PY.get(letter) !== pinyins[i]) {\n//       differentPinyins.push({\n//         id: game.id,\n//         idiom: game.idiom,\n//         letter,\n//         pinyins: [letter2PY.get(letter), pinyins[i]].join(' '),\n//       });\n//     }\n//   });\n// });\n// console.log({\n//   differentPinyins: `id,idiom,letter,pinyins\\n${differentPinyins\n//     .map((row) => `${row.id},${row.idiom},${row.letter},${row.pinyins}`)\n//     .join('\\n')}`,\n// });\n\nwindow.clearGames = () => {\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      localStorage.removeItem(key);\n    }\n  }\n};\n\nwindow.allGames = () => {\n  const allGames = new Map();\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      const game = JSON.parse(localStorage.getItem(key));\n      allGames.set(key.replace(KEY_PREFIX, ''), game);\n    }\n  }\n  return allGames;\n};\n\nconst getBoardGameState = (boardStates) => {\n  const won = boardStates.some(\n    (row) => !!row.length && row.every((s) => s === 'üü©'),\n  );\n  if (won) return 'won';\n  const lastRow = boardStates[boardStates.length - 1];\n  const lost = !!lastRow.length && lastRow.every((s) => s !== 'üü©');\n  if (lost) return 'lost';\n  return null;\n};\n\n// v = letter values of the row\n// s = submitted state of the row (after user press enter)\nconst blankBoard = () =>\n  Array.from({ length: MAX_STEPS }, () => ({\n    v: Array.from({ length: MAX_LETTERS }, () => ''),\n    s: false,\n  }));\n\nconst getIdiomsKeys = (idiom, prevPassedIdioms, prevKeys, depth = 0) => {\n  let passedIdioms = prevPassedIdioms || new Set();\n  passedIdioms.add(idiom);\n  let keys = prevKeys || new Set();\n  const idiomLetters = idiom.split('');\n  idiomLetters.forEach((letter) => keys.add(letter));\n  let consecutiveFailures = 0;\n  lettersCycle: for (let i = 0; i < games.length; i++) {\n    const letter = idiomLetters[(i + 1) % MAX_LETTERS];\n    const anotherIdiom = games.find(\n      ({ idiom }) => !passedIdioms.has(idiom) && idiom.includes(letter),\n    );\n    if (anotherIdiom) {\n      for (let j = 0; j < anotherIdiom.idiom.length; j++) {\n        keys.add(anotherIdiom.idiom[j]);\n\n        if (keys.size >= MAX_KEYS) {\n          break lettersCycle;\n        }\n      }\n      passedIdioms.add(anotherIdiom.idiom);\n      consecutiveFailures = 0;\n    } else {\n      if (consecutiveFailures >= MAX_LETTERS + 1) {\n        // Too many failures, stop\n        break lettersCycle;\n      }\n      consecutiveFailures += 1;\n    }\n  }\n\n  // Try the next idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const nextIdiom = [...passedIdioms][++depth];\n    if (nextIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        nextIdiom,\n        passedIdioms,\n        keys,\n        depth,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Still not enough keys, choose a random idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const randomIdiom = games[Math.floor(Math.random() * games.length)].idiom;\n    if (randomIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        randomIdiom,\n        passedIdioms,\n        keys,\n        0,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Something very wrong happened\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const gameID = games.find((g) => g.idiom === idiom)?.id;\n    console.error(gameID, {\n      possibleIdioms: passedIdioms.size,\n      keySize: keys.size,\n      consecutiveFailures,\n    });\n  }\n\n  return {\n    passedIdioms,\n    keys,\n  };\n};\n\n// Check if all idioms have enough keys/idioms\n// games.forEach((game) => {\n//   getIdiomsKeys(game.idiom);\n// });\n\nconst PlayIcon = (props) => (\n  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" {...props}>\n    <title>‚ñ∂Ô∏è</title>\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\n      clip-rule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst CloseIcon = (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <title>‚úñÔ∏è</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    ></path>\n  </svg>\n);\n\nconst startDate = new Date(2022, 0, 27); // 27 January 2022\nconst getTodayGame = () => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const diff = today - startDate;\n  const dayCount = Math.floor(diff / (1000 * 60 * 60 * 24));\n  return games[Math.max(0, dayCount % games.length)];\n};\n\n// Component that shows hours, minutes and seconds counting down to start of next day\nconst Countdown = () => {\n  const { t } = useTranslation();\n  let nextDay = new Date().setHours(0, 0, 0, 0) + 24 * 60 * 60 * 1000;\n  const nextStartDate = new Date(+startDate + 24 * 60 * 60 * 1000);\n  if (nextDay < nextStartDate) {\n    nextDay = nextStartDate;\n  }\n  const [hours, setHours] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [isNow, setIsNow] = useState(false);\n  // update countdown every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const diff = nextDay - new Date();\n      if (diff <= 0) {\n        setIsNow(true);\n        clearInterval(timer);\n        return;\n      }\n      setHours(\n        Math.floor(diff / (1000 * 60 * 60))\n          .toString()\n          .padStart(2, '0'),\n      );\n      setMinutes(\n        Math.floor((diff / (1000 * 60)) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n      setSeconds(\n        Math.floor((diff / 1000) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  if (isNow) {\n    return <a href=\"./\">{t('ui.countdownNow')}</a>;\n  }\n  return (\n    <time class=\"countdown\">\n      {hours}:{minutes}:{seconds}\n    </time>\n  );\n};\n\nconst CodeInput = ({ code, url }) => {\n  const { t } = useTranslation();\n  return (\n    code && (\n      <input\n        readOnly\n        value={code}\n        class=\"idiom-code\"\n        onClick={(e) => {\n          e.target.focus();\n          e.target.select();\n          copy(url || code, () => {\n            alert(t('ui.copiedURL'));\n          });\n        }}\n      />\n    )\n  );\n};\n\nconst Letter = ({ letter, pinyin, state }) => {\n  return (\n    <div\n      class={`letter ${letter ? 'lettered' : ''} ${state ?? ''} ${\n        state ? 'üåà' : ''\n      }`}\n    >\n      <ruby>\n        {letter || <span style={{ opacity: 0 }}>‰∏Ä</span>}\n        <rp>(</rp>\n        <rt>{pinyin || py(letter) || <>&nbsp;</>}</rt>\n        <rp>)</rp>\n      </ruby>\n    </div>\n  );\n};\n\nimport confetti from 'canvas-confetti';\nlet confettiRAF;\nconst blastConfetti = () => {\n  const colors = ['#008000', '#FFA500'];\n\n  (function frame() {\n    confetti({\n      particleCount: 2,\n      angle: 60,\n      spread: 80,\n      origin: { x: 0, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    confetti({\n      particleCount: 2,\n      angle: 120,\n      spread: 80,\n      origin: { x: 1, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    confettiRAF = requestAnimationFrame(frame);\n  })();\n};\nconst stopConfetti = () => {\n  cancelAnimationFrame(confettiRAF);\n};\nconst IdiomsDashboard = () => {\n  const { t } = useTranslation();\n  let wonCount = 0;\n  let lostCount = 0;\n  const idioms = games.map((game) => {\n    // Get board from localStorage\n    const boardGame = JSON.parse(LS.getItem(`${KEY_PREFIX}${game.id}`));\n    if (boardGame && boardGame.gameState) {\n      const { board, gameState } = boardGame;\n      if (gameState === 'won') {\n        wonCount++;\n      } else if (gameState === 'lost') {\n        lostCount++;\n      }\n      return (\n        <a\n          href={`/#${game.id}`}\n          class={`board ${gameState}`}\n          title={`${game.id} (${gameState})`}\n        >\n          {gameState === 'won' ? 'üü©' : 'üüß'}\n        </a>\n      );\n    } else {\n      return (\n        <a href={`/#${game.id}`} class=\"board\" title={`${game.id}`}>\n          ‚¨ú\n        </a>\n      );\n    }\n  });\n\n  useEffect(() => {\n    blastConfetti();\n    return stopConfetti;\n  }, []);\n\n  return (\n    <>\n      <h2>\n        {t('dashboard.heading', {\n          gamesCount: MAX_GAMES_BEFORE_SHOW_DASHBOARD,\n        })}\n      </h2>\n      <p>{t('dashboard.subheading')}</p>\n      <p>\n        <Trans\n          i18nKey=\"dashboard.totalGamesPlayed\"\n          values={{\n            gamesCountOverTotal: `${wonCount + lostCount} / ${games.length}`,\n          }}\n          components={[<b />]}\n        />\n        <br />\n        <Trans\n          i18nKey=\"dashboard.wonLost\"\n          values={{\n            wonCount,\n            lostCount,\n          }}\n          components={[<b />, <b />]}\n        />\n      </p>\n      <div class=\"boards\">{idioms}</div>\n    </>\n  );\n};\n\nconst prefersColorSchemeSupported =\n  'matchMedia' in window &&\n  window.matchMedia('(prefers-color-scheme: dark)').media !== 'not all';\n\nexport function App() {\n  const { t, i18n } = useTranslation();\n\n  const [showDashboard, setShowDashboard] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showModal, setShowModal] = useState(false); // false | won | lost\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const [colorScheme, setColorScheme] = useState(\n    LS.getItem(`${KEY_PREFIX}colorScheme`) || 'auto',\n  );\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const html = document.querySelector('html');\n    if (colorScheme === 'dark') {\n      html.classList.add('dark-mode');\n      html.classList.remove('light-mode');\n    } else if (colorScheme === 'light') {\n      html.classList.add('light-mode');\n      html.classList.remove('dark-mode');\n    } else {\n      html.classList.remove('dark-mode', 'light-mode');\n    }\n  }, [colorScheme]);\n\n  const [skipFirstTime, setSkipFirstTime] = useState(\n    LS.getItem(`${KEY_PREFIX}skipFirstTime`) || false,\n  );\n\n  const [currentGame, setCurrentGame] = useState(\n    games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n  );\n  useEffect(() => {\n    window.addEventListener('hashchange', () => {\n      setCurrentGame(\n        games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n      );\n      setShowDashboard(false);\n    });\n  }, []);\n\n  const [board, setBoard] = useState(\n    JSON.parse(LS.getItem(`${KEY_PREFIX}${currentGame.id}`))?.board ||\n      blankBoard(),\n  );\n  useEffect(() => {\n    const cachedGame = LS.getItem(`${KEY_PREFIX}${currentGame.id}`);\n    if (cachedGame) {\n      setBoard(JSON.parse(cachedGame).board);\n    } else {\n      setBoard(blankBoard());\n    }\n  }, [currentGame.id]);\n\n  const boardStates = useMemo(() => {\n    return board.map((row, i) => {\n      if (row.s) {\n        return getIdiomStates(currentGame.idiom, row.v);\n      }\n      return [];\n    });\n  }, [board]);\n\n  // Save to localStorage every time board changes\n  useEffect(() => {\n    // Only store in localStorage if board has some values\n    if (board && board.some((row) => row.v.some((v) => v))) {\n      LS.setItem(\n        `${KEY_PREFIX}${currentGame.id}`,\n        JSON.stringify({\n          board,\n          gameState: getBoardGameState(boardStates),\n        }),\n      );\n    }\n  }, [boardStates]);\n\n  const [definition, setDefinition] = useState(null);\n  useEffect(() => {\n    setDefinition(null);\n    fetch(\n      `https://baidu-hanyu-idiom.cheeaun.workers.dev/?wd=${currentGame.idiom}`,\n    )\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.definition) {\n          setDefinition(r.definition);\n        }\n      })\n      .catch(() => {});\n  }, [currentGame.idiom]);\n\n  const currentStep = board?.findIndex((row) => row.s === false) || 0;\n\n  const [currentGameKeys, currentGameKeysPinyin] = useMemo(() => {\n    const { keys } = getIdiomsKeys(currentGame.idiom);\n    const allPossibleIdioms = idioms.filter((idiom) => {\n      // check if idiom contains 4 letters from keys\n      return idiom.split('').every((letter) => keys.has(letter));\n    });\n\n    // Pinyin mappings\n    const keysPinyin = new Map();\n    allPossibleIdioms.forEach((idiom) => {\n      const idiomPinyin = pinyin(idiom, { type: 'array' });\n      idiomPinyin.forEach((pinyin, i) => {\n        if (keysPinyin.has(idiom[i])) {\n          keysPinyin.get(idiom[i]).add(pinyin);\n        } else {\n          keysPinyin.set(idiom[i], new Set([pinyin]));\n        }\n      });\n    });\n\n    // SPOILER inside console.log!\n    const possibleIdioms = allPossibleIdioms\n      .map((idiom) => {\n        return `${idiom} (${py(idiom)})`;\n      })\n      .sort((a, b) => a.localeCompare(b, 'zh'));\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\n        `${possibleIdioms.length} Possible Idioms [${currentGame.id}] (${keys.size} keys):`,\n      );\n      console.log(`${possibleIdioms\n        .map((idiom, i) => `${i + 1}. ${idiom}`)\n        .join('\\n')}\n\nüö®SPOILERüö® Type 'ANSWER' to see the answer.`);\n      console.groupEnd();\n    }\n    window.ANSWER = `${currentGame.idiom} (${py(currentGame.idiom)})`;\n\n    const sortedKeys = [...keys].sort((a, b) => a.localeCompare(b, 'zh'));\n    return [sortedKeys, keysPinyin];\n  }, [currentGame.idiom]);\n\n  const handleLetter = (letter, overwrite = false) => {\n    if (!board[currentStep]) return;\n    if (gameState) return;\n    setShowError(false);\n\n    const newBoard = [...board];\n    let columnIndex = newBoard[currentStep].v.findIndex((v) => v === '');\n    if (overwrite) {\n      if (columnIndex === -1) {\n        columnIndex = 3;\n      } else {\n        columnIndex--;\n      }\n    }\n    if (columnIndex !== -1) {\n      newBoard[currentStep].v[columnIndex] = letter;\n      setBoard(newBoard);\n    }\n  };\n\n  const correctKeys = new Set();\n  const presentKeys = new Set();\n  const absentKeys = new Set();\n  board.forEach((row, i) => {\n    if (!row.s) return;\n    row.v.forEach((letter, j) => {\n      const state = boardStates[i][j];\n      if (state === 'üü©') {\n        correctKeys.add(letter);\n      } else if (state === 'üüß') {\n        presentKeys.add(letter);\n      } else if (state === '‚¨ú') {\n        absentKeys.add(letter);\n      }\n    });\n  });\n\n  const handleEnter = () => {\n    if (gameState) return;\n    console.log('handleEnter');\n    setShowError(false);\n\n    const row = board[currentStep];\n    if (!row) return;\n    const currentIdiom = row.v.join('');\n    const valid = idioms.includes(currentIdiom);\n    if (valid) {\n      row.s = true;\n      setBoard([...board]);\n    } else {\n      setTimeout(() => {\n        setShowError(true);\n      }, 10);\n    }\n    console.log({ currentIdiom, valid });\n  };\n\n  const gameState = useMemo(() => {\n    return getBoardGameState(boardStates);\n  }, [boardStates]);\n\n  useEffect(() => {\n    if (gameState === 'won') {\n      setShowModal('won');\n    } else if (gameState === 'lost') {\n      setShowModal('lost');\n    } else {\n      setShowModal(false);\n    }\n  }, [gameState]);\n\n  const handleBackspace = () => {\n    if (gameState) return;\n    const newBoard = [...board];\n    // Get last column with value\n    const row = newBoard[currentStep];\n    if (!row || row.s) return;\n    let columnIndex = -1;\n    for (let i = row.v.length - 1; i >= 0; i--) {\n      if (row.v[i] !== '') {\n        columnIndex = i;\n        break;\n      }\n    }\n    if (columnIndex !== -1) {\n      row.v[columnIndex] = '';\n      setBoard(newBoard);\n    }\n  };\n\n  useEffect(() => {\n    const handleKey = (e) => {\n      if (gameState) return;\n      if (e.metaKey || e.ctrlKey || !e.key) {\n        return;\n      }\n      const key = e.key.toLowerCase();\n      if (key === 'enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        handleEnter();\n      } else if (key === 'backspace') {\n        e.preventDefault();\n        handleBackspace();\n      } else if (/^arrow(left|right)/i.test(key)) {\n        // This will cycle through all letters with same starting pinyin letter\n        const row = board[currentStep];\n        const value = [...row.v].reverse().find((v) => v !== '');\n        if (value) {\n          const pinyinLetter = py(value)[0];\n\n          const possibleLettersSet = new Set();\n          currentGameKeysPinyin.forEach((pinyins, letter) => {\n            pinyins.forEach((pinyin) => {\n              const firstPinyinChar = pinyin[0];\n              if (\n                firstPinyinChar.localeCompare(pinyinLetter, 'en', {\n                  sensitivity: 'base',\n                }) === 0\n              ) {\n                possibleLettersSet.add(letter);\n              }\n            });\n          });\n          const possibleLetters = [...possibleLettersSet];\n\n          if (possibleLetters.length <= 1) return;\n          const letterIndex = possibleLetters.indexOf(value);\n          const nextLetter =\n            key === 'arrowright'\n              ? possibleLetters[(letterIndex + 1) % possibleLetters.length]\n              : possibleLetters[\n                  (letterIndex + possibleLetters.length - 1) %\n                    possibleLetters.length\n                ];\n          if (nextLetter) {\n            handleLetter(nextLetter, true);\n          }\n        }\n      } else if (/[a-z]/i.test(key)) {\n        // Type \"a\" will trigger the first letter pinyin that starts with \"ƒÅ\"\n        let breakLoop = false;\n        currentGameKeysPinyin.forEach((pinyins, letter) => {\n          if (breakLoop) return;\n          pinyins.forEach((pinyin) => {\n            if (breakLoop) return;\n            const firstPinyinChar = pinyin[0];\n            if (\n              firstPinyinChar.localeCompare(key, 'en', {\n                sensitivity: 'base',\n              }) === 0\n            ) {\n              e.preventDefault();\n              breakLoop = true;\n              handleLetter(letter);\n            }\n          });\n        });\n      }\n    };\n    document.addEventListener('keydown', handleKey);\n    return () => {\n      document.removeEventListener('keydown', handleKey);\n    };\n  }, [currentGameKeys, currentGameKeysPinyin, board, currentStep, gameState]);\n\n  const permalink = location.origin + location.pathname + '#' + currentGame.id;\n  const shortPermalink =\n    location.host + location.pathname + '#' + currentGame.id;\n  const emojiResults = boardStates\n    .map((row) => row.join(''))\n    .join('\\n')\n    .trim();\n  const attempts = gameState === 'won' ? emojiResults.split('\\n').length : 'X';\n  const shareText = `${t('app.title')} [${currentGame.id}]${\n    HARD_MODE ? ' üî•' : ''\n  } ${attempts}/6\\n\\n${emojiResults}`;\n  const shareTextWithLink = `${shareText}\\n\\n${shortPermalink}`;\n\n  const hints = useMemo(() => {\n    const hints = [];\n    const letters = currentGame.idiom.split('');\n\n    // 1. Absent letters hints\n    const absentHints = currentGameKeys\n      .filter((k) => {\n        return !letters.includes(k) && !absentKeys.has(k);\n      })\n      .slice(0, -1) // Don't reveal at least one letter\n      .slice(0, 3) // But still max 3 letters\n      .map((letter) => {\n        return t('hints.absentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...absentHints);\n\n    // 2. Definition hints\n    if (\n      definition?.zh &&\n      letters.filter((c) => definition.zh.includes(c)).length <= 2\n      // Only show hint if definition contains 2 or less of the characters in the idiom\n      // Else, the definition basically revealed the answer\n    ) {\n      hints.push(`‚ÑπÔ∏è ${definition.zh}`);\n    }\n    if (definition?.en) hints.push(`‚ÑπÔ∏è ${definition.en}`);\n\n    // 3. Letter hints\n    const letterHints = letters\n      .filter((c) => !correctKeys.has(c) && !presentKeys.has(c))\n      .slice(0, -1) // Don't reveal at least one letter\n      .map((letter) => {\n        return t('hints.presentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...letterHints);\n\n    // 4. Pinyin hints\n    const pinyinHint = letters\n      .map((c) => py(c)[0])\n      .join('')\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '');\n    // https://stackoverflow.com/a/37511463/20838\n    hints.push(t('hints.abbreviatedPinyin', { pinyinHint }));\n\n    return hints;\n  }, [currentGame.idiom, definition]);\n  const hintIndex = useRef(0);\n  useEffect(() => {\n    hintIndex.current = 0;\n  }, [currentGame.idiom]);\n  const showHint = () => {\n    if (gameState) return;\n    const hint = hints[hintIndex.current];\n    hintIndex.current = (hintIndex.current + 1) % hints.length;\n    alert(hint);\n  };\n\n  // Limit number of toasts\n  // https://github.com/timolins/react-hot-toast/issues/31#issuecomment-803359550\n  const { toasts } = useToasterStore();\n  const TOAST_LIMIT = 1;\n  useEffect(() => {\n    toasts\n      .filter((t, i) => t.visible && i >= TOAST_LIMIT)\n      .forEach((t) => toast.dismiss(t.id));\n  }, [toasts]);\n\n  const gamesPlayedCount = useMemo(() => {\n    // Only count games played if info modal is open\n    if (!showInfoModal) return;\n    try {\n      const keys = Object.keys(localStorage).filter((k) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && games.find((g) => g.id === gameID);\n      });\n      return keys.length;\n    } catch (e) {}\n  }, [showInfoModal]);\n\n  useEffect(() => {\n    if (!gamesPlayedCount || gamesPlayedCount < 10) return;\n    const precision = gamesPlayedCount < 100 ? 1 : 2;\n    const count = +gamesPlayedCount.toPrecision(precision);\n    fireEvent('Games Played', {\n      props: {\n        count,\n      },\n    });\n  }, [gamesPlayedCount]);\n\n  const GamesCount = useCallback(\n    () => (\n      <b>\n        {gamesPlayedCount}\n        {gamesPlayedCount >= MAX_GAMES_BEFORE_SHOW_DASHBOARD && (\n          <>\n            {' '}\n            /{' '}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                setShowInfoModal(false);\n                setShowDashboard(true);\n              }}\n            >\n              {games.length}\n            </a>\n          </>\n        )}\n      </b>\n    ),\n    [gamesPlayedCount],\n  );\n\n  return (\n    <>\n      <header>\n        <div class=\"inner\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowInfoModal(true);\n            }}\n          >\n            <svg\n              width=\"16\"\n              height=\"16\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <title>‚ÑπÔ∏è</title>\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          </button>\n          <h1>{t('app.title')}</h1>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowModal(gameState || 'play');\n            }}\n          >\n            {gameState ? (\n              t('common.play')\n            ) : (\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 290 290\">\n                <title>...</title>\n                <path\n                  fill=\"currentColor\"\n                  d=\"M255 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM35 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM145 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70z\"\n                />\n              </svg>\n            )}\n          </button>\n        </div>\n      </header>\n      <div id=\"board\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        {board.map((row, index) => {\n          const pinyins = pinyin(row.v.join(''), { type: 'array' });\n          return (\n            <div\n              className={`row ${\n                currentStep === index && showError ? 'error' : ''\n              } ${currentStep === index ? 'current' : ''}`}\n              key={index}\n            >\n              {row.v.map((letter, i) => (\n                <Letter\n                  key={i}\n                  letter={letter}\n                  pinyin={pinyins[i]}\n                  state={boardStates[index][i]}\n                />\n              ))}\n            </div>\n          );\n        })}\n      </div>\n      <div id=\"keyboard\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        <div class=\"inner\">\n          <div class=\"keys\">\n            {currentGameKeys.map((key, i) => (\n              <button\n                class={`${correctKeys.has(key) ? 'üü©' : ''} ${\n                  presentKeys.has(key) ? 'üüß' : ''\n                } ${absentKeys.has(key) ? '‚¨ú' : ''}`}\n                type=\"button\"\n                tabIndex={-1}\n                onClick={() => {\n                  handleLetter(key);\n                }}\n              >\n                <ruby>\n                  {key}\n                  <rp>(</rp>\n                  <rt>\n                    {currentGameKeysPinyin.has(key)\n                      ? [...currentGameKeysPinyin.get(key)]\n                          .sort((a, b) => a.localeCompare(b, 'zh'))\n                          .join(' ‚∏± ')\n                      : py(key)}\n                  </rt>\n                  <rp>)</rp>\n                </ruby>\n              </button>\n            ))}\n          </div>\n          <div class=\"row\">\n            <button type=\"button\" onClick={handleEnter} tabIndex={-1}>\n              {t('common.enter')}\n            </button>\n            {HARD_MODE ? (\n              <b class=\"hard\">{t('ui.hardMode')}</b>\n            ) : (\n              <button type=\"button\" class=\"stuck\" onClick={showHint}>\n                {t('ui.hint')}\n              </button>\n            )}\n            <button type=\"button\" onClick={handleBackspace} tabIndex={-1}>\n              <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"modal\"\n        class={showModal ? 'appear' : ''}\n        onClick={(e) => {\n          if (e.target === e.currentTarget) setShowModal(null);\n        }}\n      >\n        <CloseIcon\n          height=\"24\"\n          width=\"24\"\n          class=\"close\"\n          onClick={() => {\n            setShowModal(null);\n          }}\n        />\n        <div class=\"content\">\n          <h2>\n            {showModal === 'won'\n              ? 'üéâüéâüéâ'\n              : showModal === 'lost'\n              ? 'üò≠üò≠üò≠'\n              : 'üêØüêØüêØ'}\n          </h2>\n          {showModal === 'play' && (\n            <p>\n              {t('ui.idiomId')}{' '}\n              <CodeInput code={currentGame.id} url={permalink} />\n            </p>\n          )}\n          {/(won|lost)/i.test(showModal) && (\n            <>\n              <p>\n                <b class=\"answer\">\n                  <ruby>\n                    {currentGame.idiom}\n                    <rp>(</rp>\n                    <rt>{py(currentGame.idiom)}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </b>\n                <div class=\"definition\">\n                  {definition?.zh\n                    ? definition.zh.split('').map((c) => {\n                        const p = py(c);\n                        if (p === c) return c;\n                        return (\n                          <ruby>\n                            {c}\n                            <rp>(</rp>\n                            <rt>{py(c)}</rt>\n                            <rp>)</rp>\n                          </ruby>\n                        );\n                      })\n                    : ''}\n                  {definition?.zh && definition?.en && <br />}\n                  {definition?.en}\n                </div>\n                <small>\n                  <a\n                    href={`https://hanyu.baidu.com/s?wd=${currentGame.idiom}&from=zici`}\n                    target=\"_blank\"\n                  >\n                    üìñ {t('glossary.baidu')}\n                  </a>\n                  &nbsp; &nbsp;\n                  <a\n                    href={`https://www.zdic.net/hans/${currentGame.idiom}`}\n                    target=\"_blank\"\n                  >\n                    üìñ {t('glossary.zdic')}\n                  </a>\n                </small>\n              </p>\n              <div class=\"results\">{shareTextWithLink}</div>\n              <button\n                id=\"share\"\n                onClick={async () => {\n                  try {\n                    if (\n                      // Edge/ or Edg/\n                      /edge?\\//i.test(navigator.userAgent) ||\n                      // Windows\n                      /windows/.test(navigator.userAgent)\n                    ) {\n                      throw new Error('Web Share API not working well here');\n                    }\n                    copy(shareTextWithLink);\n                    await navigator.share({ text: shareTextWithLink });\n                  } catch (e) {\n                    copy(shareTextWithLink, () => {\n                      alert(t('ui.copiedResults'));\n                    });\n                  }\n                }}\n              >\n                {t('common.share')}{' '}\n                <svg height=\"16\" width=\"16\" viewBox=\"0 0 24 24\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n                  ></path>\n                </svg>\n              </button>\n              &nbsp;\n              <a\n                class=\"button facebook\"\n                href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n                  permalink,\n                )}&hashtag=${encodeURIComponent('#chengyuwordle')}`}\n                target=\"_blank\"\n                onClick={() => {\n                  copy(shareTextWithLink);\n                }}\n              >\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 96.1 96.1\">\n                  <title>Facebook</title>\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M72 0H59.7c-14 0-23 9.3-23 23.7v10.9H24c-1 0-2 .8-2 2v15.7c0 1.1 1 2 2 2h12.6v39.9c0 1 .8 2 2 2h16.3c1 0 2-1 2-2v-40h14.6c1 0 2-.8 2-1.9V36.5a2 2 0 0 0-2-2H56.8v-9.2c0-4.4 1.1-6.7 6.9-6.7H72c1 0 2-.9 2-2V2c0-1.1-1-2-2-2z\"\n                  />\n                </svg>\n              </a>\n              &nbsp;\n              <a\n                class=\"button tweet\"\n                href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n                  shareTextWithLink,\n                )}`}\n                target=\"_blank\"\n              >\n                <svg height=\"16\" width=\"16\" viewBox=\"0 0 24 24\">\n                  <title>{t('common.tweet')}</title>\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"\n                  />\n                </svg>\n              </a>\n              &nbsp;\n              <CodeInput code={currentGame.id} url={permalink} />\n            </>\n          )}\n          <div class=\"footer\">\n            {/won|lost/i.test(gameState) &&\n              getTodayGame().id === currentGame.id && (\n                <p>\n                  <big>\n                    <Trans\n                      i18nKey=\"ui.nextIdiom\"\n                      components={[<Countdown />]}\n                    />\n                  </big>\n                </p>\n              )}\n            <div>\n              {getTodayGame().id !== currentGame.id && (\n                <>\n                  <a href=\"./\" class=\"button strong\">\n                    <PlayIcon width={20} height={20} /> {t('ui.playTodayGame')}\n                  </a>\n                  <br />\n                </>\n              )}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Random');\n                  const yes = confirm(t('ui.confirmRandom'));\n                  if (yes) {\n                    const rand = Math.round(Math.random() * (games.length - 1));\n                    const randGame = games[rand];\n                    location.hash = `#${randGame.id}`;\n                    setShowModal(null);\n                    fireEvent('Game load: Random');\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.random')}\n              </button>{' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Idiom ID');\n                  // Ask user for idiom ID, load game if ID is valid\n                  let id = prompt(t('ui.promptIdiom'));\n                  try {\n                    id = new URL(id).hash.slice(1);\n                  } catch (e) {}\n                  if (id) {\n                    const game = games.find((g) => g.id === id);\n                    if (game) {\n                      location.hash = `#${game.id}`;\n                      setShowModal(null);\n                      fireEvent('Game load: Idiom ID');\n                    } else {\n                      alert('Invalid idiom ID');\n                    }\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.choose')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"info-modal\"\n        class={showInfoModal || !skipFirstTime ? 'appear' : ''}\n      >\n        {skipFirstTime && (\n          <CloseIcon\n            height=\"32\"\n            width=\"32\"\n            class=\"close\"\n            onClick={() => {\n              setShowInfoModal(false);\n            }}\n          />\n        )}\n        <div class=\"content\">\n          {prefersColorSchemeSupported && (\n            <p class=\"color-scheme-selector\">\n              <button\n                type=\"button\"\n                class={colorScheme === 'dark' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'dark');\n                  setColorScheme('dark');\n                }}\n              >\n                üåë\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'auto' ? 'active' : ''}\n                onClick={() => {\n                  LS.removeItem(`${KEY_PREFIX}colorScheme`);\n                  setColorScheme('auto');\n                }}\n              >\n                üåì\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'light' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'light');\n                  setColorScheme('light');\n                }}\n              >\n                üåï\n              </button>\n            </p>\n          )}{' '}\n          <p class=\"locale-selector\">\n            üåê{' '}\n            <a\n              href=\"./?lng=en\"\n              hreflang=\"en\"\n              rel={i18n.resolvedLanguage === 'en' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'en' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('en');\n              }}\n            >\n              English\n            </a>{' '}\n            &#8901;{' '}\n            <a\n              href=\"./?lng=zh-CN\"\n              hreflang=\"zh-CN\"\n              rel={i18n.resolvedLanguage === 'zh' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'zh' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('zh-CN');\n              }}\n            >\n              ‰∏≠Êñá\n            </a>\n          </p>\n          {skipFirstTime && gamesPlayedCount > 0 && (\n            <div id=\"stats\">\n              <p>\n                <Trans i18nKey=\"ui.gamesPlayed\" components={[<GamesCount />]} />\n              </p>\n              <div id=\"config\">\n                <p>\n                  <label>\n                    {t('ui.hardMode')}\n                    <Switch\n                      defaultChecked={HARD_MODE}\n                      onChange={(checked) => {\n                        LS.setItem(\n                          `${KEY_PREFIX}hardMode`,\n                          checked ? 'true' : 'false',\n                        );\n                        setTimeout(() => {\n                          location.reload();\n                        }, 310); // Wait for Switch to animate\n                      }}\n                    />\n                  </label>\n                </p>\n              </div>\n            </div>\n          )}\n          <h2>{t('howToPlay.heading')}</h2>\n          <p>{t('howToPlay.how1')}</p>\n          <p>{t('howToPlay.how2')}</p>\n          <p>{t('howToPlay.how3')}</p>\n          <div class=\"example-idiom\">\n            {'‰πùÁâõ‰∏ÄÊØõ'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 0 ? 'üü©' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotCorrect')}</p>\n          <div class=\"example-idiom\">\n            {'ÁêÜÊâÄÂΩìÁÑ∂'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 1 ? 'üüß' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotPresent')}</p>\n          <div class=\"example-idiom\">\n            {'Áà±‰∏çÈáäÊâã'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 2 ? '‚¨ú' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotAbsent')}</p>\n          <p>{t('howToPlay.how4')}</p>\n          {skipFirstTime ? (\n            <>\n              <h2>{t('about.heading')}</h2>\n              <p>\n                <Trans\n                  i18nKey=\"about.about1\"\n                  components={[\n                    <a\n                      href=\"https://github.com/cheeaun/chengyu-wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://cheeaun.com/projects/\" target=\"_blank\" />,\n                    <a\n                      href=\"https://www.nytimes.com/games/wordle/\"\n                      target=\"_blank\"\n                    />,\n                  ]}\n                />\n              </p>\n              <h2>{t('feedback.heading')}</h2>\n              <ul>\n                <li>\n                  <a href=\"https://t.me/+ykuhfiImLd1kNjk1\" target=\"_blank\">\n                    {t('feedback.telegramGroup')}\n                  </a>\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubDiscussions\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/discussions\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubIssues\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/issues\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <a href=\"https://twitter.com/cheeaun\" target=\"_blank\">\n                    {t('feedback.twitter')}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://t.me/cheeaun\" target=\"_blank\">\n                    {t('feedback.telegram')}\n                  </a>\n                </li>\n              </ul>\n              <details id=\"debugging-container\">\n                <summary>\n                  {t('debugging.heading')} ({__COMMIT_HASH__})\n                </summary>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmResetGame'))) {\n                      LS.removeItem(KEY_PREFIX + currentGame.id);\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.resetGame')}\n                </button>\n                &nbsp;\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmClearDB'))) {\n                      clearGames();\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.clearDB')}\n                </button>\n              </details>\n            </>\n          ) : (\n            <p>\n              <button\n                type=\"button\"\n                class=\"large\"\n                onClick={() => {\n                  setShowInfoModal(false);\n                  LS.setItem(KEY_PREFIX + 'skipFirstTime', 1);\n                  setSkipFirstTime(true);\n                }}\n              >\n                <PlayIcon width=\"20\" height=\"20\" /> {t('ui.startPlay')}\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n      {showDashboard && (\n        <div id=\"dashboard-modal\">\n          <CloseIcon\n            height=\"24\"\n            width=\"24\"\n            class=\"close\"\n            onClick={() => {\n              setShowDashboard(false);\n            }}\n          />\n          <IdiomsDashboard />\n        </div>\n      )}\n      <Toaster\n        containerStyle={{\n          top: '3.5em',\n        }}\n        toastOptions={{\n          className: 'toast',\n          style: {\n            pointerEvents: 'none',\n          },\n        }}\n      />\n    </>\n  );\n}\n","import '@fontsource/nunito/400.css';\nimport '@fontsource/nunito/700.css';\nimport 'rc-switch/assets/index.css';\nimport './index.css';\n\nimport { render } from 'preact';\nimport { App } from './app';\n\nimport en from '../i18n/en.json';\nimport zhCN from '../i18n/zh-CN.json';\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n      zh: {\n        translation: zhCN,\n      },\n    },\n    fallbackLng: 'en',\n    debug: /localhost/i.test(location.hostname),\n    detection: {\n      // localStorage is default\n      lookupLocalStorage: 'locale',\n      lookupCookie: 'locale',\n    },\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n  })\n  .then((t) => {\n    const updateLocale = () => {\n      document.documentElement.lang = i18n.resolvedLanguage;\n      document.title = document.querySelector(\n        'meta[property=\"og:title\"]',\n      ).content = t('app.title');\n      document.querySelector('meta[name=\"description\"]').content =\n        document.querySelector('meta[property=\"og:description\"]').content =\n          t('app.description');\n    };\n    i18n.on('languageChanged', updateLocale);\n    updateLocale();\n  });\n\nrender(<App />, document.getElementById('app'));\n","const getIdiomStates = (hiddenIdiom, testIdiom) => {\n  const letters1 =\n    typeof testIdiom === 'string' ? testIdiom.split('') : testIdiom;\n  const letters2 =\n    typeof hiddenIdiom === 'string' ? hiddenIdiom.split('') : hiddenIdiom;\n  const lettersLength = letters1.length;\n  const states = Array.from({ length: lettersLength }, () => '‚¨ú');\n  if (lettersLength !== letters2.length) {\n    throw new Error('idioms must have the same length');\n  }\n  const correctLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 === l2) {\n      states[i] = 'üü©';\n      correctLetterIndices.push(i);\n    }\n  }\n  const presentLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 !== l2) {\n      const l1Index = letters2.findIndex(\n        (l, index) =>\n          l === l1 &&\n          !correctLetterIndices.includes(index) &&\n          !presentLetterIndices.includes(index),\n      );\n      if (l1Index !== -1) {\n        states[i] = 'üüß';\n        presentLetterIndices.push(l1Index);\n      }\n    }\n  }\n  return states;\n};\n\nexport default getIdiomStates;\n"],"names":["jsx","jsxRuntime.jsx","jsxs","jsxRuntime.jsxs","Fragment","jsxRuntime.Fragment","py","pinyin","window","alert","text","toast","copy","fn","navigator","clipboard","writeText","then","catch","e","LS","key","localStorage","getItem","value","setItem","removeItem","fireEvent","plausible","idioms","idiomsTxt","split","games","gameIdioms","slice","map","row","id","idiom","KEY_PREFIX","HARD_MODE","JSON","parse","MAX_KEYS","MIN_IDIOMS","clearGames","i","length","startsWith","allGames","Map","game","set","replace","confettiRAF","getBoardGameState","boardStates","won","some","every","s","lastRow","lost","blankBoard","Array","from","v","getIdiomsKeys","prevPassedIdioms","prevKeys","depth","passedIdioms","Set","add","keys","idiomLetters","forEach","letter","consecutiveFailures","anotherIdiom","find","has","includes","j","size","MAX_LETTERS","nextIdiom","_toConsumableArray","_passedIdioms","_keys","randomIdiom","Math","floor","random","gameID","g","error","possibleIdioms","keySize","PlayIcon","props","_jsxs","viewBox","fill","_jsx","d","CloseIcon","startDate","Date","getTodayGame","diff","setHours","dayCount","max","Countdown","t","useTranslation","nextDay","nextStartDate","useState","hours","minutes","setMinutes","seconds","setSeconds","isNow","setIsNow","timer","setInterval","toString","padStart","clearInterval","href","class","CodeInput","code","url","readOnly","onClick","target","focus","select","Letter","state","style","opacity","stopConfetti","IdiomsDashboard","wonCount","lostCount","boardGame","gameState","board","title","colors","particleCount","angle","spread","origin","x","y","shapes","disableForReducedMotion","requestAnimationFrame","frame","gamesCount","Trans","i18nKey","values","gamesCountOverTotal","components","prefersColorSchemeSupported","matchMedia","media","use","LanguageDetector","initReactI18next","init","resources","en","translation","zh","zhCN","fallbackLng","debug","test","location","hostname","detection","lookupLocalStorage","lookupCookie","interpolation","escapeValue","updateLocale","documentElement","lang","i18n","resolvedLanguage","document","querySelector","content","on","showDashboard","setShowDashboard","showError","setShowError","showModal","setShowModal","showInfoModal","setShowInfoModal","colorScheme","setColorScheme","html","classList","remove","skipFirstTime","setSkipFirstTime","hash","currentGame","setCurrentGame","addEventListener","setBoard","cachedGame","useMemo","hiddenIdiom","testIdiom","letters1","letters2","lettersLength","states","Error","correctLetterIndices","push","presentLetterIndices","l1","l2","l1Index","findIndex","l","index","getIdiomStates","stringify","definition","setDefinition","r","json","currentStep","allPossibleIdioms","filter","keysPinyin","type","get","sort","a","b","localeCompare","console","groupCollapsed","log","join","groupEnd","ANSWER","currentGameKeys","currentGameKeysPinyin","handleLetter","overwrite","newBoard","columnIndex","correctKeys","presentKeys","absentKeys","handleEnter","currentIdiom","valid","handleBackspace","handleKey","metaKey","ctrlKey","toLowerCase","preventDefault","stopPropagation","reverse","pinyinLetter","possibleLettersSet","pinyins","sensitivity","possibleLetters","letterIndex","indexOf","nextLetter","breakLoop","removeEventListener","permalink","pathname","shortPermalink","host","emojiResults","trim","attempts","shareText","shareTextWithLink","hints","letters","absentHints","k","c","letterHints","pinyinHint","normalize","hintIndex","useRef","current","toasts","useToasterStore","visible","dismiss","gamesPlayedCount","Object","isPrefixed","precision","count","toPrecision","GamesCount","useCallback","width","height","stroke","className","tabIndex","hint","currentTarget","userAgent","_context","share","encodeURIComponent","confirm","rand","round","randGame","prompt","URL","hreflang","rel","undefined","changeLanguage","Switch","defaultChecked","onChange","checked","reload","__COMMIT_HASH__","Toaster","containerStyle","top","toastOptions","pointerEvents","getElementById"],"mappings":"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"}