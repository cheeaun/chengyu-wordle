{"version":3,"file":"index.263523e9.js","sources":["../../vite/modulepreload-polyfill","../../preact/jsx-runtime","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import * as jsxRuntime from \"/home/runner/work/chengyu-wordle/chengyu-wordle/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import { useState, useEffect, useMemo, useRef } from 'preact/hooks';\nimport pinyin from 'pinyin';\nconst py = (str) =>\n  pinyin(str, { segment: true, group: true }).flat().join(' ').trim();\nimport { useTranslation, Trans } from 'react-i18next';\n\n// Data\nimport idiomsTxt from '../game-data/all-idioms.txt?raw';\nconst idioms = idiomsTxt.split('\\n');\nimport gameIdioms from '../game-data/game-idioms.csv';\nconst games = gameIdioms.slice(1).map((row) => ({\n  id: row[0],\n  idiom: row[1],\n}));\n\nconst MAX_LETTERS = 4;\nconst MAX_KEYS = 20;\nconst MAX_STEPS = 6;\nconst MIN_IDIOMS = 6;\nconst KEY_PREFIX = 'cywd-';\n\nwindow.clearGames = () => {\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      localStorage.removeItem(key);\n    }\n  }\n};\n\nwindow.allGames = () => {\n  const allGames = new Map();\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      const game = JSON.parse(localStorage.getItem(key));\n      allGames.set(key.replace(KEY_PREFIX, ''), game);\n    }\n  }\n  return allGames;\n};\n\nconst getIdiomStates = (hiddenIdiom, testIdiom) => {\n  const letters1 =\n    typeof testIdiom === 'string' ? testIdiom.split('') : testIdiom;\n  const letters2 =\n    typeof hiddenIdiom === 'string' ? hiddenIdiom.split('') : hiddenIdiom;\n  const lettersLength = letters1.length;\n  const states = Array.from({ length: lettersLength }, () => '‚¨ú');\n  if (lettersLength !== letters2.length) {\n    throw new Error('idioms must have the same length');\n  }\n  const correctLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 === l2) {\n      states[i] = 'üü©';\n      correctLetterIndices.push(i);\n    }\n  }\n  const presentLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 !== l2) {\n      const l1Index = letters2.indexOf(l1);\n      if (\n        l1Index !== -1 &&\n        !correctLetterIndices.includes(l1Index) &&\n        !presentLetterIndices.includes(l1Index)\n      ) {\n        states[i] = 'üüß';\n        presentLetterIndices.push(l1Index);\n      }\n    }\n  }\n  return states;\n};\n\nwindow.getIdiomStates = getIdiomStates;\n\nconst getBoardGameState = (boardStates) => {\n  const won = boardStates.some(\n    (row) => !!row.length && row.every((s) => s === 'üü©'),\n  );\n  if (won) return 'won';\n  const lastRow = boardStates[boardStates.length - 1];\n  const lost = !!lastRow.length && lastRow.every((s) => s !== 'üü©');\n  if (lost) return 'lost';\n  return null;\n};\n\n// v = letter values of the row\n// s = submitted state of the row (after user press enter)\nconst blankBoard = () =>\n  Array.from({ length: MAX_STEPS }, () => ({\n    v: Array.from({ length: MAX_LETTERS }, () => ''),\n    s: false,\n  }));\n\nconst getIdiomsKeys = (idiom, prevPassedIdioms, prevKeys, depth = 0) => {\n  let passedIdioms = prevPassedIdioms || new Set();\n  passedIdioms.add(idiom);\n  let keys = prevKeys || new Set();\n  const idiomLetters = idiom.split('');\n  idiomLetters.forEach((letter) => keys.add(letter));\n  let consecutiveFailures = 0;\n  lettersCycle: for (let i = 0; i < games.length; i++) {\n    const letter = idiomLetters[(i + 1) % MAX_LETTERS];\n    const anotherIdiom = games.find(\n      ({ idiom }) => !passedIdioms.has(idiom) && idiom.includes(letter),\n    );\n    if (anotherIdiom) {\n      for (let j = 0; j < anotherIdiom.idiom.length; j++) {\n        keys.add(anotherIdiom.idiom[j]);\n\n        if (keys.size >= MAX_KEYS) {\n          break lettersCycle;\n        }\n      }\n      passedIdioms.add(anotherIdiom.idiom);\n      consecutiveFailures = 0;\n    } else {\n      if (consecutiveFailures >= MAX_LETTERS + 1) {\n        // Too many failures, stop\n        break lettersCycle;\n      }\n      consecutiveFailures += 1;\n    }\n  }\n\n  // Try the next idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const nextIdiom = [...passedIdioms][++depth];\n    if (nextIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        nextIdiom,\n        passedIdioms,\n        keys,\n        depth,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Still not enough keys, choose a random idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const randomIdiom = games[Math.floor(Math.random() * games.length)].idiom;\n    if (randomIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        randomIdiom,\n        passedIdioms,\n        keys,\n        0,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Something very wrong happened\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const gameID = games.find((g) => g.idiom === idiom)?.id;\n    console.error(gameID, {\n      possibleIdioms: passedIdioms.size,\n      keySize: keys.size,\n      consecutiveFailures,\n    });\n  }\n\n  return {\n    passedIdioms,\n    keys,\n  };\n};\n\n// Check if all idioms have enough keys/idioms\n// games.forEach((game) => {\n//   getIdiomsKeys(game.idiom);\n// });\n\nconst PlayIcon = (props) => (\n  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" {...props}>\n    <title>‚ñ∂Ô∏è</title>\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\n      clip-rule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst CloseIcon = (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <title>‚úñÔ∏è</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    ></path>\n  </svg>\n);\n\nconst startDate = new Date(2022, 0, 27); // 27 January 2022\nconst getTodayGame = () => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const diff = today - startDate;\n  const dayCount = Math.floor(diff / (1000 * 60 * 60 * 24));\n  return games[Math.max(0, dayCount % games.length)];\n};\n\n// Component that shows hours, minutes and seconds counting down to start of next day\nconst Countdown = () => {\n  const { t } = useTranslation();\n  let nextDay = new Date().setHours(0, 0, 0, 0) + 24 * 60 * 60 * 1000;\n  const nextStartDate = new Date(+startDate + 24 * 60 * 60 * 1000);\n  if (nextDay < nextStartDate) {\n    nextDay = nextStartDate;\n  }\n  const [hours, setHours] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [isNow, setIsNow] = useState(false);\n  // update countdown every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const diff = nextDay - new Date();\n      if (diff <= 0) {\n        setIsNow(true);\n        clearInterval(timer);\n        return;\n      }\n      setHours(\n        Math.floor(diff / (1000 * 60 * 60))\n          .toString()\n          .padStart(2, '0'),\n      );\n      setMinutes(\n        Math.floor((diff / (1000 * 60)) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n      setSeconds(\n        Math.floor((diff / 1000) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  if (isNow) {\n    return <a href=\"./\">{t('ui.countdownNow')}</a>;\n  }\n  return (\n    <time class=\"countdown\">\n      {hours}:{minutes}:{seconds}\n    </time>\n  );\n};\n\nconst CodeInput = ({ code, url }) => {\n  const { t } = useTranslation();\n  return (\n    code && (\n      <input\n        readOnly\n        value={code}\n        class=\"idiom-code\"\n        onClick={(e) => {\n          e.target.focus();\n          e.target.select();\n          navigator.clipboard\n            .writeText(url || code)\n            .then(() => {\n              alert(t('ui.copiedURL'));\n            })\n            .catch((e) => {});\n        }}\n      />\n    )\n  );\n};\n\nexport function App() {\n  const { t, i18n } = useTranslation();\n\n  const [skipFirstTime, setSkipFirstTime] = useState(\n    localStorage.getItem(`${KEY_PREFIX}skipFirstTime`) || false,\n  );\n\n  const [currentGame, setCurrentGame] = useState(\n    games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n  );\n  useEffect(() => {\n    window.addEventListener('hashchange', () => {\n      setCurrentGame(\n        games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n      );\n    });\n  }, []);\n\n  const [board, setBoard] = useState(\n    JSON.parse(localStorage.getItem(`${KEY_PREFIX}${currentGame.id}`))?.board ||\n      blankBoard(),\n  );\n  useEffect(() => {\n    const cachedGame = localStorage.getItem(`${KEY_PREFIX}${currentGame.id}`);\n    if (cachedGame) {\n      setBoard(JSON.parse(cachedGame).board);\n    } else {\n      setBoard(blankBoard());\n    }\n  }, [currentGame.id]);\n\n  const boardStates = useMemo(() => {\n    return board.map((row, i) => {\n      if (row.s) {\n        return getIdiomStates(currentGame.idiom, row.v);\n      }\n      return [];\n    });\n  }, [board]);\n\n  // Save to localStorage every time board changes\n  useEffect(() => {\n    // Only store in localStorage if board has some values\n    if (board && board.some((row) => row.v.some((v) => v))) {\n      localStorage.setItem(\n        `${KEY_PREFIX}${currentGame.id}`,\n        JSON.stringify({\n          board,\n          gameState: getBoardGameState(boardStates),\n        }),\n      );\n    }\n  }, [boardStates]);\n\n  const [definition, setDefinition] = useState(null);\n  useEffect(() => {\n    setDefinition(null);\n    fetch(\n      `https://baidu-hanyu-idiom.cheeaun.workers.dev/?wd=${currentGame.idiom}`,\n    )\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.definition) {\n          setDefinition(r.definition);\n        }\n      });\n  }, [currentGame.idiom]);\n\n  const currentStep = board?.findIndex((row) => row.s === false) || 0;\n\n  // Set current step to first empty item in board\n  const [showError, setShowError] = useState(false);\n  const [showModal, setShowModal] = useState(false); // false | won | lost\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const currentGameKeys = useMemo(() => {\n    const { keys } = getIdiomsKeys(currentGame.idiom);\n\n    // SPOILER inside console.log!\n    const allPossibleIdioms = idioms.filter((idiom) => {\n      // check if idiom contains 4 letters from keys\n      return idiom.split('').every((letter) => keys.has(letter));\n    });\n    const possibleIdioms = allPossibleIdioms\n      .map((idiom) => {\n        return `${idiom} (${py(idiom)})`;\n      })\n      .sort((a, b) => a.localeCompare(b, 'zh'));\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\n        `${possibleIdioms.length} Possible Idioms [${currentGame.id}] (${keys.size} keys):`,\n      );\n      console.log(`${possibleIdioms\n        .map((idiom, i) => `${i + 1}. ${idiom}`)\n        .join('\\n')}\n\nüö®SPOILERüö® Type 'ANSWER' to see the answer.`);\n      console.groupEnd();\n    }\n    window.ANSWER = `${currentGame.idiom} (${py(currentGame.idiom)})`;\n\n    return [...keys].sort((a, b) => a.localeCompare(b, 'zh'));\n  }, [currentGame.idiom]);\n\n  const handleLetter = (letter, overwrite = false) => {\n    if (!board[currentStep]) return;\n    if (gameState) return;\n    const newBoard = [...board];\n    let columnIndex = newBoard[currentStep].v.findIndex((v) => v === '');\n    if (overwrite) {\n      if (columnIndex === -1) {\n        columnIndex = 3;\n      } else {\n        columnIndex--;\n      }\n    }\n    if (columnIndex !== -1) {\n      newBoard[currentStep].v[columnIndex] = letter;\n      setBoard(newBoard);\n    }\n  };\n\n  const correctKeys = new Set();\n  const presentKeys = new Set();\n  const absentKeys = new Set();\n  board.forEach((row, i) => {\n    if (!row.s) return;\n    row.v.forEach((letter, j) => {\n      const state = boardStates[i][j];\n      if (state === 'üü©') {\n        correctKeys.add(letter);\n      } else if (state === 'üüß') {\n        presentKeys.add(letter);\n      } else if (state === '‚¨ú') {\n        absentKeys.add(letter);\n      }\n    });\n  });\n\n  const handleEnter = () => {\n    if (gameState) return;\n    console.log('handleEnter');\n    setShowError(false);\n\n    const row = board[currentStep];\n    const currentIdiom = row.v.join('');\n    const valid = idioms.includes(currentIdiom);\n    if (valid) {\n      row.s = true;\n      setBoard([...board]);\n    } else {\n      setTimeout(() => {\n        setShowError(true);\n      }, 10);\n    }\n    console.log({ currentIdiom, valid });\n  };\n\n  const gameState = useMemo(() => {\n    return getBoardGameState(boardStates);\n  }, [boardStates]);\n\n  useEffect(() => {\n    if (gameState === 'won') {\n      setShowModal('won');\n    } else if (gameState === 'lost') {\n      setShowModal('lost');\n    } else {\n      setShowModal(false);\n    }\n  }, [gameState]);\n\n  const handleBackspace = () => {\n    if (gameState) return;\n    const newBoard = [...board];\n    // Get last column with value\n    const row = newBoard[currentStep];\n    if (!row || row.s) return;\n    let columnIndex = -1;\n    for (let i = row.v.length - 1; i >= 0; i--) {\n      if (row.v[i] !== '') {\n        columnIndex = i;\n        break;\n      }\n    }\n    if (columnIndex !== -1) {\n      row.v[columnIndex] = '';\n      setBoard(newBoard);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', (e) => {\n      // Enter\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    const handleKey = (e) => {\n      if (gameState) return;\n      if (e.metaKey || e.ctrlKey || !e.key) {\n        return;\n      }\n      const key = e.key.toLowerCase();\n      if (key === 'enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        handleEnter();\n      } else if (key === 'backspace') {\n        e.preventDefault();\n        handleBackspace();\n      } else if (/^arrow(left|right)/i.test(key)) {\n        // This will cycle through all letters with same starting pinyin letter\n        const row = board[currentStep];\n        const value = [...row.v].reverse().find((v) => v !== '');\n        if (value) {\n          const pinyinLetter = py(value)[0];\n          const possibleLetters = currentGameKeys.filter(\n            (k) => py(k)[0] === pinyinLetter,\n          );\n          if (possibleLetters.length <= 1) return;\n          const letterIndex = possibleLetters.indexOf(value);\n          const nextLetter =\n            key === 'arrowright'\n              ? possibleLetters[(letterIndex + 1) % possibleLetters.length]\n              : possibleLetters[\n                  (letterIndex + possibleLetters.length - 1) %\n                    possibleLetters.length\n                ];\n          if (nextLetter) {\n            handleLetter(nextLetter, true);\n          }\n        }\n      } else {\n        // Type \"a\" will trigger the first letter pinyin that starts with \"ƒÅ\"\n        const letter = currentGameKeys.find((k) => {\n          const firstPinyinChar = py(k)[0];\n          return (\n            firstPinyinChar.localeCompare(key, 'en', {\n              sensitivity: 'base',\n            }) === 0\n          );\n        });\n        if (letter) {\n          e.preventDefault();\n          handleLetter(letter);\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKey);\n    return () => {\n      document.removeEventListener('keydown', handleKey);\n    };\n  }, [currentGameKeys, board, currentStep, gameState]);\n\n  const permalink = location.origin + location.pathname + '#' + currentGame.id;\n  const emojiResults = boardStates\n    .map((row) => row.join(''))\n    .join('\\n')\n    .trim();\n  const attempts = gameState === 'won' ? emojiResults.split('\\n').length : 'X';\n  const shareText = `${t('app.title')} [${\n    currentGame.id\n  }] ${attempts}/6\\n\\n${emojiResults}`;\n  const shareTextWithLink = `${shareText}\\n\\n${permalink}`;\n\n  const hints = useMemo(() => {\n    const hints = [];\n    const letters = currentGame.idiom.split('');\n\n    // 1. Absent letters hints\n    const absentHints = currentGameKeys\n      .filter((k) => {\n        return !letters.includes(k) && !absentKeys.has(k);\n      })\n      .slice(0, -1) // Don't reveal at least one letter\n      .slice(0, 3) // But still max 3 letters\n      .map((letter) => {\n        return t('hints.absentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...absentHints);\n\n    // 2. Definition hints\n    if (\n      definition?.zh &&\n      letters.filter((c) => definition.zh.includes(c)).length <= 2\n      // Only show hint if definition contains 2 or less of the characters in the idiom\n      // Else, the definition basically revealed the answer\n    ) {\n      hints.push(`‚ÑπÔ∏è ${definition.zh}`);\n    }\n    if (definition?.en) hints.push(`‚ÑπÔ∏è ${definition.en}`);\n\n    // 3. Letter hints\n    const letterHints = letters\n      .filter((c) => !correctKeys.has(c) && !presentKeys.has(c))\n      .slice(0, -1) // Don't reveal at least one letter\n      .map((letter) => {\n        return t('hints.presentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...letterHints);\n\n    // 4. Pinyin hints\n    const pinyinHint = letters\n      .map((c) => py(c)[0])\n      .join('')\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '');\n    // https://stackoverflow.com/a/37511463/20838\n    hints.push(t('hints.abbreviatedPinyin', { pinyinHint }));\n\n    return hints;\n  }, [correctKeys, currentGame.idiom, definition]);\n  const hintIndex = useState(0);\n  useEffect(() => {\n    hintIndex.current = 0;\n  }, [currentGame.idiom]);\n  const showHint = () => {\n    if (gameState) return;\n    const hint = hints[hintIndex.current];\n    hintIndex.current = (hintIndex.current + 1) % hints.length;\n    alert(hint);\n  };\n\n  return (\n    <>\n      <header>\n        <div class=\"inner\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowInfoModal(true);\n            }}\n          >\n            <svg\n              width=\"16\"\n              height=\"16\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <title>‚ÑπÔ∏è</title>\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          </button>\n          <h1>{t('app.title')}</h1>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowModal(gameState || 'play');\n            }}\n          >\n            {t('common.play')}\n          </button>\n        </div>\n      </header>\n      <div id=\"board\">\n        {board.map((row, index) => {\n          return (\n            <div\n              className={`row ${\n                currentStep === index && showError ? 'error' : ''\n              } ${currentStep === index ? 'current' : ''}`}\n              key={index}\n            >\n              {row.v.map((letter, i) => (\n                <div\n                  className={`letter ${letter ? 'lettered' : ''} ${\n                    boardStates[index][i] ?? ''\n                  } ${boardStates[index][i] ? 'üåà' : ''}`}\n                  key={i}\n                >\n                  <ruby>\n                    {letter || <span style={{ opacity: 0 }}>‰∏Ä</span>}\n                    <rp>(</rp>\n                    <rt>{py(letter) || <>&nbsp;</>}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </div>\n              ))}\n            </div>\n          );\n        })}\n      </div>\n      <div id=\"keyboard\">\n        <div class=\"inner\">\n          <div class=\"keys\">\n            {currentGameKeys.map((key, i) => (\n              <button\n                class={`${correctKeys.has(key) ? 'üü©' : ''} ${\n                  presentKeys.has(key) ? 'üüß' : ''\n                } ${absentKeys.has(key) ? '‚¨ú' : ''}`}\n                type=\"button\"\n                tabIndex={-1}\n                onClick={() => {\n                  handleLetter(key);\n                }}\n              >\n                <ruby>\n                  {key}\n                  <rp>(</rp>\n                  <rt>{py(key)}</rt>\n                  <rp>)</rp>\n                </ruby>\n              </button>\n            ))}\n          </div>\n          <div class=\"row\">\n            <button type=\"button\" onClick={handleEnter} tabIndex={-1}>\n              {t('common.enter')}\n            </button>\n            <button type=\"button\" class=\"stuck\" onClick={showHint}>\n              {t('ui.hint')}\n            </button>\n            <button type=\"button\" onClick={handleBackspace} tabIndex={-1}>\n              <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"></path>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"modal\"\n        class={showModal ? 'appear' : ''}\n        onClick={(e) => {\n          if (e.target === e.currentTarget) setShowModal(null);\n        }}\n      >\n        <CloseIcon\n          height=\"24\"\n          width=\"24\"\n          class=\"close\"\n          onClick={() => {\n            setShowModal(null);\n          }}\n        />\n        <div class=\"content\">\n          <h2>\n            {showModal === 'won'\n              ? 'üéâüéâüéâ'\n              : showModal === 'lost'\n              ? 'üò≠üò≠üò≠'\n              : 'üëæüëæüëæ'}\n          </h2>\n          {showModal === 'play' && (\n            <p>\n              <CodeInput code={currentGame.id} url={permalink} />\n            </p>\n          )}\n          {/(won|lost)/i.test(showModal) && (\n            <>\n              <p>\n                <b class=\"answer\">\n                  <ruby>\n                    {currentGame.idiom}\n                    <rp>(</rp>\n                    <rt>{py(currentGame.idiom)}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </b>\n                <div class=\"definition\">\n                  {definition?.zh}\n                  {definition?.zh && definition?.en && <br />}\n                  {definition?.en}\n                </div>\n                <small>\n                  <a\n                    href={`https://hanyu.baidu.com/s?wd=${currentGame.idiom}&from=zici`}\n                    target=\"_blank\"\n                  >\n                    üìñ {t('glossary.baidu')}\n                  </a>\n                </small>\n              </p>\n              <div class=\"results\">{shareTextWithLink}</div>\n              <button\n                id=\"share\"\n                onClick={async () => {\n                  try {\n                    if (\n                      // Edge/ or Edg/\n                      /edge?\\//i.test(navigator.userAgent) ||\n                      // Windows\n                      /windows/.test(navigator.userAgent)\n                    ) {\n                      throw new Error('Web Share API not working well here');\n                    }\n                    await navigator.share({ text: shareTextWithLink });\n                  } catch (e) {\n                    try {\n                      await navigator.clipboard.writeText(shareTextWithLink);\n                      alert(t('ui.copiedResults'));\n                    } catch (e2) {}\n                  }\n                }}\n              >\n                {t('common.share')}{' '}\n                <svg height=\"16\" width=\"16\" viewBox=\"0 0 24 24\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n                  ></path>\n                </svg>\n              </button>\n              &nbsp;&nbsp;\n              <a\n                class=\"button tweet\"\n                href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n                  shareTextWithLink,\n                )}`}\n                target=\"_blank\"\n              >\n                <svg\n                  height=\"16\"\n                  width=\"16\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <title>{t('common.tweet')}</title>\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"\n                  />\n                </svg>\n              </a>\n              &nbsp;&nbsp;\n              <CodeInput code={currentGame.id} url={permalink} />\n            </>\n          )}\n          <div class=\"footer\">\n            {/won|lost/i.test(gameState) &&\n              getTodayGame().id === currentGame.id && (\n                <p>\n                  <big>\n                    <Trans\n                      i18nKey=\"ui.nextIdiom\"\n                      components={[<Countdown />]}\n                    />\n                  </big>\n                </p>\n              )}\n            <div>\n              {getTodayGame().id !== currentGame.id && (\n                <>\n                  <a href=\"./\" class=\"button\">\n                    <PlayIcon width={20} height={20} /> {t('ui.playTodayGame')}\n                  </a>\n                  <br />\n                </>\n              )}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  const yes = confirm(t('ui.confirmRandom'));\n                  if (yes) {\n                    const rand = Math.round(Math.random() * (games.length - 1));\n                    const randGame = games[rand];\n                    location.hash = `#${randGame.id}`;\n                    setShowModal(null);\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.random')}\n              </button>{' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  // Ask user for idiom ID, load game if ID is valid\n                  let id = prompt(t('ui.promptIdiom'));\n                  try {\n                    id = new URL(id).hash.slice(1);\n                  } catch (e) {}\n                  if (id) {\n                    const game = games.find((g) => g.id === id);\n                    if (game) {\n                      location.hash = `#${game.id}`;\n                      setShowModal(null);\n                    } else {\n                      alert('Invalid idiom ID');\n                    }\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.choose')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"info-modal\"\n        class={showInfoModal || !skipFirstTime ? 'appear' : ''}\n      >\n        {skipFirstTime && (\n          <CloseIcon\n            height=\"32\"\n            width=\"32\"\n            class=\"close\"\n            onClick={() => {\n              setShowInfoModal(false);\n            }}\n          />\n        )}\n        <div class=\"content\">\n          <p class=\"locale-selector\">\n            üåê{' '}\n            <a\n              href=\"./?lng=en\"\n              hreflang=\"en\"\n              rel={i18n.resolvedLanguage === 'en' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'en' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('en');\n              }}\n            >\n              English\n            </a>{' '}\n            &#8901;{' '}\n            <a\n              href=\"./?lng=zh-CN\"\n              hreflang=\"zh-CN\"\n              rel={i18n.resolvedLanguage === 'zh-CN' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'zh-CN' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('zh-CN');\n              }}\n            >\n              ‰∏≠Êñá\n            </a>\n          </p>\n          <h2>{t('howToPlay.heading')}</h2>\n          <p>{t('howToPlay.how1')}</p>\n          <p>{t('howToPlay.how2')}</p>\n          <p>{t('howToPlay.how3')}</p>\n          <ul>\n            <li>üü©‚¨ú‚¨ú‚¨ú {t('howToPlay.spotCorrect')}</li>\n            <li>‚¨úüüß‚¨ú‚¨ú {t('howToPlay.spotPresent')}</li>\n            <li>\n              ‚¨ú‚¨ú<span style={{ opacity: 0.5 }}>‚¨õ</span>‚¨ú{' '}\n              {t('howToPlay.spotAbsent')}\n            </li>\n          </ul>\n          <p>{t('howToPlay.how4')}</p>\n          {skipFirstTime ? (\n            <>\n              <h2>{t('about.heading')}</h2>\n              <p>\n                <Trans\n                  i18nKey=\"about.about1\"\n                  components={[\n                    <a\n                      href=\"https://github.com/cheeaun/chengyu-wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://cheeaun.com\" target=\"_blank\" />,\n                    <a\n                      href=\"https://www.powerlanguage.co.uk/wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://powerlanguage.co.uk/\" target=\"_blank\" />,\n                  ]}\n                />\n              </p>\n              <h2>{t('feedback.heading')}</h2>\n              <ul>\n                <li>\n                  <a href=\"https://t.me/+ykuhfiImLd1kNjk1\" target=\"_blank\">\n                    {t('feedback.telegramGroup')}\n                  </a>\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubDiscussions\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/discussions\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubIssues\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/issues\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <a href=\"https://twitter.com/cheeaun\" target=\"_blank\">\n                    {t('feedback.twitter')}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://t.me/cheeaun\" target=\"_blank\">\n                    {t('feedback.telegram')}\n                  </a>\n                </li>\n              </ul>\n              <details id=\"debugging-container\">\n                <summary>{t('debugging.heading')}</summary>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmResetGame'))) {\n                      localStorage.removeItem(KEY_PREFIX + currentGame.id);\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.resetGame')}\n                </button>\n                &nbsp;\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmClearDB'))) {\n                      clearGames();\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.clearDB')}\n                </button>\n              </details>\n            </>\n          ) : (\n            <p>\n              <button\n                type=\"button\"\n                class=\"large\"\n                onClick={() => {\n                  setShowInfoModal(false);\n                  localStorage.setItem(KEY_PREFIX + 'skipFirstTime', 1);\n                  setSkipFirstTime(true);\n                }}\n              >\n                <PlayIcon width=\"20\" height=\"20\" /> {t('ui.startPlay')}\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n","import { render } from 'preact';\nimport { App } from './app';\nimport './index.css';\n\nimport en from '../i18n/en.json';\nimport zhCN from '../i18n/zh-CN.json';\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n      'zh-CN': {\n        translation: zhCN,\n      },\n    },\n    fallbackLng: 'en',\n    debug: /localhost/i.test(location.hostname),\n    detection: {\n      // localStorage is default\n      lookupLocalStorage: 'locale',\n      lookupCookie: 'locale',\n    },\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n  })\n  .then((t) => {\n    const updateLocale = () => {\n      document.documentElement.lang = i18n.resolvedLanguage;\n      document.title = document.querySelector('meta[name=\"title\"]').content =\n        t('app.title');\n      document.querySelector('meta[name=\"description\"]').content =\n        t('app.description');\n    };\n    i18n.on('languageChanged', updateLocale);\n    updateLocale();\n  });\n\nrender(<App />, document.getElementById('app'));\n"],"names":["jsxRuntime.jsx","jsxRuntime.jsxs","jsxRuntime.Fragment","py","str","pinyin","segment","group","flat","join","trim","idioms","idiomsTxt","split","games","gameIdioms","slice","map","row","id","idiom","MAX_LETTERS","MAX_KEYS","MAX_STEPS","MIN_IDIOMS","KEY_PREFIX","window","clearGames","i","localStorage","length","key","startsWith","removeItem","allGames","Map","game","JSON","parse","getItem","set","replace","getIdiomStates","hiddenIdiom","testIdiom","letters1","letters2","lettersLength","states","Array","from","Error","correctLetterIndices","l1","l2","push","presentLetterIndices","l1Index","indexOf","includes","getBoardGameState","boardStates","some","every","s","lastRow","blankBoard","v","getIdiomsKeys","prevPassedIdioms","prevKeys","depth","passedIdioms","Set","add","keys","idiomLetters","forEach","letter","consecutiveFailures","anotherIdiom","find","has","j","size","nextIdiom","_passedIdioms","_keys","randomIdiom","Math","floor","random","gameID","g","error","possibleIdioms","keySize","PlayIcon","props","_jsxs","_jsx","CloseIcon","startDate","Date","getTodayGame","diff","today","setHours","dayCount","max","Countdown","t","useTranslation","nextDay","nextStartDate","hours","useState","minutes","setMinutes","seconds","setSeconds","isNow","setIsNow","timer","setInterval","toString","padStart","clearInterval","CodeInput","code","url","e","target","focus","select","clipboard","writeText","then","catch","i18n","skipFirstTime","setSkipFirstTime","currentGame","setCurrentGame","location","hash","addEventListener","board","setBoard","cachedGame","useMemo","setItem","stringify","gameState","definition","setDefinition","r","json","currentStep","findIndex","showError","setShowError","showModal","setShowModal","showInfoModal","setShowInfoModal","currentGameKeys","allPossibleIdioms","filter","sort","a","b","localeCompare","console","groupCollapsed","log","groupEnd","ANSWER","handleLetter","overwrite","newBoard","columnIndex","correctKeys","presentKeys","absentKeys","state","handleEnter","currentIdiom","valid","handleBackspace","preventDefault","stopPropagation","handleKey","metaKey","ctrlKey","toLowerCase","test","value","reverse","pinyinLetter","possibleLetters","k","letterIndex","nextLetter","firstPinyinChar","sensitivity","removeEventListener","permalink","origin","pathname","emojiResults","attempts","shareTextWithLink","hints","letters","absentHints","zh","c","en","letterHints","pinyinHint","normalize","hintIndex","current","showHint","hint","index","opacity","currentTarget","navigator","userAgent","share","text","encodeURIComponent","confirm","rand","round","randGame","prompt","URL","resolvedLanguage","undefined","changeLanguage","reload","use","LanguageDetector","initReactI18next","init","resources","translation","zhCN","fallbackLng","debug","hostname","detection","lookupLocalStorage","lookupCookie","interpolation","escapeValue","updateLocale","documentElement","lang","title","document","querySelector","content","on","render","getElementById"],"mappings":"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"}