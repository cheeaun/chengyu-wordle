{"version":3,"file":"index.263523e9.js","sources":["../../vite/modulepreload-polyfill","../../preact/jsx-runtime","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import * as jsxRuntime from \"/home/runner/work/chengyu-wordle/chengyu-wordle/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import { useState, useEffect, useMemo, useRef } from 'preact/hooks';\nimport pinyin from 'pinyin';\nconst py = (str) =>\n  pinyin(str, { segment: true, group: true }).flat().join(' ').trim();\nimport { useTranslation, Trans } from 'react-i18next';\n\n// Data\nimport idiomsTxt from '../game-data/all-idioms.txt?raw';\nconst idioms = idiomsTxt.split('\\n');\nimport gameIdioms from '../game-data/game-idioms.csv';\nconst games = gameIdioms.slice(1).map((row) => ({\n  id: row[0],\n  idiom: row[1],\n}));\n\nconst MAX_LETTERS = 4;\nconst MAX_KEYS = 20;\nconst MAX_STEPS = 6;\nconst MIN_IDIOMS = 6;\nconst KEY_PREFIX = 'cywd-';\n\nwindow.clearGames = () => {\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      localStorage.removeItem(key);\n    }\n  }\n};\n\nwindow.allGames = () => {\n  const allGames = new Map();\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      const game = JSON.parse(localStorage.getItem(key));\n      allGames.set(key.replace(KEY_PREFIX, ''), game);\n    }\n  }\n  return allGames;\n};\n\nconst getIdiomStates = (hiddenIdiom, testIdiom) => {\n  const letters1 =\n    typeof testIdiom === 'string' ? testIdiom.split('') : testIdiom;\n  const letters2 =\n    typeof hiddenIdiom === 'string' ? hiddenIdiom.split('') : hiddenIdiom;\n  const lettersLength = letters1.length;\n  const states = Array.from({ length: lettersLength }, () => '‚¨ú');\n  if (lettersLength !== letters2.length) {\n    throw new Error('idioms must have the same length');\n  }\n  const correctLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 === l2) {\n      states[i] = 'üü©';\n      correctLetterIndices.push(i);\n    }\n  }\n  const presentLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 !== l2) {\n      const l1Index = letters2.indexOf(l1);\n      if (\n        l1Index !== -1 &&\n        !correctLetterIndices.includes(l1Index) &&\n        !presentLetterIndices.includes(l1Index)\n      ) {\n        states[i] = 'üüß';\n        presentLetterIndices.push(l1Index);\n      }\n    }\n  }\n  return states;\n};\n\nwindow.getIdiomStates = getIdiomStates;\n\nconst getBoardGameState = (boardStates) => {\n  const won = boardStates.some(\n    (row) => !!row.length && row.every((s) => s === 'üü©'),\n  );\n  if (won) return 'won';\n  const lastRow = boardStates[boardStates.length - 1];\n  const lost = !!lastRow.length && lastRow.every((s) => s !== 'üü©');\n  if (lost) return 'lost';\n  return null;\n};\n\n// v = letter values of the row\n// s = submitted state of the row (after user press enter)\nconst blankBoard = () =>\n  Array.from({ length: MAX_STEPS }, () => ({\n    v: Array.from({ length: MAX_LETTERS }, () => ''),\n    s: false,\n  }));\n\nconst getIdiomsKeys = (idiom, prevPassedIdioms, prevKeys, depth = 0) => {\n  let passedIdioms = prevPassedIdioms || new Set();\n  passedIdioms.add(idiom);\n  let keys = prevKeys || new Set();\n  const idiomLetters = idiom.split('');\n  idiomLetters.forEach((letter) => keys.add(letter));\n  let consecutiveFailures = 0;\n  lettersCycle: for (let i = 0; i < games.length; i++) {\n    const letter = idiomLetters[(i + 1) % MAX_LETTERS];\n    const anotherIdiom = games.find(\n      ({ idiom }) => !passedIdioms.has(idiom) && idiom.includes(letter),\n    );\n    if (anotherIdiom) {\n      for (let j = 0; j < anotherIdiom.idiom.length; j++) {\n        keys.add(anotherIdiom.idiom[j]);\n\n        if (keys.size >= MAX_KEYS) {\n          break lettersCycle;\n        }\n      }\n      passedIdioms.add(anotherIdiom.idiom);\n      consecutiveFailures = 0;\n    } else {\n      if (consecutiveFailures >= MAX_LETTERS + 1) {\n        // Too many failures, stop\n        break lettersCycle;\n      }\n      consecutiveFailures += 1;\n    }\n  }\n\n  // Try the next idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const nextIdiom = [...passedIdioms][++depth];\n    if (nextIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        nextIdiom,\n        passedIdioms,\n        keys,\n        depth,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Still not enough keys, choose a random idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const randomIdiom = games[Math.floor(Math.random() * games.length)].idiom;\n    if (randomIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        randomIdiom,\n        passedIdioms,\n        keys,\n        0,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Something very wrong happened\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const gameID = games.find((g) => g.idiom === idiom)?.id;\n    console.error(gameID, {\n      possibleIdioms: passedIdioms.size,\n      keySize: keys.size,\n      consecutiveFailures,\n    });\n  }\n\n  return {\n    passedIdioms,\n    keys,\n  };\n};\n\n// Check if all idioms have enough keys/idioms\n// games.forEach((game) => {\n//   getIdiomsKeys(game.idiom);\n// });\n\nconst PlayIcon = (props) => (\n  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" {...props}>\n    <title>‚ñ∂Ô∏è</title>\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\n      clip-rule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst CloseIcon = (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <title>‚úñÔ∏è</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    ></path>\n  </svg>\n);\n\nconst startDate = new Date(2022, 0, 27); // 27 January 2022\nconst getTodayGame = () => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const diff = today - startDate;\n  const dayCount = Math.floor(diff / (1000 * 60 * 60 * 24));\n  return games[Math.max(0, dayCount % games.length)];\n};\n\n// Component that shows hours, minutes and seconds counting down to start of next day\nconst Countdown = () => {\n  const { t } = useTranslation();\n  let nextDay = new Date().setHours(0, 0, 0, 0) + 24 * 60 * 60 * 1000;\n  const nextStartDate = new Date(+startDate + 24 * 60 * 60 * 1000);\n  if (nextDay < nextStartDate) {\n    nextDay = nextStartDate;\n  }\n  const [hours, setHours] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [isNow, setIsNow] = useState(false);\n  // update countdown every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const diff = nextDay - new Date();\n      if (diff <= 0) {\n        setIsNow(true);\n        clearInterval(timer);\n        return;\n      }\n      setHours(\n        Math.floor(diff / (1000 * 60 * 60))\n          .toString()\n          .padStart(2, '0'),\n      );\n      setMinutes(\n        Math.floor((diff / (1000 * 60)) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n      setSeconds(\n        Math.floor((diff / 1000) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  if (isNow) {\n    return <a href=\"./\">{t('ui.countdownNow')}</a>;\n  }\n  return (\n    <time class=\"countdown\">\n      {hours}:{minutes}:{seconds}\n    </time>\n  );\n};\n\nconst CodeInput = ({ code, url }) => {\n  const { t } = useTranslation();\n  return (\n    code && (\n      <input\n        readOnly\n        value={code}\n        class=\"idiom-code\"\n        onClick={(e) => {\n          e.target.focus();\n          e.target.select();\n          navigator.clipboard\n            .writeText(url || code)\n            .then(() => {\n              alert(t('ui.copiedURL'));\n            })\n            .catch((e) => {});\n        }}\n      />\n    )\n  );\n};\n\nexport function App() {\n  const { t, i18n } = useTranslation();\n\n  const [skipFirstTime, setSkipFirstTime] = useState(\n    localStorage.getItem(`${KEY_PREFIX}skipFirstTime`) || false,\n  );\n\n  const [currentGame, setCurrentGame] = useState(\n    games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n  );\n  useEffect(() => {\n    window.addEventListener('hashchange', () => {\n      setCurrentGame(\n        games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n      );\n    });\n  }, []);\n\n  const [board, setBoard] = useState(\n    JSON.parse(localStorage.getItem(`${KEY_PREFIX}${currentGame.id}`))?.board ||\n      blankBoard(),\n  );\n  useEffect(() => {\n    const cachedGame = localStorage.getItem(`${KEY_PREFIX}${currentGame.id}`);\n    if (cachedGame) {\n      setBoard(JSON.parse(cachedGame).board);\n    } else {\n      setBoard(blankBoard());\n    }\n  }, [currentGame.id]);\n\n  const boardStates = useMemo(() => {\n    return board.map((row, i) => {\n      if (row.s) {\n        return getIdiomStates(currentGame.idiom, row.v);\n      }\n      return [];\n    });\n  }, [board]);\n\n  // Save to localStorage every time board changes\n  useEffect(() => {\n    // Only store in localStorage if board has some values\n    if (board && board.some((row) => row.v.some((v) => v))) {\n      localStorage.setItem(\n        `${KEY_PREFIX}${currentGame.id}`,\n        JSON.stringify({\n          board,\n          gameState: getBoardGameState(boardStates),\n        }),\n      );\n    }\n  }, [boardStates]);\n\n  const [definition, setDefinition] = useState(null);\n  useEffect(() => {\n    setDefinition(null);\n    fetch(\n      `https://baidu-hanyu-idiom.cheeaun.workers.dev/?wd=${currentGame.idiom}`,\n    )\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.definition) {\n          setDefinition(r.definition);\n        }\n      });\n  }, [currentGame.idiom]);\n\n  const currentStep = board?.findIndex((row) => row.s === false) || 0;\n\n  // Set current step to first empty item in board\n  const [showError, setShowError] = useState(false);\n  const [showModal, setShowModal] = useState(false); // false | won | lost\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const currentGameKeys = useMemo(() => {\n    const { keys } = getIdiomsKeys(currentGame.idiom);\n\n    // SPOILER inside console.log!\n    const allPossibleIdioms = idioms.filter((idiom) => {\n      // check if idiom contains 4 letters from keys\n      return idiom.split('').every((letter) => keys.has(letter));\n    });\n    const possibleIdioms = allPossibleIdioms\n      .map((idiom) => {\n        return `${idiom} (${py(idiom)})`;\n      })\n      .sort((a, b) => a.localeCompare(b, 'zh'));\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\n        `${possibleIdioms.length} Possible Idioms [${currentGame.id}] (${keys.size} keys):`,\n      );\n      console.log(`${possibleIdioms\n        .map((idiom, i) => `${i + 1}. ${idiom}`)\n        .join('\\n')}\n\nüö®SPOILERüö® Type 'ANSWER' to see the answer.`);\n      console.groupEnd();\n    }\n    window.ANSWER = `${currentGame.idiom} (${py(currentGame.idiom)})`;\n\n    return [...keys].sort((a, b) => a.localeCompare(b, 'zh'));\n  }, [currentGame.idiom]);\n\n  const handleLetter = (letter, overwrite = false) => {\n    if (!board[currentStep]) return;\n    if (gameState) return;\n    const newBoard = [...board];\n    let columnIndex = newBoard[currentStep].v.findIndex((v) => v === '');\n    if (overwrite) {\n      if (columnIndex === -1) {\n        columnIndex = 3;\n      } else {\n        columnIndex--;\n      }\n    }\n    if (columnIndex !== -1) {\n      newBoard[currentStep].v[columnIndex] = letter;\n      setBoard(newBoard);\n    }\n  };\n\n  const correctKeys = new Set();\n  const presentKeys = new Set();\n  const absentKeys = new Set();\n  board.forEach((row, i) => {\n    if (!row.s) return;\n    row.v.forEach((letter, j) => {\n      const state = boardStates[i][j];\n      if (state === 'üü©') {\n        correctKeys.add(letter);\n      } else if (state === 'üüß') {\n        presentKeys.add(letter);\n      } else if (state === '‚¨ú') {\n        absentKeys.add(letter);\n      }\n    });\n  });\n\n  const handleEnter = () => {\n    if (gameState) return;\n    console.log('handleEnter');\n    setShowError(false);\n\n    const row = board[currentStep];\n    const currentIdiom = row.v.join('');\n    const valid = idioms.includes(currentIdiom);\n    if (valid) {\n      row.s = true;\n      setBoard([...board]);\n    } else {\n      setTimeout(() => {\n        setShowError(true);\n      }, 10);\n    }\n    console.log({ currentIdiom, valid });\n  };\n\n  const gameState = useMemo(() => {\n    return getBoardGameState(boardStates);\n  }, [boardStates]);\n\n  useEffect(() => {\n    if (gameState === 'won') {\n      setShowModal('won');\n    } else if (gameState === 'lost') {\n      setShowModal('lost');\n    } else {\n      setShowModal(false);\n    }\n  }, [gameState]);\n\n  const handleBackspace = () => {\n    if (gameState) return;\n    const newBoard = [...board];\n    // Get last column with value\n    const row = newBoard[currentStep];\n    if (!row || row.s) return;\n    let columnIndex = -1;\n    for (let i = row.v.length - 1; i >= 0; i--) {\n      if (row.v[i] !== '') {\n        columnIndex = i;\n        break;\n      }\n    }\n    if (columnIndex !== -1) {\n      row.v[columnIndex] = '';\n      setBoard(newBoard);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', (e) => {\n      // Enter\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    const handleKey = (e) => {\n      if (gameState) return;\n      if (e.metaKey || e.ctrlKey || !e.key) {\n        return;\n      }\n      const key = e.key.toLowerCase();\n      if (key === 'enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        handleEnter();\n      } else if (key === 'backspace') {\n        e.preventDefault();\n        handleBackspace();\n      } else if (/^arrow(left|right)/i.test(key)) {\n        // This will cycle through all letters with same starting pinyin letter\n        const row = board[currentStep];\n        const value = [...row.v].reverse().find((v) => v !== '');\n        if (value) {\n          const pinyinLetter = py(value)[0];\n          const possibleLetters = currentGameKeys.filter(\n            (k) => py(k)[0] === pinyinLetter,\n          );\n          if (possibleLetters.length <= 1) return;\n          const letterIndex = possibleLetters.indexOf(value);\n          const nextLetter =\n            key === 'arrowright'\n              ? possibleLetters[(letterIndex + 1) % possibleLetters.length]\n              : possibleLetters[\n                  (letterIndex + possibleLetters.length - 1) %\n                    possibleLetters.length\n                ];\n          if (nextLetter) {\n            handleLetter(nextLetter, true);\n          }\n        }\n      } else {\n        // Type \"a\" will trigger the first letter pinyin that starts with \"ƒÅ\"\n        const letter = currentGameKeys.find((k) => {\n          const firstPinyinChar = py(k)[0];\n          return (\n            firstPinyinChar.localeCompare(key, 'en', {\n              sensitivity: 'base',\n            }) === 0\n          );\n        });\n        if (letter) {\n          e.preventDefault();\n          handleLetter(letter);\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKey);\n    return () => {\n      document.removeEventListener('keydown', handleKey);\n    };\n  }, [currentGameKeys, board, currentStep, gameState]);\n\n  const permalink = location.origin + location.pathname + '#' + currentGame.id;\n  const emojiResults = boardStates\n    .map((row) => row.join(''))\n    .join('\\n')\n    .trim();\n  const attempts = gameState === 'won' ? emojiResults.split('\\n').length : 'X';\n  const shareText = `${t('app.title')} [${\n    currentGame.id\n  }] ${attempts}/6\\n\\n${emojiResults}`;\n  const shareTextWithLink = `${shareText}\\n\\n${permalink}`;\n\n  const hints = useMemo(() => {\n    const hints = [];\n    const letters = currentGame.idiom.split('');\n\n    // 1. Absent letters hints\n    const absentHints = currentGameKeys\n      .filter((k) => {\n        return !letters.includes(k) && !absentKeys.has(k);\n      })\n      .slice(0, -1) // Don't reveal at least one letter\n      .slice(0, 3) // But still max 3 letters\n      .map((letter) => {\n        return t('hints.absentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...absentHints);\n\n    // 2. Definition hints\n    if (\n      definition?.zh &&\n      letters.filter((c) => definition.zh.includes(c)).length <= 2\n      // Only show hint if definition contains 2 or less of the characters in the idiom\n      // Else, the definition basically revealed the answer\n    ) {\n      hints.push(`‚ÑπÔ∏è ${definition.zh}`);\n    }\n    if (definition?.en) hints.push(`‚ÑπÔ∏è ${definition.en}`);\n\n    // 3. Letter hints\n    const letterHints = letters\n      .filter((c) => !correctKeys.has(c) && !presentKeys.has(c))\n      .slice(0, -1) // Don't reveal at least one letter\n      .map((letter) => {\n        return t('hints.presentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...letterHints);\n\n    // 4. Pinyin hints\n    const pinyinHint = letters\n      .map((c) => py(c)[0])\n      .join('')\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '');\n    // https://stackoverflow.com/a/37511463/20838\n    hints.push(t('hints.abbreviatedPinyin', { pinyinHint }));\n\n    return hints;\n  }, [correctKeys, currentGame.idiom, definition]);\n  const hintIndex = useState(0);\n  useEffect(() => {\n    hintIndex.current = 0;\n  }, [currentGame.idiom]);\n  const showHint = () => {\n    if (gameState) return;\n    const hint = hints[hintIndex.current];\n    hintIndex.current = (hintIndex.current + 1) % hints.length;\n    alert(hint);\n  };\n\n  return (\n    <>\n      <header>\n        <div class=\"inner\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowInfoModal(true);\n            }}\n          >\n            <svg\n              width=\"16\"\n              height=\"16\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <title>‚ÑπÔ∏è</title>\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          </button>\n          <h1>{t('app.title')}</h1>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowModal(gameState || 'play');\n            }}\n          >\n            {t('common.play')}\n          </button>\n        </div>\n      </header>\n      <div id=\"board\">\n        {board.map((row, index) => {\n          return (\n            <div\n              className={`row ${\n                currentStep === index && showError ? 'error' : ''\n              } ${currentStep === index ? 'current' : ''}`}\n              key={index}\n            >\n              {row.v.map((letter, i) => (\n                <div\n                  className={`letter ${letter ? 'lettered' : ''} ${\n                    boardStates[index][i] ?? ''\n                  } ${boardStates[index][i] ? 'üåà' : ''}`}\n                  key={i}\n                >\n                  <ruby>\n                    {letter || <span style={{ opacity: 0 }}>‰∏Ä</span>}\n                    <rp>(</rp>\n                    <rt>{py(letter) || <>&nbsp;</>}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </div>\n              ))}\n            </div>\n          );\n        })}\n      </div>\n      <div id=\"keyboard\">\n        <div class=\"inner\">\n          <div class=\"keys\">\n            {currentGameKeys.map((key, i) => (\n              <button\n                class={`${correctKeys.has(key) ? 'üü©' : ''} ${\n                  presentKeys.has(key) ? 'üüß' : ''\n                } ${absentKeys.has(key) ? '‚¨ú' : ''}`}\n                type=\"button\"\n                tabIndex={-1}\n                onClick={() => {\n                  handleLetter(key);\n                }}\n              >\n                <ruby>\n                  {key}\n                  <rp>(</rp>\n                  <rt>{py(key)}</rt>\n                  <rp>)</rp>\n                </ruby>\n              </button>\n            ))}\n          </div>\n          <div class=\"row\">\n            <button type=\"button\" onClick={handleEnter} tabIndex={-1}>\n              {t('common.enter')}\n            </button>\n            <button type=\"button\" class=\"stuck\" onClick={showHint}>\n              {t('ui.hint')}\n            </button>\n            <button type=\"button\" onClick={handleBackspace} tabIndex={-1}>\n              <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"></path>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"modal\"\n        class={showModal ? 'appear' : ''}\n        onClick={(e) => {\n          if (e.target === e.currentTarget) setShowModal(null);\n        }}\n      >\n        <CloseIcon\n          height=\"24\"\n          width=\"24\"\n          class=\"close\"\n          onClick={() => {\n            setShowModal(null);\n          }}\n        />\n        <div class=\"content\">\n          <h2>\n            {showModal === 'won'\n              ? 'üéâüéâüéâ'\n              : showModal === 'lost'\n              ? 'üò≠üò≠üò≠'\n              : 'üëæüëæüëæ'}\n          </h2>\n          {showModal === 'play' && (\n            <p>\n              <CodeInput code={currentGame.id} url={permalink} />\n            </p>\n          )}\n          {/(won|lost)/i.test(showModal) && (\n            <>\n              <p>\n                <b class=\"answer\">\n                  <ruby>\n                    {currentGame.idiom}\n                    <rp>(</rp>\n                    <rt>{py(currentGame.idiom)}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </b>\n                <div class=\"definition\">\n                  {definition?.zh}\n                  {definition?.zh && definition?.en && <br />}\n                  {definition?.en}\n                </div>\n                <small>\n                  <a\n                    href={`https://hanyu.baidu.com/s?wd=${currentGame.idiom}&from=zici`}\n                    target=\"_blank\"\n                  >\n                    üìñ {t('glossary.baidu')}\n                  </a>\n                </small>\n              </p>\n              <div class=\"results\">{shareTextWithLink}</div>\n              <button\n                id=\"share\"\n                onClick={async () => {\n                  try {\n                    if (\n                      // Edge/ or Edg/\n                      /edge?\\//i.test(navigator.userAgent) ||\n                      // Windows\n                      /windows/.test(navigator.userAgent)\n                    ) {\n                      throw new Error('Web Share API not working well here');\n                    }\n                    await navigator.share({ text: shareTextWithLink });\n                  } catch (e) {\n                    try {\n                      await navigator.clipboard.writeText(shareTextWithLink);\n                      alert(t('ui.copiedResults'));\n                    } catch (e2) {}\n                  }\n                }}\n              >\n                {t('common.share')}{' '}\n                <svg height=\"16\" width=\"16\" viewBox=\"0 0 24 24\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n                  ></path>\n                </svg>\n              </button>\n              &nbsp;&nbsp;\n              <a\n                class=\"button tweet\"\n                href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n                  shareTextWithLink,\n                )}`}\n                target=\"_blank\"\n              >\n                <svg\n                  height=\"16\"\n                  width=\"16\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <title>{t('common.tweet')}</title>\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"\n                  />\n                </svg>\n              </a>\n              &nbsp;&nbsp;\n              <CodeInput code={currentGame.id} url={permalink} />\n            </>\n          )}\n          <div class=\"footer\">\n            {/won|lost/i.test(gameState) &&\n              getTodayGame().id === currentGame.id && (\n                <p>\n                  <big>\n                    <Trans\n                      i18nKey=\"ui.nextIdiom\"\n                      components={[<Countdown />]}\n                    />\n                  </big>\n                </p>\n              )}\n            <div>\n              {getTodayGame().id !== currentGame.id && (\n                <>\n                  <a href=\"./\" class=\"button\">\n                    <PlayIcon width={20} height={20} /> {t('ui.playTodayGame')}\n                  </a>\n                  <br />\n                </>\n              )}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  const yes = confirm(t('ui.confirmRandom'));\n                  if (yes) {\n                    const rand = Math.round(Math.random() * (games.length - 1));\n                    const randGame = games[rand];\n                    location.hash = `#${randGame.id}`;\n                    setShowModal(null);\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.random')}\n              </button>{' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  // Ask user for idiom ID, load game if ID is valid\n                  let id = prompt(t('ui.promptIdiom'));\n                  try {\n                    id = new URL(id).hash.slice(1);\n                  } catch (e) {}\n                  if (id) {\n                    const game = games.find((g) => g.id === id);\n                    if (game) {\n                      location.hash = `#${game.id}`;\n                      setShowModal(null);\n                    } else {\n                      alert('Invalid idiom ID');\n                    }\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.choose')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"info-modal\"\n        class={showInfoModal || !skipFirstTime ? 'appear' : ''}\n      >\n        {skipFirstTime && (\n          <CloseIcon\n            height=\"32\"\n            width=\"32\"\n            class=\"close\"\n            onClick={() => {\n              setShowInfoModal(false);\n            }}\n          />\n        )}\n        <div class=\"content\">\n          <p class=\"locale-selector\">\n            üåê{' '}\n            <a\n              href=\"./?lng=en\"\n              hreflang=\"en\"\n              rel={i18n.resolvedLanguage === 'en' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'en' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('en');\n              }}\n            >\n              English\n            </a>{' '}\n            &#8901;{' '}\n            <a\n              href=\"./?lng=zh-CN\"\n              hreflang=\"zh-CN\"\n              rel={i18n.resolvedLanguage === 'zh-CN' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'zh-CN' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('zh-CN');\n              }}\n            >\n              ‰∏≠Êñá\n            </a>\n          </p>\n          <h2>{t('howToPlay.heading')}</h2>\n          <p>{t('howToPlay.how1')}</p>\n          <p>{t('howToPlay.how2')}</p>\n          <p>{t('howToPlay.how3')}</p>\n          <ul>\n            <li>üü©‚¨ú‚¨ú‚¨ú {t('howToPlay.spotCorrect')}</li>\n            <li>‚¨úüüß‚¨ú‚¨ú {t('howToPlay.spotPresent')}</li>\n            <li>\n              ‚¨ú‚¨ú<span style={{ opacity: 0.5 }}>‚¨õ</span>‚¨ú{' '}\n              {t('howToPlay.spotAbsent')}\n            </li>\n          </ul>\n          <p>{t('howToPlay.how4')}</p>\n          {skipFirstTime ? (\n            <>\n              <h2>{t('about.heading')}</h2>\n              <p>\n                <Trans\n                  i18nKey=\"about.about1\"\n                  components={[\n                    <a\n                      href=\"https://github.com/cheeaun/chengyu-wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://cheeaun.com\" target=\"_blank\" />,\n                    <a\n                      href=\"https://www.powerlanguage.co.uk/wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://powerlanguage.co.uk/\" target=\"_blank\" />,\n                  ]}\n                />\n              </p>\n              <h2>{t('feedback.heading')}</h2>\n              <ul>\n                <li>\n                  <a href=\"https://t.me/+ykuhfiImLd1kNjk1\" target=\"_blank\">\n                    {t('feedback.telegramGroup')}\n                  </a>\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubDiscussions\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/discussions\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubIssues\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/issues\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <a href=\"https://twitter.com/cheeaun\" target=\"_blank\">\n                    {t('feedback.twitter')}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://t.me/cheeaun\" target=\"_blank\">\n                    {t('feedback.telegram')}\n                  </a>\n                </li>\n              </ul>\n              <details id=\"debugging-container\">\n                <summary>{t('debugging.heading')}</summary>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmResetGame'))) {\n                      localStorage.removeItem(KEY_PREFIX + currentGame.id);\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.resetGame')}\n                </button>\n                &nbsp;\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmClearDB'))) {\n                      clearGames();\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.clearDB')}\n                </button>\n              </details>\n            </>\n          ) : (\n            <p>\n              <button\n                type=\"button\"\n                class=\"large\"\n                onClick={() => {\n                  setShowInfoModal(false);\n                  localStorage.setItem(KEY_PREFIX + 'skipFirstTime', 1);\n                  setSkipFirstTime(true);\n                }}\n              >\n                <PlayIcon width=\"20\" height=\"20\" /> {t('ui.startPlay')}\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n","import { render } from 'preact';\nimport { App } from './app';\nimport './index.css';\n\nimport en from '../i18n/en.json';\nimport zhCN from '../i18n/zh-CN.json';\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n      'zh-CN': {\n        translation: zhCN,\n      },\n    },\n    fallbackLng: 'en',\n    debug: /localhost/i.test(location.hostname),\n    detection: {\n      // localStorage is default\n      lookupLocalStorage: 'locale',\n      lookupCookie: 'locale',\n    },\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n  })\n  .then((t) => {\n    const updateLocale = () => {\n      document.documentElement.lang = i18n.resolvedLanguage;\n      document.title = document.querySelector('meta[name=\"title\"]').content =\n        t('app.title');\n      document.querySelector('meta[name=\"description\"]').content =\n        t('app.description');\n    };\n    i18n.on('languageChanged', updateLocale);\n    updateLocale();\n  });\n\nrender(<App />, document.getElementById('app'));\n"],"names":["relList","document","createElement","supports","link","querySelectorAll","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","href","p","jsx","jsxRuntime.jsx","jsxs","jsxRuntime.jsxs","Fragment","jsxRuntime.Fragment","py","pinyin","str","segment","group","flat","join","trim","idioms","idiomsTxt","split","games","gameIdioms","slice","map","id","row","idiom","window","clearGames","i","localStorage","length","key","startsWith","removeItem","allGames","Map","game","JSON","parse","getItem","set","replace","getIdiomStates","hiddenIdiom","testIdiom","letters1","letters2","lettersLength","states","Array","from","Error","correctLetterIndices","push","presentLetterIndices","l1","l1Index","indexOf","includes","getBoardGameState","boardStates","some","every","s","lastRow","blankBoard","v","getIdiomsKeys","prevPassedIdioms","prevKeys","depth","passedIdioms","Set","add","keys","idiomLetters","forEach","letter","consecutiveFailures","anotherIdiom","find","has","j","size","MAX_LETTERS","nextIdiom","_passedIdioms","_keys","randomIdiom","Math","floor","random","gameID","g","error","possibleIdioms","keySize","PlayIcon","_jsxs","viewBox","fill","props","_jsx","d","CloseIcon","startDate","Date","getTodayGame","diff","setHours","dayCount","max","Countdown","t","useTranslation","nextDay","nextStartDate","hours","useState","minutes","setMinutes","seconds","setSeconds","isNow","setIsNow","timer","setInterval","toString","padStart","clearInterval","class","CodeInput","code","url","readOnly","value","onClick","target","focus","select","clipboard","writeText","then","catch","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","zhCN","fallbackLng","debug","test","location","hostname","detection","lookupLocalStorage","lookupCookie","interpolation","escapeValue","updateLocale","documentElement","lang","resolvedLanguage","title","querySelector","content","on","render","skipFirstTime","setSkipFirstTime","currentGame","setCurrentGame","hash","addEventListener","board","setBoard","cachedGame","useMemo","setItem","stringify","gameState","definition","setDefinition","r","json","currentStep","findIndex","showError","setShowError","showModal","setShowModal","showInfoModal","setShowInfoModal","currentGameKeys","filter","sort","a","b","localeCompare","console","groupCollapsed","log","groupEnd","ANSWER","handleLetter","overwrite","newBoard","columnIndex","correctKeys","presentKeys","absentKeys","state","handleEnter","currentIdiom","valid","handleBackspace","e","preventDefault","stopPropagation","handleKey","metaKey","ctrlKey","toLowerCase","reverse","pinyinLetter","possibleLetters","k","letterIndex","nextLetter","sensitivity","removeEventListener","permalink","origin","pathname","emojiResults","attempts","shareTextWithLink","hints","letters","absentHints","zh","c","letterHints","pinyinHint","normalize","hintIndex","current","width","height","stroke","index","className","style","opacity","tabIndex","hint","currentTarget","async","navigator","userAgent","share","text","e2","encodeURIComponent","xmlns","Trans","i18nKey","components","confirm","rand","round","randGame","prompt","URL","hreflang","undefined","changeLanguage","reload","KEY_PREFIX","getElementById"],"mappings":"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"}