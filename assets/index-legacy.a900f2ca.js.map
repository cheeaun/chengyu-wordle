{"version":3,"file":"index-legacy.a900f2ca.js","sources":["../../vite/modulepreload-polyfill","../../preact/jsx-runtime","../../src/components/BackspaceIcon.jsx","../../src/components/CloseIcon.jsx","../../src/utils/alert.js","../../src/utils/copy.js","../../src/utils/fireEvent.js","../../src/components/CodeInput.jsx","../../src/components/Countdown.jsx","../../src/components/CurrentPlaying.jsx","../../src/components/DownloadIcon.jsx","../../src/components/FacebookIcon.jsx","../../src/components/InfoIcon.jsx","../../src/components/KebabIcon.jsx","../../src/components/PlayIcon.jsx","../../src/components/ShareIcon.jsx","../../src/components/Tile.jsx","../../src/components/TwitterIcon.jsx","../../src/constants.js","../../src/utils/LS.js","../../src/components/VolumeSlider.jsx","../../src/utils/blastConfetti.js","../../src/utils/prefersColorSchemeSupported.jsx","../../src/app.jsx","../../sounds/keypress-standard.mp3","../../sounds/keypress-delete.mp3","../../sounds/keypress-return.mp3","../../src/main.jsx","../../src/utils/compareWords.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import * as jsxRuntime from \"/home/runner/work/chengyu-wordle/chengyu-wordle/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","export default (props) => (\n  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n    <path d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"></path>\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <title>‚úñÔ∏è</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    ></path>\n  </svg>\n);\n","import toast from 'react-hot-toast';\n\nexport default (text) => toast(text);\n","import { toClipboard } from 'copee';\n\nexport default (text, fn = () => {}) => {\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard\n      .writeText(text)\n      .then(fn)\n      .catch((e) => {});\n  } else {\n    toClipboard(text);\n    fn();\n  }\n};\n","export default (...props) => {\n  if (window.plausible) {\n    plausible(...props);\n  }\n};\n","import { useTranslation } from 'react-i18next';\n\nimport alert from '../utils/alert';\nimport copy from '../utils/copy';\nimport fireEvent from '../utils/fireEvent';\n\nexport default ({ code, url }) => {\n  const { t } = useTranslation();\n  return (\n    code && (\n      <input\n        type=\"text\"\n        readOnly\n        value={code}\n        class=\"idiom-code\"\n        onClick={(e) => {\n          e.target.focus();\n          e.target.select();\n          copy(url || code, () => {\n            alert(t('ui.copiedURL'));\n          });\n          fireEvent('Click: Share', {\n            props: {\n              type: 'idiom-code',\n            },\n          });\n        }}\n      />\n    )\n  );\n};\n","import { useEffect, useState } from 'preact/hooks';\nimport { useTranslation } from 'react-i18next';\n\n// Component that shows hours, minutes and seconds counting down to start of next day\nexport default () => {\n  const { t } = useTranslation();\n  let nextDay = new Date().setHours(0, 0, 0, 0) + 24 * 60 * 60 * 1000;\n  const [hours, setHours] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [isNow, setIsNow] = useState(false);\n  // update countdown every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const diff = nextDay - new Date();\n      if (diff <= 0) {\n        setIsNow(true);\n        clearInterval(timer);\n        return;\n      }\n      setHours(\n        Math.floor(diff / (1000 * 60 * 60))\n          .toString()\n          .padStart(2, '0'),\n      );\n      setMinutes(\n        Math.floor((diff / (1000 * 60)) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n      setSeconds(\n        Math.floor((diff / 1000) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  if (isNow) {\n    return <a href=\"./\">{t('ui.countdownNow')}</a>;\n  }\n  return (\n    <time class=\"countdown\">\n      {hours}:{minutes}:{seconds}\n    </time>\n  );\n};\n","import { useEffect, useState } from 'preact/hooks';\nimport { useTranslation } from 'react-i18next';\n\nexport default () => {\n  const { t } = useTranslation();\n  const [playingCount, setPlayingCount] = useState(0);\n  useEffect(() => {\n    let fetchTimer, fetchRAF;\n    const fetchPlayingCount = () => {\n      fetch('https://chengyu-wordle-realtime-visitors.cheeaun.workers.dev/')\n        .then((r) => {\n          if (!r.ok) throw Error(r.statusText);\n          return r.text();\n        })\n        .then((text) => {\n          const count = +text;\n          if (!count) throw Error('Zero or NaN');\n          setPlayingCount(count);\n        })\n        .catch((e) => {\n          setPlayingCount(0);\n        });\n      fetchTimer = setTimeout(() => {\n        fetchRAF = requestAnimationFrame(fetchPlayingCount);\n      }, 2 * 60 * 1000);\n    };\n    fetchPlayingCount();\n    return () => {\n      clearTimeout(fetchTimer);\n      cancelAnimationFrame(fetchRAF);\n    };\n  }, []);\n\n  if (playingCount <= 1) return null;\n\n  return (\n    <div id=\"current-playing\">\n      {t('ui.countPlaying', { count: playingCount })}\n    </div>\n  );\n};\n","export default (props) => (\n  <svg viewBox=\"0 0 330 330\" fill=\"currentColor\" {...props}>\n    <title>‚¨áÔ∏è</title>\n    <path d=\"m154 256 1 1h2v1h1l1 1h2v1h8v-1h2l1-1h1v-1h2l1-1 70-70a15 15 0 0 0-22-22l-44 45V25a15 15 0 0 0-30 0v184l-44-45a15 15 0 1 0-22 22z\" />\n    <path d=\"M315 160c-8 0-15 7-15 15v115H30V175a15 15 0 0 0-30 0v130c0 8 7 15 15 15h300c8 0 15-7 15-15V175c0-8-7-15-15-15z\" />\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 96.1 96.1\" fill=\"currentColor\" {...props}>\n    <title>Facebook</title>\n    <path d=\"M72 0H59.7c-14 0-23 9.3-23 23.7v10.9H24c-1 0-2 .8-2 2v15.7c0 1.1 1 2 2 2h12.6v39.9c0 1 .8 2 2 2h16.3c1 0 2-1 2-2v-40h14.6c1 0 2-.8 2-1.9V36.5a2 2 0 0 0-2-2H56.8v-9.2c0-4.4 1.1-6.7 6.9-6.7H72c1 0 2-.9 2-2V2c0-1.1-1-2-2-2z\" />\n  </svg>\n);\n","export default (props) => (\n  <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" {...props}>\n    <title>‚ÑπÔ∏è</title>\n    <path\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n    />\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 290 290\" fill=\"currentColor\" {...props}>\n    <title>...</title>\n    <path d=\"M255 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM35 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM145 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70z\" />\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" {...props}>\n    <title>‚ñ∂Ô∏è</title>\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\n      clip-rule=\"evenodd\"\n    />\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n    <path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"></path>\n  </svg>\n);\n","import { pinyin } from 'pinyin-pro';\n\nconst py = pinyin;\n\nexport default ({ letter, pinyin, state }) => {\n  return (\n    <div\n      class={`letter ${letter ? 'lettered' : ''} ${state ?? ''} ${\n        state ? 'üåà' : ''\n      }`}\n    >\n      <ruby>\n        {letter || <span style={{ opacity: 0 }}>‰∏Ä</span>}\n        <rp>(</rp>\n        <rt>{pinyin || py(letter) || <>&nbsp;</>}</rt>\n        <rp>)</rp>\n      </ruby>\n    </div>\n  );\n};\n","export default (props) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n      <title>{props.title}</title>\n      <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\" />\n    </svg>\n  );\n};\n","export const KEY_PREFIX = 'cywd-';\n","// Always need to wrap localStorage in a try/catch block because\n// it can throw an exception in some browsers (e.g. Safari)\nconst LS = {\n  getItem: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n  setItem: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      return null;\n    }\n  },\n  removeItem: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n};\n\nexport default LS;\n","import { Howler } from 'howler';\nimport { useState } from 'preact/hooks';\n\nimport { KEY_PREFIX } from '../constants';\nimport LS from '../utils/LS';\n\nexport default (props) => {\n  const [volume, setVolume] = useState(Howler.volume());\n  return (\n    <span>\n      {volume > 0.66 ? 'üîä' : volume > 0.33 ? 'üîâ' : volume > 0 ? 'üîà' : 'üîá'}{' '}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step=\"0.1\"\n        value={volume}\n        onChange={(e) => {\n          const { value } = e.target;\n          Howler.volume(value);\n          setVolume(value);\n          LS.setItem(`${KEY_PREFIX}volume`, value);\n        }}\n        {...props}\n      />\n    </span>\n  );\n};\n","import confetti from 'canvas-confetti';\n\nexport default () => {\n  const end = Date.now() + 2 * 1000;\n  const colors = ['#008000', '#FFA500'];\n\n  (function frame() {\n    confetti({\n      particleCount: 2,\n      angle: 60,\n      spread: 80,\n      origin: { x: 0, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    confetti({\n      particleCount: 2,\n      angle: 120,\n      spread: 80,\n      origin: { x: 1, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    if (Date.now() < end) {\n      requestAnimationFrame(frame);\n    }\n  })();\n};\n","export default 'matchMedia' in window &&\n  window.matchMedia('(prefers-color-scheme: dark)').media !== 'not all';\n","import { Howl, Howler } from 'howler';\nimport { toJpeg } from 'html-to-image';\nimport { pinyin } from 'pinyin-pro';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport Switch from 'rc-switch';\nimport { Toaster, useToasterStore } from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport idiomsTxt from '../game-data/all-idioms.txt?raw';\nimport gameIdioms from '../game-data/game-idioms.csv';\n\nimport keypressDeleteMp3 from '../sounds/keypress-delete.mp3';\nimport keypressReturnMp3 from '../sounds/keypress-return.mp3';\nimport keypressStandardMp3 from '../sounds/keypress-standard.mp3';\n\nimport BackspaceIcon from './components/BackspaceIcon';\nimport CloseIcon from './components/CloseIcon';\nimport CodeInput from './components/CodeInput';\nimport Countdown from './components/Countdown';\nimport CurrentPlaying from './components/CurrentPlaying';\nimport DownloadIcon from './components/DownloadIcon';\nimport FacebookIcon from './components/FacebookIcon';\nimport InfoIcon from './components/InfoIcon';\nimport KebabIcon from './components/KebabIcon';\nimport PlayIcon from './components/PlayIcon';\nimport ShareIcon from './components/ShareIcon';\nimport Tile from './components/Tile';\nimport TwitterIcon from './components/TwitterIcon';\nimport VolumeSlider from './components/VolumeSlider';\nimport { KEY_PREFIX } from './constants';\nimport LS from './utils/LS';\nimport alert from './utils/alert';\nimport blastConfetti from './utils/blastConfetti';\nimport compareWords from './utils/compareWords';\nimport copy from './utils/copy';\nimport fireEvent from './utils/fireEvent';\nimport prefersColorSchemeSupported from './utils/prefersColorSchemeSupported';\n\nconst py = pinyin;\nwindow.pinyin = pinyin;\n\nconst HARD_MODE = JSON.parse(LS.getItem(`${KEY_PREFIX}hardMode`) || false);\nconst MAX_GAMES_BEFORE_SHOW_DASHBOARD = 5000;\nconst MAX_LETTERS = 4;\nconst MAX_KEYS = HARD_MODE ? 40 : 20;\nconst MAX_STEPS = 6;\nconst MIN_IDIOMS = HARD_MODE ? 10 : 6;\n\nif (HARD_MODE) {\n  fireEvent('Hard mode');\n}\n\nconst idioms = idiomsTxt.split('\\n');\nconst games = gameIdioms.slice(1).map((row) => ({\n  id: row[0],\n  idiom: row[1],\n}));\n\nHowler.volume(JSON.parse(LS.getItem(`${KEY_PREFIX}volume`)) || 0.5);\nconst keypressStandard = new Howl({\n  src: [keypressStandardMp3],\n});\nconst keypressDelete = new Howl({\n  src: [keypressDeleteMp3],\n});\nconst keypressReturn = new Howl({\n  src: [keypressReturnMp3],\n});\n\n// Check letters with multiple pinyins\n// const letter2PY = new Map();\n// const differentPinyins = [];\n// games.forEach((game) => {\n//   const letters = game.idiom.split('');\n//   const pinyins = pinyin(game.idiom, { type: 'array' });\n//   letters.forEach((letter, i) => {\n//     if (!letter2PY.has(letter)) {\n//       letter2PY.set(letter, pinyins[i]);\n//     } else if (letter2PY.get(letter) !== pinyins[i]) {\n//       differentPinyins.push({\n//         id: game.id,\n//         idiom: game.idiom,\n//         letter,\n//         pinyins: [letter2PY.get(letter), pinyins[i]].join(' '),\n//       });\n//     }\n//   });\n// });\n// console.log({\n//   differentPinyins: `id,idiom,letter,pinyins\\n${differentPinyins\n//     .map((row) => `${row.id},${row.idiom},${row.letter},${row.pinyins}`)\n//     .join('\\n')}`,\n// });\n\nwindow.clearGames = () => {\n  try {\n    const { length } = localStorage;\n    for (let i = 0; i < length; i++) {\n      const key = localStorage.key(i);\n      if (key?.startsWith(KEY_PREFIX)) {\n        localStorage.removeItem(key);\n      }\n    }\n  } catch (e) {}\n};\n\nwindow.allGames = () => {\n  const allGames = new Map();\n  const { length } = localStorage;\n  for (let i = 0; i < length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      const game = JSON.parse(localStorage.getItem(key));\n      allGames.set(key.replace(KEY_PREFIX, ''), game);\n    }\n  }\n  return allGames;\n};\n\nconst exportGameData = () => {\n  try {\n    const gameData = Object.entries(localStorage)\n      .filter(([k, v]) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && games.find((g) => g.id === gameID);\n      })\n      .map(([k, v]) => {\n        const id = k.slice(KEY_PREFIX.length);\n        const data = JSON.parse(v);\n        return {\n          id,\n          ...data,\n        };\n      });\n    return gameData;\n  } catch (e) {}\n};\nconst importGameData = (gameData, overrides = false) => {\n  try {\n    gameData.forEach((game) => {\n      const { id, ...data } = game;\n      if (overrides || !localStorage.getItem(`${KEY_PREFIX}${id}`)) {\n        LS.setItem(`${KEY_PREFIX}${id}`, JSON.stringify(data));\n      }\n    });\n  } catch (e) {}\n};\n\nconst getBoardGameState = (boardStates) => {\n  const won = boardStates.some(\n    (row) => !!row.length && row.every((s) => s === 'üü©'),\n  );\n  if (won) return 'won';\n  const lastRow = boardStates[boardStates.length - 1];\n  const lost = !!lastRow.length && lastRow.every((s) => s !== 'üü©');\n  if (lost) return 'lost';\n  return null;\n};\n\n// v = letter values of the row\n// s = submitted state of the row (after user press enter)\nconst blankBoard = () =>\n  Array.from({ length: MAX_STEPS }, () => ({\n    v: Array.from({ length: MAX_LETTERS }, () => ''),\n    s: false,\n  }));\n\nconst getIdiomsKeys = (idiom, prevPassedIdioms, prevKeys, depth = 0) => {\n  let passedIdioms = prevPassedIdioms || new Set();\n  passedIdioms.add(idiom);\n  let keys = prevKeys || new Set();\n  const idiomLetters = idiom.split('');\n  idiomLetters.forEach((letter) => keys.add(letter));\n  let consecutiveFailures = 0;\n  lettersCycle: for (let i = 0; i < games.length; i++) {\n    const letter = idiomLetters[(i + 1) % MAX_LETTERS];\n    const anotherIdiom = games.find(\n      ({ idiom }) => !passedIdioms.has(idiom) && idiom.includes(letter),\n    );\n    if (anotherIdiom) {\n      for (let j = 0; j < anotherIdiom.idiom.length; j++) {\n        keys.add(anotherIdiom.idiom[j]);\n\n        if (keys.size >= MAX_KEYS) {\n          break lettersCycle;\n        }\n      }\n      passedIdioms.add(anotherIdiom.idiom);\n      consecutiveFailures = 0;\n    } else {\n      if (consecutiveFailures >= MAX_LETTERS + 1) {\n        // Too many failures, stop\n        break lettersCycle;\n      }\n      consecutiveFailures += 1;\n    }\n  }\n\n  // Try the next idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const nextIdiom = [...passedIdioms][++depth];\n    if (nextIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        nextIdiom,\n        passedIdioms,\n        keys,\n        depth,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Still not enough keys, choose a random idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const randomIdiom = games[Math.floor(Math.random() * games.length)].idiom;\n    if (randomIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        randomIdiom,\n        passedIdioms,\n        keys,\n        0,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Something very wrong happened\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const gameID = games.find((g) => g.idiom === idiom)?.id;\n    console.error(gameID, {\n      possibleIdioms: passedIdioms.size,\n      keySize: keys.size,\n      consecutiveFailures,\n    });\n  }\n\n  return {\n    passedIdioms,\n    keys,\n  };\n};\n\nconst startDate = new Date(2022, 0, 27); // 27 January 2022\nconst getTodayGame = () => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const diff = today - startDate;\n  const dayCount = Math.floor(diff / (1000 * 60 * 60 * 24));\n  return games[Math.max(0, dayCount % games.length)];\n};\n\nconst IdiomsDashboard = () => {\n  const { t } = useTranslation();\n  let wonCount = 0;\n  let lostCount = 0;\n  const idioms = games.map((game) => {\n    // Get board from localStorage\n    const boardGame = JSON.parse(LS.getItem(`${KEY_PREFIX}${game.id}`));\n    if (boardGame && boardGame.gameState) {\n      const { board, gameState } = boardGame;\n      if (gameState === 'won') {\n        wonCount++;\n      } else if (gameState === 'lost') {\n        lostCount++;\n      }\n      return (\n        <a\n          href={`/#${game.id}`}\n          class={`board ${gameState}`}\n          title={`${game.id} (${gameState})`}\n        >\n          {gameState === 'won' ? 'üü©' : 'üüß'}\n        </a>\n      );\n    } else {\n      return (\n        <a href={`/#${game.id}`} class=\"board\" title={`${game.id}`}>\n          ‚¨ú\n        </a>\n      );\n    }\n  });\n\n  useEffect(() => {\n    blastConfetti();\n  }, []);\n\n  return (\n    <>\n      <h2>\n        {t('dashboard.heading', {\n          gamesCount: MAX_GAMES_BEFORE_SHOW_DASHBOARD,\n        })}\n      </h2>\n      <p>{t('dashboard.subheading')}</p>\n      <p>\n        <Trans\n          i18nKey=\"dashboard.totalGamesPlayed\"\n          values={{\n            gamesCountOverTotal: `${wonCount + lostCount} / ${games.length}`,\n          }}\n          components={[<b />]}\n        />\n        <br />\n        <Trans\n          i18nKey=\"dashboard.wonLost\"\n          values={{\n            wonCount,\n            lostCount,\n          }}\n          components={[<b />, <b />]}\n        />\n      </p>\n      <div class=\"boards\">{idioms}</div>\n    </>\n  );\n};\n\nconst ShareImageButton = ({ header, footer, boardStates, id }) => {\n  const { t } = useTranslation();\n  const imageRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const imageOpts = {\n    canvasWidth: 1080,\n    canvasHeight: 1080,\n    quality: 0.5,\n  };\n\n  // Update image when light/dark mode kicks in\n  const [mediaChanged, setMediaChanged] = useState();\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n    const colorSchemeChange = (event) => {\n      setMediaChanged(event.matches);\n    };\n    try {\n      media.addEventListener('change', colorSchemeChange);\n    } catch (e) {\n      media.addListener(colorSchemeChange);\n    }\n    return () => {\n      try {\n        media.removeEventListener('change', colorSchemeChange);\n      } catch (e) {\n        media.removeListener(colorSchemeChange);\n      }\n    };\n  });\n\n  useEffect(() => {\n    setImageSrc(null);\n    toJpeg(imageRef.current, imageOpts)\n      .then((dataURL) => {\n        setImageSrc(dataURL);\n      })\n      .catch((e) => {\n        setImageSrc(null);\n      });\n  }, [boardStates, id, mediaChanged]);\n\n  const fileName = `chengyu-wordle-${id}.jpg`;\n\n  return (\n    <>\n      {!!imageSrc && (\n        <a\n          id=\"share-image-button\"\n          class=\"button\"\n          href={imageSrc}\n          download={fileName}\n          target=\"_blank\"\n          onClick={() => {\n            fireEvent('Click: Share', {\n              props: {\n                type: 'image',\n              },\n            });\n          }}\n        >\n          {t('common.image')} <DownloadIcon width=\"12\" height=\"12\" />\n        </a>\n      )}\n      <div id=\"share-image-container\">\n        <div id=\"share-image\" ref={imageRef}>\n          <p class=\"header\">\n            <b>{header}</b>\n          </p>\n          <div class=\"board\">\n            {boardStates.map((row) => {\n              return (\n                <div>\n                  {row.map((letter) => {\n                    return <span class={`tile ${letter}`} />;\n                  })}\n                </div>\n              );\n            })}\n          </div>\n          <p class=\"footer\">{footer}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport function App() {\n  const { t, i18n } = useTranslation();\n\n  const [showDashboard, setShowDashboard] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showModal, setShowModal] = useState(false); // false | won | lost\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const [colorScheme, setColorScheme] = useState(\n    LS.getItem(`${KEY_PREFIX}colorScheme`) || 'auto',\n  );\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const html = document.querySelector('html');\n    if (colorScheme === 'dark') {\n      html.classList.add('dark-mode');\n      html.classList.remove('light-mode');\n    } else if (colorScheme === 'light') {\n      html.classList.add('light-mode');\n      html.classList.remove('dark-mode');\n    } else {\n      html.classList.remove('dark-mode', 'light-mode');\n    }\n  }, [colorScheme]);\n\n  const [skipFirstTime, setSkipFirstTime] = useState(\n    LS.getItem(`${KEY_PREFIX}skipFirstTime`) || false,\n  );\n\n  const [currentGame, setCurrentGame] = useState(\n    games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n  );\n  useEffect(() => {\n    window.addEventListener('hashchange', () => {\n      setCurrentGame(\n        games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n      );\n      setShowDashboard(false);\n    });\n  }, []);\n\n  const [board, setBoard] = useState(\n    JSON.parse(LS.getItem(`${KEY_PREFIX}${currentGame.id}`))?.board ||\n      blankBoard(),\n  );\n  useEffect(() => {\n    const cachedGame = LS.getItem(`${KEY_PREFIX}${currentGame.id}`);\n    if (cachedGame) {\n      setBoard(JSON.parse(cachedGame).board);\n    } else {\n      setBoard(blankBoard());\n    }\n  }, [currentGame.id]);\n\n  const boardStates = useMemo(() => {\n    return board.map((row, i) => {\n      if (row.s) {\n        return compareWords(currentGame.idiom, row.v);\n      }\n      return [];\n    });\n  }, [board]);\n\n  // Save to localStorage every time board changes\n  useEffect(() => {\n    // Only store in localStorage if board has some values\n    if (board && board.some((row) => row.v.some((v) => v))) {\n      LS.setItem(\n        `${KEY_PREFIX}${currentGame.id}`,\n        JSON.stringify({\n          board,\n          gameState: getBoardGameState(boardStates),\n        }),\n      );\n    }\n  }, [boardStates]);\n\n  const [definition, setDefinition] = useState(null);\n  useEffect(() => {\n    setDefinition(null);\n    fetch(\n      `https://baidu-hanyu-idiom.cheeaun.workers.dev/?wd=${currentGame.idiom}`,\n    )\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.definition) {\n          setDefinition(r.definition);\n        }\n      })\n      .catch(() => {});\n  }, [currentGame.idiom]);\n\n  const currentStep = board?.findIndex((row) => row.s === false) || 0;\n\n  const [currentGameKeys, currentGameKeysPinyin] = useMemo(() => {\n    const { keys } = getIdiomsKeys(currentGame.idiom);\n    const allPossibleIdioms = idioms.filter((idiom) => {\n      // check if idiom contains 4 letters from keys\n      return idiom.split('').every((letter) => keys.has(letter));\n    });\n\n    // Pinyin mappings\n    const keysPinyin = new Map();\n    allPossibleIdioms.forEach((idiom) => {\n      const idiomPinyin = pinyin(idiom, { type: 'array' });\n      idiomPinyin.forEach((pinyin, i) => {\n        if (keysPinyin.has(idiom[i])) {\n          keysPinyin.get(idiom[i]).add(pinyin);\n        } else {\n          keysPinyin.set(idiom[i], new Set([pinyin]));\n        }\n      });\n    });\n    keysPinyin.forEach((pinyinSet, letter) => {\n      pinyinSet.add(py(letter)); // Add its own individual-letter pinyin\n    });\n\n    // SPOILER inside console.log!\n    const possibleIdioms = allPossibleIdioms\n      .map((idiom) => {\n        return `${idiom} (${py(idiom)})`;\n      })\n      .sort((a, b) => a.localeCompare(b, 'zh'));\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\n        `${possibleIdioms.length} Possible Idioms [${currentGame.id}] (${keys.size} keys):`,\n      );\n      console.log(`${possibleIdioms\n        .map((idiom, i) => `${i + 1}. ${idiom}`)\n        .join('\\n')}\n\nüö®SPOILERüö® Type 'HINTS' to see all hints. Type 'ANSWER' to see the answer.`);\n      console.groupEnd();\n    }\n    window.ANSWER = `${currentGame.idiom} (${py(currentGame.idiom)})`;\n\n    const sortedKeys = [...keys].sort((a, b) => a.localeCompare(b, 'zh'));\n    return [sortedKeys, keysPinyin];\n  }, [currentGame.idiom]);\n\n  const handleLetter = (letter, overwrite = false) => {\n    if (!board[currentStep]) return;\n    if (gameState) return;\n    setShowError(false);\n\n    const newBoard = [...board];\n    let columnIndex = newBoard[currentStep].v.findIndex((v) => v === '');\n    if (overwrite) {\n      if (columnIndex === -1) {\n        columnIndex = 3;\n      } else {\n        columnIndex--;\n      }\n    }\n    if (columnIndex !== -1) {\n      newBoard[currentStep].v[columnIndex] = letter;\n      setBoard(newBoard);\n    }\n  };\n\n  const correctKeys = new Set();\n  const presentKeys = new Set();\n  const absentKeys = new Set();\n  board.forEach((row, i) => {\n    if (!row.s) return;\n    row.v.forEach((letter, j) => {\n      const state = boardStates[i][j];\n      if (state === 'üü©') {\n        correctKeys.add(letter);\n      } else if (state === 'üüß') {\n        presentKeys.add(letter);\n      } else if (state === '‚¨ú') {\n        absentKeys.add(letter);\n      }\n    });\n  });\n\n  const handleEnter = () => {\n    if (gameState) return;\n    console.log('handleEnter');\n    setShowError(false);\n\n    const row = board[currentStep];\n    if (!row) return;\n    const currentIdiom = row.v.join('');\n    const valid = idioms.includes(currentIdiom);\n    if (valid) {\n      row.s = true;\n      setBoard([...board]);\n    } else {\n      setTimeout(() => {\n        setShowError(true);\n      }, 10);\n    }\n    console.log({ currentIdiom, valid });\n  };\n\n  const gameState = useMemo(() => {\n    return getBoardGameState(boardStates);\n  }, [boardStates]);\n\n  useEffect(() => {\n    let timeout;\n    if (gameState === 'won') {\n      timeout = setTimeout(() => {\n        setShowModal('won');\n      }, 600);\n    } else if (gameState === 'lost') {\n      setShowModal('lost');\n    } else {\n      setShowModal(false);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [gameState]);\n\n  const handleBackspace = () => {\n    if (gameState) return;\n    const newBoard = [...board];\n    // Get last column with value\n    const row = newBoard[currentStep];\n    if (!row || row.s) return;\n    let columnIndex = -1;\n    for (let i = row.v.length - 1; i >= 0; i--) {\n      if (row.v[i] !== '') {\n        columnIndex = i;\n        break;\n      }\n    }\n    if (columnIndex !== -1) {\n      row.v[columnIndex] = '';\n      setBoard(newBoard);\n    }\n  };\n\n  useEffect(() => {\n    const handleKey = (e) => {\n      if (gameState) return;\n      if (e.metaKey || e.ctrlKey || !e.key) {\n        return;\n      }\n      const key = e.key.toLowerCase();\n      if (key === 'enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        handleEnter();\n      } else if (key === 'backspace') {\n        e.preventDefault();\n        handleBackspace();\n      } else if (/^arrow(left|right)/i.test(key)) {\n        // This will cycle through all letters with same starting pinyin letter\n        const row = board[currentStep];\n        const value = [...row.v].reverse().find((v) => v !== '');\n        if (value) {\n          const pinyinLetter = py(value)[0];\n\n          const possibleLettersSet = new Set();\n          currentGameKeysPinyin.forEach((pinyins, letter) => {\n            pinyins.forEach((pinyin) => {\n              const firstPinyinChar = pinyin[0];\n              if (\n                firstPinyinChar.localeCompare(pinyinLetter, 'en', {\n                  sensitivity: 'base',\n                }) === 0\n              ) {\n                possibleLettersSet.add(letter);\n              }\n            });\n          });\n          const possibleLetters = [...possibleLettersSet];\n\n          if (possibleLetters.length <= 1) return;\n          const letterIndex = possibleLetters.indexOf(value);\n          const nextLetter =\n            key === 'arrowright'\n              ? possibleLetters[(letterIndex + 1) % possibleLetters.length]\n              : possibleLetters[\n                  (letterIndex + possibleLetters.length - 1) %\n                    possibleLetters.length\n                ];\n          if (nextLetter) {\n            handleLetter(nextLetter, true);\n          }\n        }\n      } else if (/[a-z]/i.test(key)) {\n        // Type \"a\" will trigger the first letter pinyin that starts with \"ƒÅ\"\n        let breakLoop = false;\n        currentGameKeysPinyin.forEach((pinyins, letter) => {\n          if (breakLoop) return;\n          pinyins.forEach((pinyin) => {\n            if (breakLoop) return;\n            const firstPinyinChar = pinyin[0];\n            if (\n              firstPinyinChar.localeCompare(key, 'en', {\n                sensitivity: 'base',\n              }) === 0\n            ) {\n              e.preventDefault();\n              breakLoop = true;\n              handleLetter(letter);\n            }\n          });\n        });\n      }\n\n      const $board = document.getElementById('board');\n      if ($board?.querySelector) {\n        const $currentRow = $board.querySelector(\n          `.row:nth-child(${currentStep + 1})`,\n        );\n        if ($currentRow?.scrollIntoView) {\n          $currentRow.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          });\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKey);\n    return () => {\n      document.removeEventListener('keydown', handleKey);\n    };\n  }, [currentGameKeys, currentGameKeysPinyin, board, currentStep, gameState]);\n\n  const permalink = location.origin + location.pathname + '#' + currentGame.id;\n  const shortPermalink =\n    location.host + location.pathname + '#' + currentGame.id;\n  const emojiResults = boardStates\n    .map((row) => row.join(''))\n    .join('\\n')\n    .trim();\n  const attempts = gameState === 'won' ? emojiResults.split('\\n').length : 'X';\n  const attemptsText = `${attempts}/${MAX_STEPS}`;\n  const shareText = `${t('app.title')} [${currentGame.id}]${\n    HARD_MODE ? ' üî•' : ''\n  } ${attemptsText}\\n\\n${emojiResults}`;\n  const shareTextWithLink = `${shareText}\\n\\n${shortPermalink}`;\n\n  const hints = useMemo(() => {\n    const hints = [];\n    const letters = currentGame.idiom.split('');\n\n    // 1. Absent letters hints\n    const absentHints = currentGameKeys\n      .filter((k) => {\n        return !letters.includes(k) && !absentKeys.has(k);\n      })\n      .slice(0, -1) // Don't reveal at least one letter\n      .slice(0, 3) // But still max 3 letters\n      .map((letter) => {\n        return t('hints.absentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...absentHints);\n\n    // 2. Definition hints\n    if (\n      definition?.zh &&\n      letters.filter((c) => definition.zh.includes(c)).length <= 2\n      // Only show hint if definition contains 2 or less of the characters in the idiom\n      // Else, the definition basically revealed the answer\n    ) {\n      hints.push(`‚ÑπÔ∏è ${definition.zh}`);\n    }\n    if (definition?.en) hints.push(`‚ÑπÔ∏è ${definition.en}`);\n\n    // 3. Letter hints\n    const letterHints = letters\n      .filter((c) => !correctKeys.has(c) && !presentKeys.has(c))\n      .slice(0, -1) // Don't reveal at least one letter\n      .map((letter) => {\n        return t('hints.presentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...letterHints);\n\n    // 4. Pinyin hints\n    const pinyinHint = py(currentGame.idiom, {\n      pattern: 'first',\n      type: 'array',\n    }).join('');\n    hints.push(t('hints.abbreviatedPinyin', { pinyinHint }));\n\n    window.HINTS = hints;\n\n    return hints;\n  }, [currentGame.idiom, definition]);\n  const hintIndex = useRef(0);\n  useEffect(() => {\n    hintIndex.current = 0;\n  }, [currentGame.idiom]);\n  const showHint = () => {\n    if (gameState) return;\n    const hint = hints[hintIndex.current];\n    hintIndex.current = (hintIndex.current + 1) % hints.length;\n    alert(hint);\n  };\n\n  // Limit number of toasts\n  // https://github.com/timolins/react-hot-toast/issues/31#issuecomment-803359550\n  const { toasts } = useToasterStore();\n  const TOAST_LIMIT = 1;\n  useEffect(() => {\n    toasts\n      .filter((t, i) => t.visible && i >= TOAST_LIMIT)\n      .forEach((t) => toast.dismiss(t.id));\n  }, [toasts]);\n\n  const gamesPlayedCount = useMemo(() => {\n    // Only count games played if info modal is open\n    if (!showInfoModal) return;\n    try {\n      const keys = Object.keys(localStorage).filter((k) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && games.find((g) => g.id === gameID);\n      });\n      return keys.length;\n    } catch (e) {}\n  }, [showInfoModal]);\n\n  useEffect(() => {\n    if (!gamesPlayedCount || gamesPlayedCount < 10) return;\n    const precision = gamesPlayedCount < 100 ? 1 : 2;\n    const count = +gamesPlayedCount.toPrecision(precision);\n    fireEvent('Games Played', {\n      props: {\n        count,\n      },\n    });\n  }, [gamesPlayedCount]);\n\n  const GamesCount = useCallback(\n    () => (\n      <b>\n        {gamesPlayedCount}\n        {gamesPlayedCount >= MAX_GAMES_BEFORE_SHOW_DASHBOARD && (\n          <>\n            {' '}\n            /{' '}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                setShowInfoModal(false);\n                setShowDashboard(true);\n              }}\n            >\n              {games.length}\n            </a>\n          </>\n        )}\n      </b>\n    ),\n    [gamesPlayedCount],\n  );\n\n  return (\n    <>\n      <header>\n        <div class=\"inner\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowInfoModal(true);\n            }}\n          >\n            <InfoIcon width=\"16\" height=\"16\" />\n          </button>\n          <span>\n            <h1>{t('app.title')}</h1>\n            <CurrentPlaying />\n          </span>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowModal(gameState || 'play');\n            }}\n          >\n            {gameState ? (\n              t('common.play')\n            ) : (\n              <KebabIcon width=\"16\" height=\"16\" />\n            )}\n          </button>\n        </div>\n      </header>\n      <div id=\"board\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        {board.map((row, index) => {\n          const pinyins = pinyin(row.v.join(''), { type: 'array' });\n          return (\n            <div\n              className={`row ${\n                currentStep === index && showError ? 'error' : ''\n              } ${currentStep === index ? 'current' : ''} ${boardStates[\n                index\n              ].join('')}`}\n              key={index}\n            >\n              {row.v.map((letter, i) => (\n                <Tile\n                  key={i}\n                  letter={letter}\n                  pinyin={pinyins[i]}\n                  state={boardStates[index][i]}\n                />\n              ))}\n            </div>\n          );\n        })}\n      </div>\n      <div id=\"keyboard\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        <div class=\"inner\">\n          <div class=\"keys\">\n            {currentGameKeys.map((key, i) => (\n              <button\n                class={`${correctKeys.has(key) ? 'üü©' : ''} ${\n                  presentKeys.has(key) ? 'üüß' : ''\n                } ${absentKeys.has(key) ? '‚¨ú' : ''}`}\n                type=\"button\"\n                tabIndex={-1}\n                onClick={() => {\n                  keypressStandard.play();\n                  handleLetter(key);\n                }}\n              >\n                <ruby>\n                  {key}\n                  <rp>(</rp>\n                  <rt>\n                    {currentGameKeysPinyin.has(key)\n                      ? [...currentGameKeysPinyin.get(key)]\n                          .sort((a, b) => a.localeCompare(b, 'zh'))\n                          .join(' ‚∏± ')\n                      : py(key)}\n                  </rt>\n                  <rp>)</rp>\n                </ruby>\n              </button>\n            ))}\n          </div>\n          <div class=\"row\">\n            <button\n              type=\"button\"\n              onClick={() => {\n                handleEnter();\n                keypressReturn.play();\n              }}\n              tabIndex={-1}\n            >\n              {t('common.enter')}\n            </button>\n            {HARD_MODE ? (\n              <b class=\"hard\">{t('ui.hardMode')}</b>\n            ) : (\n              <button type=\"button\" class=\"stuck\" onClick={showHint}>\n                {t('ui.hint')}\n              </button>\n            )}\n            <button\n              type=\"button\"\n              onClick={() => {\n                handleBackspace();\n                keypressDelete.play();\n              }}\n              tabIndex={-1}\n            >\n              <BackspaceIcon width=\"24\" height=\"24\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"modal\"\n        class={showModal ? 'appear' : ''}\n        onClick={(e) => {\n          if (e.target === e.currentTarget) setShowModal(null);\n        }}\n      >\n        <CloseIcon\n          height=\"24\"\n          width=\"24\"\n          class=\"close\"\n          onClick={() => {\n            setShowModal(null);\n          }}\n        />\n        <div class=\"content\">\n          <h2>\n            {showModal === 'won'\n              ? 'üéâüéâüéâ'\n              : showModal === 'lost'\n              ? 'üò≠üò≠üò≠'\n              : 'üêØüêØüêØ'}\n          </h2>\n          {showModal === 'play' && (\n            <p>\n              {t('ui.idiomId')}{' '}\n              <CodeInput code={currentGame.id} url={permalink} />\n            </p>\n          )}\n          {/(won|lost)/i.test(showModal) && (\n            <>\n              <p>\n                <b class=\"answer\">\n                  <ruby>\n                    {currentGame.idiom}\n                    <rp>(</rp>\n                    <rt>{py(currentGame.idiom)}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </b>\n                <div class=\"definition\">\n                  {definition?.zh\n                    ? definition.zh.split('').map((c) => {\n                        const p = py(c);\n                        if (p === c) return c;\n                        return (\n                          <ruby>\n                            {c}\n                            <rp>(</rp>\n                            <rt>{py(c)}</rt>\n                            <rp>)</rp>\n                          </ruby>\n                        );\n                      })\n                    : ''}\n                  {definition?.zh && definition?.en && <br />}\n                  {definition?.en}\n                </div>\n                <small>\n                  <a\n                    href={`https://hanyu.baidu.com/s?wd=${currentGame.idiom}&from=zici`}\n                    target=\"_blank\"\n                  >\n                    üìñ {t('glossary.baidu')}\n                  </a>\n                  &nbsp; &nbsp;\n                  <a\n                    href={`https://www.zdic.net/hans/${currentGame.idiom}`}\n                    target=\"_blank\"\n                  >\n                    üìñ {t('glossary.zdic')}\n                  </a>\n                </small>\n              </p>\n              <div class=\"results-container\">\n                <div class=\"results\">{shareTextWithLink}</div>\n                <div>\n                  <button\n                    id=\"share\"\n                    onClick={async () => {\n                      try {\n                        if (\n                          // Edge/ or Edg/\n                          /edge?\\//i.test(navigator.userAgent) ||\n                          // Windows\n                          /windows/.test(navigator.userAgent)\n                        ) {\n                          throw new Error(\n                            'Web Share API not working well here',\n                          );\n                        }\n                        copy(shareTextWithLink);\n                        await navigator.share({ text: shareTextWithLink });\n                      } catch (e) {\n                        copy(shareTextWithLink, () => {\n                          alert(t('ui.copiedResults'));\n                        });\n                      }\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'share',\n                        },\n                      });\n                    }}\n                  >\n                    {t('common.share')} <ShareIcon width=\"16\" height=\"16\" />\n                  </button>\n                  &nbsp;\n                  <ShareImageButton\n                    id={currentGame.id}\n                    header={t('app.title')}\n                    footer={`[${currentGame.id}]${\n                      HARD_MODE ? ' üî•' : ''\n                    } ${attemptsText}`}\n                    boardStates={boardStates}\n                  />\n                  &nbsp;\n                  <a\n                    class=\"button facebook\"\n                    href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n                      permalink,\n                    )}&hashtag=${encodeURIComponent('#chengyuwordle')}`}\n                    target=\"_blank\"\n                    onClick={() => {\n                      copy(shareTextWithLink);\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'facebook',\n                        },\n                      });\n                    }}\n                  >\n                    <FacebookIcon width=\"16\" height=\"16\" />\n                  </a>\n                  &nbsp;\n                  <a\n                    class=\"button tweet\"\n                    href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n                      shareTextWithLink,\n                    )}`}\n                    target=\"_blank\"\n                    onClick={() => {\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'twitter',\n                        },\n                      });\n                    }}\n                  >\n                    <TwitterIcon\n                      width=\"16\"\n                      height=\"16\"\n                      title={t('common.tweet')}\n                    />\n                  </a>\n                  &nbsp;\n                  <CodeInput code={currentGame.id} url={permalink} />\n                </div>\n              </div>\n            </>\n          )}\n          {gameState === 'won' && attempts <= 2 && !HARD_MODE && (\n            <p\n              onClick={() => {\n                setShowModal(null);\n                setTimeout(() => {\n                  setShowInfoModal(true);\n                }, 300);\n              }}\n            >\n              {t('ui.easyEnableHardMode')}\n            </p>\n          )}\n          {showModal === 'won' &&\n            gameState === 'won' &&\n            attempts >= 5 &&\n            blastConfetti()}\n          <div class=\"footer\">\n            {/won|lost/i.test(gameState) &&\n              getTodayGame().id === currentGame.id && (\n                <p>\n                  <big>\n                    <Trans\n                      i18nKey=\"ui.nextIdiom\"\n                      components={[<Countdown />]}\n                    />\n                  </big>\n                </p>\n              )}\n            <div>\n              {getTodayGame().id !== currentGame.id && (\n                <>\n                  <a href=\"./\" class=\"button strong\">\n                    <PlayIcon width={20} height={20} /> {t('ui.playTodayGame')}\n                  </a>\n                  <br />\n                </>\n              )}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Random');\n                  const yes = confirm(t('ui.confirmRandom'));\n                  if (yes) {\n                    const rand = Math.round(Math.random() * (games.length - 1));\n                    const randGame = games[rand];\n                    location.hash = `#${randGame.id}`;\n                    setShowModal(null);\n                    fireEvent('Game load: Random');\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.random')}\n              </button>{' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Idiom ID');\n                  // Ask user for idiom ID, load game if ID is valid\n                  let id = prompt(t('ui.promptIdiom'));\n                  try {\n                    id = new URL(id).hash.slice(1);\n                  } catch (e) {}\n                  if (id) {\n                    const game = games.find((g) => g.id === id);\n                    if (game) {\n                      location.hash = `#${game.id}`;\n                      setShowModal(null);\n                      fireEvent('Game load: Idiom ID');\n                    } else {\n                      alert('Invalid idiom ID');\n                    }\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.choose')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"info-modal\"\n        class={showInfoModal || !skipFirstTime ? 'appear' : ''}\n      >\n        {skipFirstTime && (\n          <CloseIcon\n            height=\"32\"\n            width=\"32\"\n            class=\"close\"\n            onClick={() => {\n              setShowInfoModal(false);\n            }}\n          />\n        )}\n        <div class=\"content\">\n          {prefersColorSchemeSupported && (\n            <p class=\"color-scheme-selector\">\n              <button\n                type=\"button\"\n                class={colorScheme === 'dark' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'dark');\n                  setColorScheme('dark');\n                }}\n              >\n                üåë\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'auto' ? 'active' : ''}\n                onClick={() => {\n                  LS.removeItem(`${KEY_PREFIX}colorScheme`);\n                  setColorScheme('auto');\n                }}\n              >\n                üåì\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'light' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'light');\n                  setColorScheme('light');\n                }}\n              >\n                üåï\n              </button>\n            </p>\n          )}{' '}\n          <p class=\"locale-selector\">\n            üåê{' '}\n            <a\n              href=\"./?lng=en\"\n              hreflang=\"en\"\n              rel={i18n.resolvedLanguage === 'en' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'en' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('en');\n              }}\n            >\n              English\n            </a>{' '}\n            &#8901;{' '}\n            <a\n              href=\"./?lng=zh-CN\"\n              hreflang=\"zh-CN\"\n              rel={i18n.resolvedLanguage === 'zh' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'zh' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('zh-CN');\n              }}\n            >\n              ‰∏≠Êñá\n            </a>\n          </p>\n          {skipFirstTime && gamesPlayedCount > 0 && (\n            <div id=\"stats\">\n              <p>\n                <Trans i18nKey=\"ui.gamesPlayed\" components={[<GamesCount />]} />\n              </p>\n              <div id=\"config\">\n                <p>\n                  <label>\n                    {t('ui.hardMode')}\n                    <Switch\n                      defaultChecked={HARD_MODE}\n                      onChange={(checked) => {\n                        LS.setItem(\n                          `${KEY_PREFIX}hardMode`,\n                          checked ? 'true' : 'false',\n                        );\n                        setTimeout(() => {\n                          location.reload();\n                        }, 310); // Wait for Switch to animate\n                      }}\n                    />\n                  </label>\n                </p>\n                <p>\n                  <label>\n                    {t('ui.soundEffects')}\n                    <VolumeSlider class=\"config-slider\" />\n                  </label>\n                </p>\n              </div>\n            </div>\n          )}\n          <h2>{t('howToPlay.heading')}</h2>\n          <p>{t('howToPlay.how1')}</p>\n          <p>{t('howToPlay.how2')}</p>\n          <p>{t('howToPlay.how3')}</p>\n          <div class=\"example-idiom\">\n            {'‰πùÁâõ‰∏ÄÊØõ'.split('').map((letter, i) => (\n              <Tile key={letter} letter={letter} state={i === 0 ? 'üü©' : ''} />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotCorrect')}</p>\n          <div class=\"example-idiom\">\n            {'ÁêÜÊâÄÂΩìÁÑ∂'.split('').map((letter, i) => (\n              <Tile key={letter} letter={letter} state={i === 1 ? 'üüß' : ''} />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotPresent')}</p>\n          <div class=\"example-idiom\">\n            {'Áà±‰∏çÈáäÊâã'.split('').map((letter, i) => (\n              <Tile key={letter} letter={letter} state={i === 2 ? '‚¨ú' : ''} />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotAbsent')}</p>\n          <p>{t('howToPlay.how4')}</p>\n          {skipFirstTime ? (\n            <>\n              <h2>{t('about.heading')}</h2>\n              <p>\n                <Trans\n                  i18nKey=\"about.about1\"\n                  components={[\n                    <a\n                      href=\"https://github.com/cheeaun/chengyu-wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://cheeaun.com/projects/\" target=\"_blank\" />,\n                    <a\n                      href=\"https://www.nytimes.com/games/wordle/\"\n                      target=\"_blank\"\n                    />,\n                  ]}\n                />\n              </p>\n              <p>\n                <Trans\n                  i18nKey=\"about.about2\"\n                  components={[\n                    <a\n                      href=\"https://www.buymeacoffee.com/cheeaun\"\n                      target=\"_blank\"\n                    />,\n                  ]}\n                />\n              </p>\n              <h2>{t('feedback.heading')}</h2>\n              <ul>\n                <li>\n                  <a href=\"https://t.me/+ykuhfiImLd1kNjk1\" target=\"_blank\">\n                    {t('feedback.telegramGroup')}\n                  </a>\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubDiscussions\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/discussions\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubIssues\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/issues\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <a href=\"https://twitter.com/cheeaun\" target=\"_blank\">\n                    {t('feedback.twitter')}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://t.me/cheeaun\" target=\"_blank\">\n                    {t('feedback.telegram')}\n                  </a>\n                </li>\n              </ul>\n              <details id=\"debugging-container\">\n                <summary>\n                  {t('debugging.heading')} ({__COMMIT_HASH__})\n                </summary>\n                <div>\n                  Game data:{' '}\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      // Construct URL\n                      const data = exportGameData();\n                      const str = JSON.stringify({\n                        version: 1,\n                        exportDate: new Date(),\n                        data,\n                      });\n                      const bytes = new TextEncoder().encode(str);\n                      const blob = new Blob([bytes], {\n                        type: 'application/json;charset=utf-8',\n                      });\n                      const url = URL.createObjectURL(blob);\n\n                      // Trigger download\n                      const $a = document.createElement('a');\n                      document.body.appendChild($a);\n                      $a.style = 'display: none';\n                      $a.href = url;\n                      $a.download = 'chengyu-wordle.gamedata.json';\n                      $a.click();\n\n                      // Clean up\n                      URL.revokeObjectURL(url);\n                      $a.remove();\n                    }}\n                  >\n                    Export\n                  </button>{' '}\n                  <label class=\"input-file-button\">\n                    <input\n                      type=\"file\"\n                      accept=\".json\"\n                      onChange={(event) => {\n                        if (window.FileReader) {\n                          if (confirm('Are you sure you want to import?')) {\n                            try {\n                              const fileList = event.target.files;\n                              const file = fileList[0];\n                              const reader = new FileReader();\n                              reader.addEventListener('load', (e) => {\n                                const gameData = JSON.parse(\n                                  e.target.result,\n                                ).data;\n                                const overrides = confirm(\n                                  'If there are conflicting games data, override them? (Cancel to keep them)',\n                                );\n                                importGameData(gameData, overrides);\n                              });\n                              reader.readAsText(file);\n                            } catch (e) {\n                              alert('Unable to import.');\n                            }\n                          }\n                        } else {\n                          alert(\n                            'Import feature is not supported by the current browser.',\n                          );\n                        }\n                      }}\n                    />\n                    <button type=\"button\">Import</button>\n                  </label>\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmResetGame'))) {\n                      LS.removeItem(KEY_PREFIX + currentGame.id);\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.resetGame')}\n                </button>\n                &nbsp;\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmClearDB'))) {\n                      clearGames();\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.clearDB')}\n                </button>\n              </details>\n            </>\n          ) : (\n            <p>\n              <button\n                type=\"button\"\n                class=\"large\"\n                onClick={() => {\n                  setShowInfoModal(false);\n                  LS.setItem(KEY_PREFIX + 'skipFirstTime', 1);\n                  setSkipFirstTime(true);\n                }}\n              >\n                <PlayIcon width=\"20\" height=\"20\" /> {t('ui.startPlay')}\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n      {showDashboard && (\n        <div id=\"dashboard-modal\">\n          <CloseIcon\n            height=\"24\"\n            width=\"24\"\n            class=\"close\"\n            onClick={() => {\n              setShowDashboard(false);\n            }}\n          />\n          <IdiomsDashboard />\n        </div>\n      )}\n      <Toaster\n        containerStyle={{\n          top: '3.5em',\n        }}\n        toastOptions={{\n          className: 'toast',\n          style: {\n            pointerEvents: 'none',\n          },\n        }}\n      />\n    </>\n  );\n}\n","export default \"__VITE_ASSET__8f78f698__\"","export default \"__VITE_ASSET__faeb84ff__\"","export default \"__VITE_ASSET__cbbc8f21__\"","import '@fontsource/nunito/400.css';\nimport '@fontsource/nunito/700.css';\nimport 'rc-switch/assets/index.css';\n\nimport './index.css';\n\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { render } from 'preact';\nimport { initReactI18next } from 'react-i18next';\n\nimport en from '../i18n/en.json';\nimport zhCN from '../i18n/zh-CN.json';\n\nimport { App } from './app';\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n      zh: {\n        translation: zhCN,\n      },\n    },\n    fallbackLng: 'en',\n    debug: /localhost/i.test(location.hostname),\n    detection: {\n      // localStorage is default\n      lookupLocalStorage: 'locale',\n      lookupCookie: 'locale',\n    },\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n  })\n  .then((t) => {\n    const updateLocale = () => {\n      document.documentElement.lang = i18n.resolvedLanguage;\n      document.title = document.querySelector(\n        'meta[property=\"og:title\"]',\n      ).content = t('app.title');\n      document.querySelector('meta[name=\"description\"]').content =\n        document.querySelector('meta[property=\"og:description\"]').content =\n          t('app.description');\n    };\n    i18n.on('languageChanged', updateLocale);\n    updateLocale();\n  });\n\nrender(<App />, document.getElementById('app'));\n","export default (hiddenWord, testWord) => {\n  if (hiddenWord == null || testWord == null) return [];\n  const letters1 = typeof testWord === 'string' ? testWord.split('') : testWord;\n  const letters2 =\n    typeof hiddenWord === 'string' ? hiddenWord.split('') : hiddenWord;\n  const lettersLength = letters1.length;\n  const states = Array.from({ length: lettersLength }, () => '‚¨ú');\n  if (lettersLength !== letters2.length) {\n    throw new Error('Words must have the same length');\n  }\n  const correctLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 === l2) {\n      states[i] = 'üü©';\n      correctLetterIndices.push(i);\n    }\n  }\n  const presentLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 !== l2) {\n      const l1Index = letters2.findIndex(\n        (l, index) =>\n          l === l1 &&\n          !correctLetterIndices.includes(index) &&\n          !presentLetterIndices.includes(index),\n      );\n      if (l1Index !== -1) {\n        states[i] = 'üüß';\n        presentLetterIndices.push(l1Index);\n      }\n    }\n  }\n  return states;\n};\n"],"names":["jsx","jsxRuntime.jsx","jsxs","jsxRuntime.jsxs","Fragment","jsxRuntime.Fragment","props","_jsx","viewBox","fill","d","_jsxs","text","toast","fn","navigator","clipboard","writeText","then","catch","e","toClipboard","window","plausible","code","url","t","useTranslation","type","readOnly","value","class","onClick","target","focus","select","nextDay","Date","setHours","useState","hours","minutes","setMinutes","seconds","setSeconds","isNow","setIsNow","timer","setInterval","diff","Math","floor","toString","padStart","clearInterval","href","playingCount","setPlayingCount","fetchTimer","fetchRAF","fetchPlayingCount","r","ok","Error","statusText","count","setTimeout","requestAnimationFrame","id","stroke","py","pinyin","letter","state","style","opacity","title","KEY_PREFIX","LS","key","localStorage","getItem","setItem","removeItem","Howler","volume","setVolume","min","max","step","onChange","end","now","colors","frame","confetti","particleCount","angle","spread","origin","x","y","shapes","disableForReducedMotion","matchMedia","media","HARD_MODE","JSON","parse","MAX_KEYS","MIN_IDIOMS","idioms","idiomsTxt","split","games","gameIdioms","slice","map","row","idiom","keypressStandard","Howl","src","keypressDelete","keypressReturn","clearGames","length","i","startsWith","allGames","Map","game","set","replace","getBoardGameState","boardStates","won","some","every","s","lastRow","lost","blankBoard","Array","from","v","getIdiomsKeys","prevPassedIdioms","prevKeys","depth","passedIdioms","Set","add","keys","idiomLetters","forEach","consecutiveFailures","anotherIdiom","find","has","includes","j","size","MAX_LETTERS","nextIdiom","_toConsumableArray","_passedIdioms","_keys","randomIdiom","random","gameID","g","error","possibleIdioms","keySize","startDate","getTodayGame","dayCount","IdiomsDashboard","wonCount","lostCount","boardGame","gameState","board","gamesCount","Trans","i18nKey","values","gamesCountOverTotal","components","ShareImageButton","header","footer","imageRef","useRef","imageSrc","setImageSrc","imageOpts","canvasWidth","canvasHeight","quality","mediaChanged","setMediaChanged","prefersColorSchemeSupported","colorSchemeChange","event","matches","addEventListener","addListener","removeEventListener","removeListener","current","dataURL","fileName","download","DownloadIcon","width","height","ref","use","LanguageDetector","initReactI18next","init","resources","en","translation","zh","zhCN","fallbackLng","debug","test","location","hostname","detection","lookupLocalStorage","lookupCookie","interpolation","escapeValue","updateLocale","documentElement","lang","i18n","resolvedLanguage","document","querySelector","content","on","showDashboard","setShowDashboard","showError","setShowError","showModal","setShowModal","showInfoModal","setShowInfoModal","colorScheme","setColorScheme","html","classList","remove","skipFirstTime","setSkipFirstTime","hash","currentGame","setCurrentGame","setBoard","cachedGame","useMemo","hiddenWord","testWord","letters1","letters2","lettersLength","states","correctLetterIndices","push","presentLetterIndices","l1","l2","l1Index","findIndex","l","index","compareWords","stringify","definition","setDefinition","json","currentStep","allPossibleIdioms","filter","keysPinyin","get","pinyinSet","sort","a","b","localeCompare","console","groupCollapsed","log","join","groupEnd","ANSWER","currentGameKeys","currentGameKeysPinyin","handleLetter","overwrite","newBoard","columnIndex","correctKeys","presentKeys","absentKeys","handleEnter","currentIdiom","valid","timeout","handleBackspace","handleKey","metaKey","ctrlKey","toLowerCase","preventDefault","stopPropagation","reverse","pinyinLetter","possibleLettersSet","pinyins","sensitivity","possibleLetters","letterIndex","indexOf","nextLetter","breakLoop","$board","getElementById","$currentRow","scrollIntoView","behavior","block","permalink","pathname","shortPermalink","host","emojiResults","trim","attempts","attemptsText","shareText","shareTextWithLink","hints","letters","absentHints","k","c","letterHints","pinyinHint","pattern","HINTS","hintIndex","toasts","useToasterStore","visible","dismiss","gamesPlayedCount","Object","isPrefixed","precision","toPrecision","GamesCount","useCallback","InfoIcon","CurrentPlaying","KebabIcon","className","Tile","tabIndex","play","hint","BackspaceIcon","currentTarget","CloseIcon","CodeInput","userAgent","_context","share","ShareIcon","encodeURIComponent","FacebookIcon","TwitterIcon","blastConfetti","Countdown","PlayIcon","confirm","rand","round","randGame","prompt","URL","hreflang","rel","undefined","changeLanguage","Switch","defaultChecked","checked","reload","VolumeSlider","__COMMIT_HASH__","data","entries","exportGameData","str","version","exportDate","bytes","TextEncoder","encode","blob","Blob","createObjectURL","$a","createElement","body","appendChild","click","revokeObjectURL","accept","FileReader","file","files","reader","gameData","overrides","result","readAsText","Toaster","containerStyle","top","toastOptions","pointerEvents"],"mappings":"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"}