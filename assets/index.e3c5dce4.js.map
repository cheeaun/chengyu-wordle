{"version":3,"file":"index.e3c5dce4.js","sources":["../../vite/modulepreload-polyfill","../../sounds/keypress-delete.mp3","../../sounds/keypress-return.mp3","../../sounds/keypress-standard.mp3","../../preact/jsx-runtime","../../src/components/BackspaceIcon.jsx","../../src/components/CloseIcon.jsx","../../src/utils/alert.js","../../src/utils/copy.js","../../src/utils/fireEvent.js","../../src/components/CodeInput.jsx","../../src/components/Countdown.jsx","../../src/components/CurrentPlaying.jsx","../../src/components/DownloadIcon.jsx","../../src/components/FacebookIcon.jsx","../../src/components/InfoIcon.jsx","../../src/components/KebabIcon.jsx","../../src/components/PlayIcon.jsx","../../src/components/ShareIcon.jsx","../../src/components/Tile.jsx","../../src/components/TwitterIcon.jsx","../../src/constants.js","../../src/utils/LS.js","../../src/components/VolumeSlider.jsx","../../src/utils/blastConfetti.js","../../src/utils/compareWords.js","../../src/utils/prefersColorSchemeSupported.jsx","../../src/utils/usePageVisibility.js","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","export default \"__VITE_ASSET__faeb84ff__\"","export default \"__VITE_ASSET__cbbc8f21__\"","export default \"__VITE_ASSET__8f78f698__\"","import * as jsxRuntime from \"/home/runner/work/chengyu-wordle/chengyu-wordle/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","export default (props) => (\n  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n    <path d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"></path>\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <title>✖️</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    ></path>\n  </svg>\n);\n","import toast from 'react-hot-toast';\n\nexport default (text) => toast(text);\n","import { toClipboard } from 'copee';\n\nexport default (text, fn = () => {}) => {\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard\n      .writeText(text)\n      .then(fn)\n      .catch((e) => {});\n  } else {\n    toClipboard(text);\n    fn();\n  }\n};\n","export default (...props) => {\n  if (window.plausible) {\n    plausible(...props);\n  }\n};\n","import { useTranslation } from 'react-i18next';\n\nimport alert from '../utils/alert';\nimport copy from '../utils/copy';\nimport fireEvent from '../utils/fireEvent';\n\nexport default ({ code, url }) => {\n  const { t } = useTranslation();\n  return (\n    code && (\n      <input\n        type=\"text\"\n        readOnly\n        value={code}\n        class=\"idiom-code\"\n        onClick={(e) => {\n          e.target.focus();\n          e.target.select();\n          copy(url || code, () => {\n            alert(t('ui.copiedURL'));\n          });\n          fireEvent('Click: Share', {\n            props: {\n              type: 'idiom-code',\n            },\n          });\n        }}\n      />\n    )\n  );\n};\n","import { useEffect, useState } from 'preact/hooks';\nimport { useTranslation } from 'react-i18next';\n\n// Component that shows hours, minutes and seconds counting down to start of next day\nexport default () => {\n  const { t } = useTranslation();\n  let nextDay = new Date().setHours(0, 0, 0, 0) + 24 * 60 * 60 * 1000;\n  const [hours, setHours] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [isNow, setIsNow] = useState(false);\n  // update countdown every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const diff = nextDay - new Date();\n      if (diff <= 0) {\n        setIsNow(true);\n        clearInterval(timer);\n        return;\n      }\n      setHours(\n        Math.floor(diff / (1000 * 60 * 60))\n          .toString()\n          .padStart(2, '0'),\n      );\n      setMinutes(\n        Math.floor((diff / (1000 * 60)) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n      setSeconds(\n        Math.floor((diff / 1000) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  if (isNow) {\n    return <a href=\"./\">{t('ui.countdownNow')}</a>;\n  }\n  return (\n    <time class=\"countdown\">\n      {hours}:{minutes}:{seconds}\n    </time>\n  );\n};\n","import { useEffect, useState } from 'preact/hooks';\nimport { useTranslation } from 'react-i18next';\n\nexport default () => {\n  const { t } = useTranslation();\n  const [playingCount, setPlayingCount] = useState(0);\n  useEffect(() => {\n    let fetchTimer, fetchRAF;\n    const fetchPlayingCount = () => {\n      fetch('https://chengyu-wordle-realtime-visitors.cheeaun.workers.dev/')\n        .then((r) => {\n          if (!r.ok) throw Error(r.statusText);\n          return r.text();\n        })\n        .then((text) => {\n          const count = +text;\n          if (!count) throw Error('Zero or NaN');\n          setPlayingCount(count);\n        })\n        .catch((e) => {\n          setPlayingCount(0);\n        });\n      fetchTimer = setTimeout(() => {\n        fetchRAF = requestAnimationFrame(fetchPlayingCount);\n      }, 2 * 60 * 1000);\n    };\n    fetchPlayingCount();\n    return () => {\n      clearTimeout(fetchTimer);\n      cancelAnimationFrame(fetchRAF);\n    };\n  }, []);\n\n  if (playingCount <= 1) return null;\n\n  return (\n    <div id=\"current-playing\">\n      {t('ui.countPlaying', { count: playingCount })}\n    </div>\n  );\n};\n","export default (props) => (\n  <svg viewBox=\"0 0 330 330\" fill=\"currentColor\" {...props}>\n    <title>⬇️</title>\n    <path d=\"m154 256 1 1h2v1h1l1 1h2v1h8v-1h2l1-1h1v-1h2l1-1 70-70a15 15 0 0 0-22-22l-44 45V25a15 15 0 0 0-30 0v184l-44-45a15 15 0 1 0-22 22z\" />\n    <path d=\"M315 160c-8 0-15 7-15 15v115H30V175a15 15 0 0 0-30 0v130c0 8 7 15 15 15h300c8 0 15-7 15-15V175c0-8-7-15-15-15z\" />\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 96.1 96.1\" fill=\"currentColor\" {...props}>\n    <title>Facebook</title>\n    <path d=\"M72 0H59.7c-14 0-23 9.3-23 23.7v10.9H24c-1 0-2 .8-2 2v15.7c0 1.1 1 2 2 2h12.6v39.9c0 1 .8 2 2 2h16.3c1 0 2-1 2-2v-40h14.6c1 0 2-.8 2-1.9V36.5a2 2 0 0 0-2-2H56.8v-9.2c0-4.4 1.1-6.7 6.9-6.7H72c1 0 2-.9 2-2V2c0-1.1-1-2-2-2z\" />\n  </svg>\n);\n","export default (props) => (\n  <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" {...props}>\n    <title>ℹ️</title>\n    <path\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n    />\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 290 290\" fill=\"currentColor\" {...props}>\n    <title>...</title>\n    <path d=\"M255 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM35 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM145 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70z\" />\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" {...props}>\n    <title>▶️</title>\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\n      clip-rule=\"evenodd\"\n    />\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n    <path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"></path>\n  </svg>\n);\n","import { pinyin } from 'pinyin-pro';\n\nconst py = pinyin;\n\nexport default ({ letter, pinyin, state }) => {\n  return (\n    <div\n      class={`letter ${letter ? 'lettered' : ''} ${state ?? ''} ${\n        state ? '🌈' : ''\n      }`}\n    >\n      <ruby>\n        {letter || <span style={{ opacity: 0 }}>一</span>}\n        <rp>(</rp>\n        <rt>{pinyin || py(letter) || <>&nbsp;</>}</rt>\n        <rp>)</rp>\n      </ruby>\n    </div>\n  );\n};\n","export default (props) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n      <title>{props.title}</title>\n      <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\" />\n    </svg>\n  );\n};\n","export const KEY_PREFIX = 'cywd-';\n","// Always need to wrap localStorage in a try/catch block because\n// it can throw an exception in some browsers (e.g. Safari)\nconst LS = {\n  getItem: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n  setItem: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      return null;\n    }\n  },\n  removeItem: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n};\n\nexport default LS;\n","import { Howler } from 'howler';\nimport { useState } from 'preact/hooks';\n\nimport { KEY_PREFIX } from '../constants';\nimport LS from '../utils/LS';\n\nexport default (props) => {\n  const [volume, setVolume] = useState(Howler.volume());\n  return (\n    <span>\n      {volume > 0.66 ? '🔊' : volume > 0.33 ? '🔉' : volume > 0 ? '🔈' : '🔇'}{' '}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step=\"0.1\"\n        value={volume}\n        onChange={(e) => {\n          const value = +e.target.value;\n          if (isNaN(value)) return;\n          Howler.volume(value);\n          setVolume(value);\n          LS.setItem(`${KEY_PREFIX}volume`, value);\n        }}\n        {...props}\n      />\n    </span>\n  );\n};\n","import confetti from 'canvas-confetti';\n\nexport default () => {\n  const end = Date.now() + 2 * 1000;\n  const colors = ['#008000', '#FFA500'];\n\n  (function frame() {\n    confetti({\n      particleCount: 2,\n      angle: 60,\n      spread: 80,\n      origin: { x: 0, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    confetti({\n      particleCount: 2,\n      angle: 120,\n      spread: 80,\n      origin: { x: 1, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    if (Date.now() < end) {\n      requestAnimationFrame(frame);\n    }\n  })();\n};\n","export default (hiddenWord, testWord) => {\n  if (hiddenWord == null || testWord == null) return [];\n  const letters1 = typeof testWord === 'string' ? testWord.split('') : testWord;\n  const letters2 =\n    typeof hiddenWord === 'string' ? hiddenWord.split('') : hiddenWord;\n  const lettersLength = letters1.length;\n  const states = Array.from({ length: lettersLength }, () => '⬜');\n  if (lettersLength !== letters2.length) {\n    throw new Error('Words must have the same length');\n  }\n  const correctLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 === l2) {\n      states[i] = '🟩';\n      correctLetterIndices.push(i);\n    }\n  }\n  const presentLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 !== l2) {\n      const l1Index = letters2.findIndex(\n        (l, index) =>\n          l === l1 &&\n          !correctLetterIndices.includes(index) &&\n          !presentLetterIndices.includes(index),\n      );\n      if (l1Index !== -1) {\n        states[i] = '🟧';\n        presentLetterIndices.push(l1Index);\n      }\n    }\n  }\n  return states;\n};\n","export default 'matchMedia' in window &&\n  window.matchMedia('(prefers-color-scheme: dark)').media !== 'not all';\n","import { useEffect, useState } from 'preact/hooks';\n\nexport default () => {\n  let hidden, visibilityChange;\n  if ('hidden' in document) {\n    hidden = 'hidden';\n    visibilityChange = 'visibilitychange';\n  } else if ('mozHidden' in document) {\n    hidden = 'mozHidden';\n    visibilityChange = 'mozvisibilitychange';\n  } else if ('webkitHidden' in document) {\n    hidden = 'webkitHidden';\n    visibilityChange = 'webkitvisibilitychange';\n  }\n\n  const [isVisible, setIsVisible] = useState(!document[hidden]);\n  useEffect(() => {\n    const handleVisibilityChange = () => setIsVisible(!document[hidden]);\n    try {\n      document.addEventListener(visibilityChange, handleVisibilityChange);\n    } catch (e) {}\n    return () => {\n      try {\n        document.removeEventListener(visibilityChange, handleVisibilityChange);\n      } catch (e) {}\n    };\n  }, []);\n\n  return isVisible;\n};\n","import { Howl, Howler } from 'howler';\nimport { toJpeg } from 'html-to-image';\nimport { pinyin } from 'pinyin-pro';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport Switch from 'rc-switch';\nimport { Toaster, toast, useToasterStore } from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport idiomsTxt from '../game-data/all-idioms.txt?raw';\nimport gameIdioms from '../game-data/game-idioms.csv';\n\nimport keypressDeleteMp3 from '../sounds/keypress-delete.mp3';\nimport keypressReturnMp3 from '../sounds/keypress-return.mp3';\nimport keypressStandardMp3 from '../sounds/keypress-standard.mp3';\n\nimport BackspaceIcon from './components/BackspaceIcon';\nimport CloseIcon from './components/CloseIcon';\nimport CodeInput from './components/CodeInput';\nimport Countdown from './components/Countdown';\nimport CurrentPlaying from './components/CurrentPlaying';\nimport DownloadIcon from './components/DownloadIcon';\nimport FacebookIcon from './components/FacebookIcon';\nimport InfoIcon from './components/InfoIcon';\nimport KebabIcon from './components/KebabIcon';\nimport PlayIcon from './components/PlayIcon';\nimport ShareIcon from './components/ShareIcon';\nimport Tile from './components/Tile';\nimport TwitterIcon from './components/TwitterIcon';\nimport VolumeSlider from './components/VolumeSlider';\nimport { KEY_PREFIX } from './constants';\nimport LS from './utils/LS';\nimport alert from './utils/alert';\nimport blastConfetti from './utils/blastConfetti';\nimport compareWords from './utils/compareWords';\nimport copy from './utils/copy';\nimport fireEvent from './utils/fireEvent';\nimport prefersColorSchemeSupported from './utils/prefersColorSchemeSupported';\nimport usePageVisibility from './utils/usePageVisibility';\n\nconst py = pinyin;\nwindow.pinyin = pinyin;\n\nconst HARD_MODE = JSON.parse(LS.getItem(`${KEY_PREFIX}hardMode`) || false);\nconst MAX_GAMES_BEFORE_SHOW_DASHBOARD = 5000;\nconst MAX_LETTERS = 4;\nconst MAX_KEYS = HARD_MODE ? 40 : 20;\nconst MAX_STEPS = 6;\nconst MIN_IDIOMS = HARD_MODE ? 10 : 6;\n\nif (HARD_MODE) {\n  fireEvent('Hard mode');\n}\n\nconst idioms = idiomsTxt.split('\\n');\nconst games = gameIdioms.slice(1).map((row) => ({\n  id: row[0],\n  idiom: row[1],\n}));\n\nHowler.volume(JSON.parse(LS.getItem(`${KEY_PREFIX}volume`)) || 0.5);\nconst keypressStandard = new Howl({\n  src: [keypressStandardMp3],\n  preload: false,\n});\nconst keypressDelete = new Howl({\n  src: [keypressDeleteMp3],\n  preload: false,\n});\nconst keypressReturn = new Howl({\n  src: [keypressReturnMp3],\n  preload: false,\n});\n\n// Check letters with multiple pinyins\n// const letter2PY = new Map();\n// const differentPinyins = [];\n// games.forEach((game) => {\n//   const letters = game.idiom.split('');\n//   const pinyins = pinyin(game.idiom, { type: 'array' });\n//   letters.forEach((letter, i) => {\n//     if (!letter2PY.has(letter)) {\n//       letter2PY.set(letter, pinyins[i]);\n//     } else if (letter2PY.get(letter) !== pinyins[i]) {\n//       differentPinyins.push({\n//         id: game.id,\n//         idiom: game.idiom,\n//         letter,\n//         pinyins: [letter2PY.get(letter), pinyins[i]].join(' '),\n//       });\n//     }\n//   });\n// });\n// console.log({\n//   differentPinyins: `id,idiom,letter,pinyins\\n${differentPinyins\n//     .map((row) => `${row.id},${row.idiom},${row.letter},${row.pinyins}`)\n//     .join('\\n')}`,\n// });\n\nwindow.clearGames = () => {\n  try {\n    const { length } = localStorage;\n    for (let i = 0; i < length; i++) {\n      const key = localStorage.key(i);\n      if (key?.startsWith(KEY_PREFIX)) {\n        localStorage.removeItem(key);\n      }\n    }\n  } catch (e) {}\n};\n\nwindow.allGames = () => {\n  const allGames = new Map();\n  const { length } = localStorage;\n  for (let i = 0; i < length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      const game = JSON.parse(localStorage.getItem(key));\n      allGames.set(key.replace(KEY_PREFIX, ''), game);\n    }\n  }\n  return allGames;\n};\n\nconst exportGameData = () => {\n  try {\n    const gameData = Object.entries(localStorage)\n      .filter(([k, v]) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && games.find((g) => g.id === gameID);\n      })\n      .map(([k, v]) => {\n        const id = k.slice(KEY_PREFIX.length);\n        const data = JSON.parse(v);\n        return {\n          id,\n          ...data,\n        };\n      });\n    return gameData;\n  } catch (e) {}\n};\nconst importGameData = (gameData, overrides = false) => {\n  try {\n    gameData.forEach((game) => {\n      const { id, ...data } = game;\n      if (overrides || !localStorage.getItem(`${KEY_PREFIX}${id}`)) {\n        LS.setItem(`${KEY_PREFIX}${id}`, JSON.stringify(data));\n      }\n    });\n  } catch (e) {}\n};\n\nconst getBoardGameState = (boardStates) => {\n  const won = boardStates.some(\n    (row) => !!row.length && row.every((s) => s === '🟩'),\n  );\n  if (won) return 'won';\n  const lastRow = boardStates[boardStates.length - 1];\n  const lost = !!lastRow.length && lastRow.every((s) => s !== '🟩');\n  if (lost) return 'lost';\n  return null;\n};\n\n// v = letter values of the row\n// s = submitted state of the row (after user press enter)\nconst blankBoard = () =>\n  Array.from({ length: MAX_STEPS }, () => ({\n    v: Array.from({ length: MAX_LETTERS }, () => ''),\n    s: false,\n  }));\n\nconst getIdiomsKeys = (idiom, prevPassedIdioms, prevKeys, depth = 0) => {\n  let passedIdioms = prevPassedIdioms || new Set();\n  passedIdioms.add(idiom);\n  let keys = prevKeys || new Set();\n  const idiomLetters = idiom.split('');\n  idiomLetters.forEach((letter) => keys.add(letter));\n  let consecutiveFailures = 0;\n  lettersCycle: for (let i = 0; i < games.length; i++) {\n    const letter = idiomLetters[(i + 1) % MAX_LETTERS];\n    const anotherIdiom = games.find(\n      ({ idiom }) => !passedIdioms.has(idiom) && idiom.includes(letter),\n    );\n    if (anotherIdiom) {\n      for (let j = 0; j < anotherIdiom.idiom.length; j++) {\n        keys.add(anotherIdiom.idiom[j]);\n\n        if (keys.size >= MAX_KEYS) {\n          break lettersCycle;\n        }\n      }\n      passedIdioms.add(anotherIdiom.idiom);\n      consecutiveFailures = 0;\n    } else {\n      if (consecutiveFailures >= MAX_LETTERS + 1) {\n        // Too many failures, stop\n        break lettersCycle;\n      }\n      consecutiveFailures += 1;\n    }\n  }\n\n  // Try the next idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const nextIdiom = [...passedIdioms][++depth];\n    if (nextIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        nextIdiom,\n        passedIdioms,\n        keys,\n        depth,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Still not enough keys, choose a random idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const randomIdiom = games[Math.floor(Math.random() * games.length)].idiom;\n    if (randomIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        randomIdiom,\n        passedIdioms,\n        keys,\n        0,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Something very wrong happened\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const gameID = games.find((g) => g.idiom === idiom)?.id;\n    console.error(gameID, {\n      possibleIdioms: passedIdioms.size,\n      keySize: keys.size,\n      consecutiveFailures,\n    });\n  }\n\n  return {\n    passedIdioms,\n    keys,\n  };\n};\n\nconst startDate = new Date(2022, 0, 27); // 27 January 2022\nconst getTodayGame = () => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const diff = today - startDate;\n  const dayCount = Math.floor(diff / (1000 * 60 * 60 * 24));\n  return games[Math.max(0, dayCount % games.length)];\n};\n\nconst IdiomsDashboard = () => {\n  const { t } = useTranslation();\n  let wonCount = 0;\n  let lostCount = 0;\n  const idioms = games.map((game) => {\n    // Get board from localStorage\n    const boardGame = JSON.parse(LS.getItem(`${KEY_PREFIX}${game.id}`));\n    if (boardGame && boardGame.gameState) {\n      const { board, gameState } = boardGame;\n      if (gameState === 'won') {\n        wonCount++;\n      } else if (gameState === 'lost') {\n        lostCount++;\n      }\n      return (\n        <a\n          href={`/#${game.id}`}\n          class={`board ${gameState}`}\n          title={`${game.id} (${gameState})`}\n        >\n          {gameState === 'won' ? '🟩' : '🟧'}\n        </a>\n      );\n    } else {\n      return (\n        <a href={`/#${game.id}`} class=\"board\" title={`${game.id}`}>\n          ⬜\n        </a>\n      );\n    }\n  });\n\n  useEffect(() => {\n    blastConfetti();\n  }, []);\n\n  return (\n    <>\n      <h2>\n        {t('dashboard.heading', {\n          gamesCount: MAX_GAMES_BEFORE_SHOW_DASHBOARD,\n        })}\n      </h2>\n      <p>{t('dashboard.subheading')}</p>\n      <p>\n        <Trans\n          i18nKey=\"dashboard.totalGamesPlayed\"\n          values={{\n            gamesCountOverTotal: `${wonCount + lostCount} / ${games.length}`,\n          }}\n          components={[<b />]}\n        />\n        <br />\n        <Trans\n          i18nKey=\"dashboard.wonLost\"\n          values={{\n            wonCount,\n            lostCount,\n          }}\n          components={[<b />, <b />]}\n        />\n      </p>\n      <div class=\"boards\">{idioms}</div>\n    </>\n  );\n};\n\nconst ShareImageButton = ({ header, footer, boardStates, id }) => {\n  const { t } = useTranslation();\n  const imageRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const imageOpts = {\n    canvasWidth: 1080,\n    canvasHeight: 1080,\n    quality: 0.5,\n  };\n\n  // Update image when light/dark mode kicks in\n  const [mediaChanged, setMediaChanged] = useState();\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n    const colorSchemeChange = (event) => {\n      setMediaChanged(event.matches);\n    };\n    try {\n      media.addEventListener('change', colorSchemeChange);\n    } catch (e) {\n      media.addListener(colorSchemeChange);\n    }\n    return () => {\n      try {\n        media.removeEventListener('change', colorSchemeChange);\n      } catch (e) {\n        media.removeListener(colorSchemeChange);\n      }\n    };\n  });\n\n  useEffect(() => {\n    let isSubscribed = true;\n    setImageSrc(null);\n    toJpeg(imageRef.current, imageOpts)\n      .then((dataURL) => {\n        if (isSubscribed) setImageSrc(dataURL);\n      })\n      .catch((e) => {\n        if (isSubscribed) setImageSrc(null);\n      });\n    return () => {\n      isSubscribed = false;\n    };\n  }, [boardStates, id, mediaChanged]);\n\n  const fileName = `chengyu-wordle-${id}.jpg`;\n\n  return (\n    <>\n      {!!imageSrc && (\n        <a\n          id=\"share-image-button\"\n          class=\"button\"\n          href={imageSrc}\n          download={fileName}\n          target=\"_blank\"\n          onClick={() => {\n            fireEvent('Click: Share', {\n              props: {\n                type: 'image',\n              },\n            });\n          }}\n        >\n          {t('common.image')} <DownloadIcon width=\"12\" height=\"12\" />\n        </a>\n      )}\n      <div id=\"share-image-container\">\n        <div id=\"share-image\" ref={imageRef}>\n          <p class=\"header\">\n            <b>{header}</b>\n          </p>\n          <div class=\"board\">\n            {boardStates.map((row) => {\n              return (\n                <div>\n                  {row.map((letter) => {\n                    return <span class={`tile ${letter}`} />;\n                  })}\n                </div>\n              );\n            })}\n          </div>\n          <p class=\"footer\">{footer}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport function App() {\n  const { t, i18n } = useTranslation();\n\n  const [showDashboard, setShowDashboard] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showModal, setShowModal] = useState(false); // false | won | lost\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const [colorScheme, setColorScheme] = useState(\n    LS.getItem(`${KEY_PREFIX}colorScheme`) || 'auto',\n  );\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const html = document.querySelector('html');\n    if (colorScheme === 'dark') {\n      html.classList.add('dark-mode');\n      html.classList.remove('light-mode');\n    } else if (colorScheme === 'light') {\n      html.classList.add('light-mode');\n      html.classList.remove('dark-mode');\n    } else {\n      html.classList.remove('dark-mode', 'light-mode');\n    }\n  }, [colorScheme]);\n\n  const [skipFirstTime, setSkipFirstTime] = useState(\n    LS.getItem(`${KEY_PREFIX}skipFirstTime`) || false,\n  );\n\n  const [currentGame, setCurrentGame] = useState(\n    games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n  );\n  useEffect(() => {\n    window.addEventListener('hashchange', () => {\n      setCurrentGame(\n        games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n      );\n      setShowDashboard(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    keypressStandard.load();\n    keypressDelete.load();\n    keypressReturn.load();\n  }, []);\n\n  const [board, setBoard] = useState(\n    JSON.parse(LS.getItem(`${KEY_PREFIX}${currentGame.id}`))?.board ||\n      blankBoard(),\n  );\n  useEffect(() => {\n    const cachedGame = LS.getItem(`${KEY_PREFIX}${currentGame.id}`);\n    if (cachedGame) {\n      setBoard(JSON.parse(cachedGame).board);\n    } else {\n      setBoard(blankBoard());\n    }\n  }, [currentGame.id]);\n\n  const boardStates = useMemo(() => {\n    return board.map((row, i) => {\n      if (row.s) {\n        return compareWords(currentGame.idiom, row.v);\n      }\n      return [];\n    });\n  }, [board]);\n\n  // Save to localStorage every time board changes\n  useEffect(() => {\n    // Only store in localStorage if board has some values\n    if (board && board.some((row) => row.v.some((v) => v))) {\n      LS.setItem(\n        `${KEY_PREFIX}${currentGame.id}`,\n        JSON.stringify({\n          board,\n          gameState: getBoardGameState(boardStates),\n        }),\n      );\n    }\n  }, [boardStates]);\n\n  const [definition, setDefinition] = useState(null);\n  useEffect(() => {\n    setDefinition(null);\n    fetch(\n      `https://baidu-hanyu-idiom.cheeaun.workers.dev/?wd=${currentGame.idiom}`,\n    )\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.definition) {\n          setDefinition(r.definition);\n        }\n      })\n      .catch(() => {});\n  }, [currentGame.idiom]);\n\n  const currentStep = board?.findIndex((row) => row.s === false) || 0;\n\n  const [currentGameKeys, currentGameKeysPinyin] = useMemo(() => {\n    const { keys } = getIdiomsKeys(currentGame.idiom);\n    const allPossibleIdioms = idioms.filter((idiom) => {\n      // check if idiom contains 4 letters from keys\n      return idiom.split('').every((letter) => keys.has(letter));\n    });\n\n    // Pinyin mappings\n    const keysPinyin = new Map();\n    allPossibleIdioms.forEach((idiom) => {\n      const idiomPinyin = pinyin(idiom, { type: 'array' });\n      idiomPinyin.forEach((pinyin, i) => {\n        if (keysPinyin.has(idiom[i])) {\n          keysPinyin.get(idiom[i]).add(pinyin);\n        } else {\n          keysPinyin.set(idiom[i], new Set([pinyin]));\n        }\n      });\n    });\n    keysPinyin.forEach((pinyinSet, letter) => {\n      pinyinSet.add(py(letter)); // Add its own individual-letter pinyin\n    });\n\n    // SPOILER inside console.log!\n    const possibleIdioms = allPossibleIdioms\n      .map((idiom) => {\n        return `${idiom} (${py(idiom)})`;\n      })\n      .sort((a, b) => a.localeCompare(b, 'zh'));\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\n        `${possibleIdioms.length} Possible Idioms [${currentGame.id}] (${keys.size} keys):`,\n      );\n      console.log(`${possibleIdioms\n        .map((idiom, i) => `${i + 1}. ${idiom}`)\n        .join('\\n')}\n\n🚨SPOILER🚨 Type 'HINTS' to see all hints. Type 'ANSWER' to see the answer.`);\n      console.groupEnd();\n    }\n    window.ANSWER = `${currentGame.idiom} (${py(currentGame.idiom)})`;\n\n    const sortedKeys = [...keys].sort((a, b) => a.localeCompare(b, 'zh'));\n    return [sortedKeys, keysPinyin];\n  }, [currentGame.idiom]);\n\n  const handleLetter = (letter, overwrite = false) => {\n    if (!board[currentStep]) return;\n    if (gameState) return;\n    setShowError(false);\n\n    const newBoard = [...board];\n    let columnIndex = newBoard[currentStep].v.findIndex((v) => v === '');\n    if (overwrite) {\n      if (columnIndex === -1) {\n        columnIndex = 3;\n      } else {\n        columnIndex--;\n      }\n    }\n    if (columnIndex !== -1) {\n      newBoard[currentStep].v[columnIndex] = letter;\n      setBoard(newBoard);\n    }\n  };\n\n  const correctKeys = new Set();\n  const presentKeys = new Set();\n  const absentKeys = new Set();\n  board.forEach((row, i) => {\n    if (!row.s) return;\n    row.v.forEach((letter, j) => {\n      const state = boardStates[i][j];\n      if (state === '🟩') {\n        correctKeys.add(letter);\n      } else if (state === '🟧') {\n        presentKeys.add(letter);\n      } else if (state === '⬜') {\n        absentKeys.add(letter);\n      }\n    });\n  });\n\n  const handleEnter = () => {\n    if (gameState) return;\n    console.log('handleEnter');\n    setShowError(false);\n\n    const row = board[currentStep];\n    if (!row) return;\n    const currentIdiom = row.v.join('');\n    const valid = idioms.includes(currentIdiom);\n    if (valid) {\n      row.s = true;\n      setBoard([...board]);\n    } else {\n      setTimeout(() => {\n        setShowError(true);\n      }, 10);\n    }\n    console.log({ currentIdiom, valid });\n  };\n\n  const gameState = useMemo(() => {\n    return getBoardGameState(boardStates);\n  }, [boardStates]);\n\n  useEffect(() => {\n    let timeout;\n    if (gameState === 'won') {\n      timeout = setTimeout(() => {\n        setShowModal('won');\n      }, 600);\n    } else if (gameState === 'lost') {\n      setShowModal('lost');\n    } else {\n      setShowModal(false);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [gameState]);\n\n  const cachedTodayGame = useRef(getTodayGame());\n  const pageLoad = useRef(true);\n  const isPageVisible = usePageVisibility();\n  useEffect(() => {\n    let timeout;\n    if (isPageVisible) {\n      // Only show when NOT on first page load\n      if (!pageLoad.current) {\n        const todayGame = getTodayGame();\n        if (\n          todayGame.id !== cachedTodayGame.current?.id &&\n          /(won|lost)/i.test(gameState)\n        ) {\n          timeout = setTimeout(() => {\n            setShowModal(gameState);\n          }, 600);\n        }\n      }\n      pageLoad.current = false;\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [isPageVisible, gameState]);\n\n  const handleBackspace = () => {\n    if (gameState) return;\n    const newBoard = [...board];\n    // Get last column with value\n    const row = newBoard[currentStep];\n    if (!row || row.s) return;\n    let columnIndex = -1;\n    for (let i = row.v.length - 1; i >= 0; i--) {\n      if (row.v[i] !== '') {\n        columnIndex = i;\n        break;\n      }\n    }\n    if (columnIndex !== -1) {\n      row.v[columnIndex] = '';\n      setBoard(newBoard);\n    }\n  };\n\n  useEffect(() => {\n    const handleKey = (e) => {\n      if (gameState) return;\n      if (e.metaKey || e.ctrlKey || !e.key) {\n        return;\n      }\n      const key = e.key.toLowerCase();\n      if (key === 'enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        handleEnter();\n      } else if (key === 'backspace') {\n        e.preventDefault();\n        handleBackspace();\n      } else if (/^arrow(left|right)/i.test(key)) {\n        // This will cycle through all letters with same starting pinyin letter\n        const row = board[currentStep];\n        const value = [...row.v].reverse().find((v) => v !== '');\n        if (value) {\n          const pinyinLetter = py(value)[0];\n\n          const possibleLettersSet = new Set();\n          currentGameKeysPinyin.forEach((pinyins, letter) => {\n            pinyins.forEach((pinyin) => {\n              const firstPinyinChar = pinyin[0];\n              if (\n                firstPinyinChar.localeCompare(pinyinLetter, 'en', {\n                  sensitivity: 'base',\n                }) === 0\n              ) {\n                possibleLettersSet.add(letter);\n              }\n            });\n          });\n          const possibleLetters = [...possibleLettersSet];\n\n          if (possibleLetters.length <= 1) return;\n          const letterIndex = possibleLetters.indexOf(value);\n          const nextLetter =\n            key === 'arrowright'\n              ? possibleLetters[(letterIndex + 1) % possibleLetters.length]\n              : possibleLetters[\n                  (letterIndex + possibleLetters.length - 1) %\n                    possibleLetters.length\n                ];\n          if (nextLetter) {\n            handleLetter(nextLetter, true);\n          }\n        }\n      } else if (/[a-z]/i.test(key)) {\n        // Type \"a\" will trigger the first letter pinyin that starts with \"ā\"\n        let breakLoop = false;\n        currentGameKeysPinyin.forEach((pinyins, letter) => {\n          if (breakLoop) return;\n          pinyins.forEach((pinyin) => {\n            if (breakLoop) return;\n            const firstPinyinChar = pinyin[0];\n            if (\n              firstPinyinChar.localeCompare(key, 'en', {\n                sensitivity: 'base',\n              }) === 0\n            ) {\n              e.preventDefault();\n              breakLoop = true;\n              handleLetter(letter);\n            }\n          });\n        });\n      }\n\n      const $board = document.getElementById('board');\n      if ($board?.querySelector) {\n        const $currentRow = $board.querySelector(\n          `.row:nth-child(${currentStep + 1})`,\n        );\n        if ($currentRow?.scrollIntoView) {\n          $currentRow.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          });\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKey);\n    return () => {\n      document.removeEventListener('keydown', handleKey);\n    };\n  }, [currentGameKeys, currentGameKeysPinyin, board, currentStep, gameState]);\n\n  const permalink = location.origin + location.pathname + '#' + currentGame.id;\n  const shortPermalink =\n    location.host + location.pathname + '#' + currentGame.id;\n  const emojiResults = boardStates\n    .map((row) => row.join(''))\n    .join('\\n')\n    .trim();\n  const attempts = gameState === 'won' ? emojiResults.split('\\n').length : 'X';\n  const attemptsText = `${attempts}/${MAX_STEPS}`;\n  const shareText = `${t('app.title')} [${currentGame.id}]${\n    HARD_MODE ? ' 🔥' : ''\n  } ${attemptsText}\\n\\n${emojiResults}`;\n  const shareTextWithLink = `${shareText}\\n\\n${shortPermalink}`;\n\n  const hints = useMemo(() => {\n    const hints = [];\n    const letters = currentGame.idiom.split('');\n\n    // 1. Absent letters hints\n    const absentHints = currentGameKeys\n      .filter((k) => {\n        return !letters.includes(k) && !absentKeys.has(k);\n      })\n      .slice(0, -1) // Don't reveal at least one letter\n      .slice(0, 3) // But still max 3 letters\n      .map((letter) => {\n        return t('hints.absentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...absentHints);\n\n    // 2. Definition hints\n    if (\n      definition?.zh &&\n      letters.filter((c) => definition.zh.includes(c)).length <= 2\n      // Only show hint if definition contains 2 or less of the characters in the idiom\n      // Else, the definition basically revealed the answer\n    ) {\n      hints.push(`ℹ️ ${definition.zh}`);\n    }\n    if (definition?.en) hints.push(`ℹ️ ${definition.en}`);\n\n    // 3. Letter hints\n    const letterHints = letters\n      .filter((c) => !correctKeys.has(c) && !presentKeys.has(c))\n      .slice(0, -1) // Don't reveal at least one letter\n      .map((letter) => {\n        return t('hints.presentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...letterHints);\n\n    // 4. Pinyin hints\n    const pinyinHint = py(currentGame.idiom, {\n      pattern: 'first',\n      type: 'array',\n    }).join('');\n    hints.push(t('hints.abbreviatedPinyin', { pinyinHint }));\n\n    window.HINTS = hints;\n\n    return hints;\n  }, [currentGame.idiom, definition]);\n  const hintIndex = useRef(0);\n  useEffect(() => {\n    hintIndex.current = 0;\n  }, [currentGame.idiom]);\n  const showHint = () => {\n    if (gameState) return;\n    const hint = hints[hintIndex.current];\n    hintIndex.current = (hintIndex.current + 1) % hints.length;\n    alert(hint);\n  };\n\n  // Limit number of toasts\n  // https://github.com/timolins/react-hot-toast/issues/31#issuecomment-803359550\n  const { toasts } = useToasterStore();\n  const TOAST_LIMIT = 1;\n  useEffect(() => {\n    toasts\n      .filter((t, i) => t.visible && i >= TOAST_LIMIT)\n      .forEach((t) => toast.dismiss(t.id));\n  }, [toasts]);\n\n  const gamesPlayedCount = useMemo(() => {\n    // Only count games played if info modal is open\n    if (!showInfoModal) return;\n    try {\n      const keys = Object.keys(localStorage).filter((k) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && games.find((g) => g.id === gameID);\n      });\n      return keys.length;\n    } catch (e) {}\n  }, [showInfoModal]);\n\n  useEffect(() => {\n    if (!gamesPlayedCount || gamesPlayedCount < 10) return;\n    const precision = gamesPlayedCount < 100 ? 1 : 2;\n    const count = +gamesPlayedCount.toPrecision(precision);\n    fireEvent('Games Played', {\n      props: {\n        count,\n      },\n    });\n  }, [gamesPlayedCount]);\n\n  const GamesCount = useCallback(\n    () => (\n      <b>\n        {gamesPlayedCount}\n        {gamesPlayedCount >= MAX_GAMES_BEFORE_SHOW_DASHBOARD && (\n          <>\n            {' '}\n            /{' '}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                setShowInfoModal(false);\n                setShowDashboard(true);\n              }}\n            >\n              {games.length}\n            </a>\n          </>\n        )}\n      </b>\n    ),\n    [gamesPlayedCount],\n  );\n\n  return (\n    <>\n      <header>\n        <div class=\"inner\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowInfoModal(true);\n            }}\n          >\n            <InfoIcon width=\"16\" height=\"16\" />\n          </button>\n          <span>\n            <h1>{t('app.title')}</h1>\n            <CurrentPlaying />\n          </span>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowModal(gameState || 'play');\n            }}\n          >\n            {gameState ? (\n              t('common.play')\n            ) : (\n              <KebabIcon width=\"16\" height=\"16\" />\n            )}\n          </button>\n        </div>\n      </header>\n      <div id=\"board\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        {board.map((row, index) => {\n          const pinyins = pinyin(row.v.join(''), { type: 'array' });\n          return (\n            <div\n              className={`row ${\n                currentStep === index && showError ? 'error' : ''\n              } ${currentStep === index ? 'current' : ''} ${boardStates[\n                index\n              ].join('')}`}\n              key={index}\n            >\n              {row.v.map((letter, i) => (\n                <Tile\n                  key={i}\n                  letter={letter}\n                  pinyin={pinyins[i]}\n                  state={boardStates[index][i]}\n                />\n              ))}\n            </div>\n          );\n        })}\n      </div>\n      <div id=\"keyboard\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        <div class=\"inner\">\n          <div class=\"keys\">\n            {currentGameKeys.map((key, i) => (\n              <button\n                class={`${correctKeys.has(key) ? '🟩' : ''} ${\n                  presentKeys.has(key) ? '🟧' : ''\n                } ${absentKeys.has(key) ? '⬜' : ''}`}\n                type=\"button\"\n                tabIndex={-1}\n                onClick={() => {\n                  keypressStandard.play();\n                  handleLetter(key);\n                }}\n              >\n                <ruby>\n                  {key}\n                  <rp>(</rp>\n                  <rt>\n                    {currentGameKeysPinyin.has(key)\n                      ? [...currentGameKeysPinyin.get(key)]\n                          .sort((a, b) => a.localeCompare(b, 'zh'))\n                          .join(' ⸱ ')\n                      : py(key)}\n                  </rt>\n                  <rp>)</rp>\n                </ruby>\n              </button>\n            ))}\n          </div>\n          <div class=\"row\">\n            <button\n              type=\"button\"\n              onClick={() => {\n                handleEnter();\n                keypressReturn.play();\n              }}\n              tabIndex={-1}\n            >\n              {t('common.enter')}\n            </button>\n            {HARD_MODE ? (\n              <b class=\"hard\">{t('ui.hardMode')}</b>\n            ) : (\n              <button type=\"button\" class=\"stuck\" onClick={showHint}>\n                {t('ui.hint')}\n              </button>\n            )}\n            <button\n              type=\"button\"\n              onClick={() => {\n                handleBackspace();\n                keypressDelete.play();\n              }}\n              tabIndex={-1}\n            >\n              <BackspaceIcon width=\"24\" height=\"24\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"modal\"\n        class={showModal ? 'appear' : ''}\n        onClick={(e) => {\n          if (e.target === e.currentTarget) setShowModal(null);\n        }}\n      >\n        <CloseIcon\n          height=\"24\"\n          width=\"24\"\n          class=\"close\"\n          onClick={() => {\n            setShowModal(null);\n          }}\n        />\n        <div class=\"content\">\n          <h2>\n            {showModal === 'won'\n              ? '🎉🎉🎉'\n              : showModal === 'lost'\n              ? '😭😭😭'\n              : '🐯🐯🐯'}\n          </h2>\n          {showModal === 'play' && (\n            <p class=\"block\">\n              {t('ui.idiomId')}{' '}\n              <CodeInput code={currentGame.id} url={permalink} />\n            </p>\n          )}\n          {/(won|lost)/i.test(showModal) && (\n            <>\n              <p class=\"block\">\n                <b class=\"answer\">\n                  <ruby>\n                    {currentGame.idiom}\n                    <rp>(</rp>\n                    <rt>{py(currentGame.idiom)}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </b>\n                <div class=\"definition\">\n                  {definition?.zh\n                    ? definition.zh.split('').map((c) => {\n                        const p = py(c);\n                        if (p === c) return c;\n                        return (\n                          <ruby>\n                            {c}\n                            <rp>(</rp>\n                            <rt>{py(c)}</rt>\n                            <rp>)</rp>\n                          </ruby>\n                        );\n                      })\n                    : ''}\n                  {definition?.zh && definition?.en && <br />}\n                  {definition?.en}\n                </div>\n                <small>\n                  <a\n                    href={`https://hanyu.baidu.com/s?wd=${currentGame.idiom}&from=zici`}\n                    target=\"_blank\"\n                  >\n                    📖 {t('glossary.baidu')}\n                  </a>\n                  &nbsp; &nbsp;\n                  <a\n                    href={`https://www.zdic.net/hans/${currentGame.idiom}`}\n                    target=\"_blank\"\n                  >\n                    📖 {t('glossary.zdic')}\n                  </a>\n                </small>\n              </p>\n              <p class=\"block warning\">{t('ui.avoidSpoilers')}</p>\n              <div class=\"block\">\n                <div>\n                  <button\n                    id=\"share\"\n                    onClick={async () => {\n                      try {\n                        if (\n                          // Edge/ or Edg/\n                          /edge?\\//i.test(navigator.userAgent) ||\n                          // Windows\n                          /windows/.test(navigator.userAgent)\n                        ) {\n                          throw new Error(\n                            'Web Share API not working well here',\n                          );\n                        }\n                        copy(shareTextWithLink);\n                        await navigator.share({ text: shareTextWithLink });\n                      } catch (e) {\n                        copy(shareTextWithLink, () => {\n                          alert(t('ui.copiedResults'));\n                        });\n                      }\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'share',\n                        },\n                      });\n                    }}\n                  >\n                    {t('common.share')} <ShareIcon width=\"16\" height=\"16\" />\n                  </button>\n                  &nbsp;\n                  <ShareImageButton\n                    id={currentGame.id}\n                    header={t('app.title')}\n                    footer={`[${currentGame.id}]${\n                      HARD_MODE ? ' 🔥' : ''\n                    } ${attemptsText}`}\n                    boardStates={boardStates}\n                  />\n                  &nbsp;\n                  <a\n                    class=\"button facebook\"\n                    href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n                      permalink,\n                    )}&hashtag=${encodeURIComponent('#chengyuwordle')}`}\n                    target=\"_blank\"\n                    onClick={() => {\n                      copy(shareTextWithLink);\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'facebook',\n                        },\n                      });\n                    }}\n                  >\n                    <FacebookIcon width=\"16\" height=\"16\" />\n                  </a>\n                  &nbsp;\n                  <a\n                    class=\"button tweet\"\n                    href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n                      shareTextWithLink,\n                    )}`}\n                    target=\"_blank\"\n                    onClick={() => {\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'twitter',\n                        },\n                      });\n                    }}\n                  >\n                    <TwitterIcon\n                      width=\"16\"\n                      height=\"16\"\n                      title={t('common.tweet')}\n                    />\n                  </a>\n                </div>\n                <p>\n                  {t('ui.idiomId')}{' '}\n                  <CodeInput code={currentGame.id} url={permalink} />\n                </p>\n              </div>\n            </>\n          )}\n          {gameState === 'won' && attempts <= 2 && !HARD_MODE && (\n            <p\n              class=\"block alert\"\n              onClick={() => {\n                setShowModal(null);\n                setTimeout(() => {\n                  setShowInfoModal(true);\n                }, 300);\n              }}\n            >\n              {t('ui.easyEnableHardMode')}\n            </p>\n          )}\n          {showModal === 'won' &&\n            gameState === 'won' &&\n            attempts >= 5 &&\n            blastConfetti()}\n          <div class=\"block\">\n            {/won|lost/i.test(gameState) &&\n              getTodayGame().id === currentGame.id && (\n                <p>\n                  <big>\n                    <Trans\n                      i18nKey=\"ui.nextIdiom\"\n                      components={[<Countdown />]}\n                    />\n                  </big>\n                </p>\n              )}\n            <div>\n              {getTodayGame().id !== currentGame.id && (\n                <>\n                  <a href=\"./\" class=\"button strong\">\n                    <PlayIcon width={20} height={20} /> {t('ui.playTodayGame')}\n                  </a>\n                  <br />\n                </>\n              )}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Random');\n                  const yes = confirm(t('ui.confirmRandom'));\n                  if (yes) {\n                    const rand = Math.round(Math.random() * (games.length - 1));\n                    const randGame = games[rand];\n                    location.hash = `#${randGame.id}`;\n                    setShowModal(null);\n                    fireEvent('Game load: Random');\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.random')}\n              </button>{' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Idiom ID');\n                  // Ask user for idiom ID, load game if ID is valid\n                  let id = prompt(t('ui.promptIdiom'));\n                  try {\n                    id = new URL(id).hash.slice(1);\n                  } catch (e) {}\n                  if (id) {\n                    const game = games.find((g) => g.id === id);\n                    if (game) {\n                      location.hash = `#${game.id}`;\n                      setShowModal(null);\n                      fireEvent('Game load: Idiom ID');\n                    } else {\n                      alert('Invalid idiom ID');\n                    }\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.choose')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"info-modal\"\n        class={showInfoModal || !skipFirstTime ? 'appear' : ''}\n      >\n        {skipFirstTime && (\n          <CloseIcon\n            height=\"32\"\n            width=\"32\"\n            class=\"close\"\n            onClick={() => {\n              setShowInfoModal(false);\n            }}\n          />\n        )}\n        <div class=\"content\">\n          {prefersColorSchemeSupported && (\n            <p class=\"color-scheme-selector\">\n              <button\n                type=\"button\"\n                class={colorScheme === 'dark' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'dark');\n                  setColorScheme('dark');\n                }}\n              >\n                🌑\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'auto' ? 'active' : ''}\n                onClick={() => {\n                  LS.removeItem(`${KEY_PREFIX}colorScheme`);\n                  setColorScheme('auto');\n                }}\n              >\n                🌓\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'light' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'light');\n                  setColorScheme('light');\n                }}\n              >\n                🌕\n              </button>\n            </p>\n          )}{' '}\n          <p class=\"locale-selector\">\n            🌐{' '}\n            <a\n              href=\"./?lng=en\"\n              hreflang=\"en\"\n              rel={i18n.resolvedLanguage === 'en' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'en' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('en');\n              }}\n            >\n              English\n            </a>{' '}\n            &#8901;{' '}\n            <a\n              href=\"./?lng=zh-CN\"\n              hreflang=\"zh-CN\"\n              rel={i18n.resolvedLanguage === 'zh' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'zh' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('zh-CN');\n              }}\n            >\n              中文\n            </a>\n          </p>\n          {skipFirstTime && gamesPlayedCount > 0 && (\n            <div id=\"stats\">\n              <p>\n                <Trans i18nKey=\"ui.gamesPlayed\" components={[<GamesCount />]} />\n              </p>\n              <div id=\"config\">\n                <p>\n                  <label>\n                    {t('ui.hardMode')}\n                    <Switch\n                      defaultChecked={HARD_MODE}\n                      onChange={(checked) => {\n                        LS.setItem(\n                          `${KEY_PREFIX}hardMode`,\n                          checked ? 'true' : 'false',\n                        );\n                        setTimeout(() => {\n                          location.reload();\n                        }, 310); // Wait for Switch to animate\n                      }}\n                    />\n                  </label>\n                </p>\n                <p>\n                  <label>\n                    {t('ui.soundEffects')}\n                    <VolumeSlider class=\"config-slider\" />\n                  </label>\n                </p>\n              </div>\n            </div>\n          )}\n          <h2>{t('howToPlay.heading')}</h2>\n          <p>{t('howToPlay.how1')}</p>\n          <p>{t('howToPlay.how2')}</p>\n          <p>{t('howToPlay.how3')}</p>\n          <div class=\"example-idiom\">\n            {'九牛一毛'.split('').map((letter, i) => (\n              <Tile key={letter} letter={letter} state={i === 0 ? '🟩' : ''} />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotCorrect')}</p>\n          <div class=\"example-idiom\">\n            {'理所当然'.split('').map((letter, i) => (\n              <Tile key={letter} letter={letter} state={i === 1 ? '🟧' : ''} />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotPresent')}</p>\n          <div class=\"example-idiom\">\n            {'爱不释手'.split('').map((letter, i) => (\n              <Tile key={letter} letter={letter} state={i === 2 ? '⬜' : ''} />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotAbsent')}</p>\n          <p>{t('howToPlay.how4')}</p>\n          {skipFirstTime ? (\n            <>\n              <h2>{t('about.heading')}</h2>\n              <p>\n                <Trans\n                  i18nKey=\"about.about1\"\n                  components={[\n                    <a\n                      href=\"https://github.com/cheeaun/chengyu-wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://cheeaun.com/projects/\" target=\"_blank\" />,\n                    <a\n                      href=\"https://www.nytimes.com/games/wordle/\"\n                      target=\"_blank\"\n                    />,\n                  ]}\n                />\n              </p>\n              <p>\n                <Trans\n                  i18nKey=\"about.about2\"\n                  components={[\n                    <a\n                      href=\"https://www.buymeacoffee.com/cheeaun\"\n                      target=\"_blank\"\n                    />,\n                  ]}\n                />\n              </p>\n              <h2>{t('feedback.heading')}</h2>\n              <ul>\n                <li>\n                  <a href=\"https://t.me/+ykuhfiImLd1kNjk1\" target=\"_blank\">\n                    {t('feedback.telegramGroup')}\n                  </a>\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubDiscussions\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/discussions\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubIssues\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/issues\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <a href=\"https://twitter.com/cheeaun\" target=\"_blank\">\n                    {t('feedback.twitter')}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://t.me/cheeaun\" target=\"_blank\">\n                    {t('feedback.telegram')}\n                  </a>\n                </li>\n              </ul>\n              <details id=\"debugging-container\">\n                <summary>\n                  {t('debugging.heading')} ({__COMMIT_HASH__})\n                </summary>\n                <div>\n                  Game data:{' '}\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      // Construct URL\n                      const data = exportGameData();\n                      const str = JSON.stringify({\n                        version: 1,\n                        exportDate: new Date(),\n                        data,\n                      });\n                      const bytes = new TextEncoder().encode(str);\n                      const blob = new Blob([bytes], {\n                        type: 'application/json;charset=utf-8',\n                      });\n                      const url = URL.createObjectURL(blob);\n\n                      // Trigger download\n                      const $a = document.createElement('a');\n                      document.body.appendChild($a);\n                      $a.style = 'display: none';\n                      $a.href = url;\n                      $a.download = 'chengyu-wordle.gamedata.json';\n                      $a.click();\n\n                      // Clean up\n                      URL.revokeObjectURL(url);\n                      $a.remove();\n                    }}\n                  >\n                    Export\n                  </button>{' '}\n                  <label class=\"input-file-button\">\n                    <input\n                      type=\"file\"\n                      accept=\".json\"\n                      onChange={(event) => {\n                        if (window.FileReader) {\n                          if (confirm('Are you sure you want to import?')) {\n                            try {\n                              const fileList = event.target.files;\n                              const file = fileList[0];\n                              const reader = new FileReader();\n                              reader.addEventListener('load', (e) => {\n                                const gameData = JSON.parse(\n                                  e.target.result,\n                                ).data;\n                                const overrides = confirm(\n                                  'If there are conflicting games data, override them? (Cancel to keep them)',\n                                );\n                                importGameData(gameData, overrides);\n                              });\n                              reader.readAsText(file);\n                            } catch (e) {\n                              alert('Unable to import.');\n                            }\n                          }\n                        } else {\n                          alert(\n                            'Import feature is not supported by the current browser.',\n                          );\n                        }\n                      }}\n                    />\n                    <button type=\"button\">Import</button>\n                  </label>\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmResetGame'))) {\n                      LS.removeItem(KEY_PREFIX + currentGame.id);\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.resetGame')}\n                </button>\n                &nbsp;\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmClearDB'))) {\n                      clearGames();\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.clearDB')}\n                </button>\n              </details>\n            </>\n          ) : (\n            <p>\n              <button\n                type=\"button\"\n                class=\"large\"\n                onClick={() => {\n                  setShowInfoModal(false);\n                  LS.setItem(KEY_PREFIX + 'skipFirstTime', 1);\n                  setSkipFirstTime(true);\n                }}\n              >\n                <PlayIcon width=\"20\" height=\"20\" /> {t('ui.startPlay')}\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n      {showDashboard && (\n        <div id=\"dashboard-modal\">\n          <CloseIcon\n            height=\"24\"\n            width=\"24\"\n            class=\"close\"\n            onClick={() => {\n              setShowDashboard(false);\n            }}\n          />\n          <IdiomsDashboard />\n        </div>\n      )}\n      <Toaster\n        containerStyle={{\n          top: '3.5em',\n        }}\n        toastOptions={{\n          className: 'toast',\n          style: {\n            pointerEvents: 'none',\n          },\n        }}\n      />\n    </>\n  );\n}\n","import '@fontsource/nunito/400.css';\nimport '@fontsource/nunito/700.css';\nimport 'rc-switch/assets/index.css';\n\nimport './index.css';\n\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { render } from 'preact';\nimport { initReactI18next } from 'react-i18next';\n\nimport en from '../i18n/en.json';\nimport zhCN from '../i18n/zh-CN.json';\n\nimport { App } from './app';\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n      zh: {\n        translation: zhCN,\n      },\n    },\n    fallbackLng: 'en',\n    debug: /localhost/i.test(location.hostname),\n    detection: {\n      // localStorage is default\n      lookupLocalStorage: 'locale',\n      lookupCookie: 'locale',\n    },\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n  })\n  .then((t) => {\n    const updateLocale = () => {\n      document.documentElement.lang = i18n.resolvedLanguage;\n      document.title = document.querySelector(\n        'meta[property=\"og:title\"]',\n      ).content = t('app.title');\n      document.querySelector('meta[name=\"description\"]').content =\n        document.querySelector('meta[property=\"og:description\"]').content =\n          t('app.description');\n    };\n    i18n.on('languageChanged', updateLocale);\n    updateLocale();\n  });\n\nrender(<App />, document.getElementById('app'));\n"],"names":["jsxRuntime.jsx","jsxRuntime.jsxs","jsxRuntime.Fragment","props","_jsx","_jsxs","text","toast","fn","navigator","clipboard","writeText","then","catch","e","toClipboard","window","plausible","code","url","t","useTranslation","target","focus","select","type","nextDay","Date","setHours","hours","useState","minutes","setMinutes","seconds","setSeconds","isNow","setIsNow","timer","setInterval","diff","Math","floor","toString","padStart","clearInterval","playingCount","setPlayingCount","fetchTimer","fetchRAF","fetchPlayingCount","r","ok","Error","statusText","count","setTimeout","requestAnimationFrame","py","pinyin","letter","state","opacity","title","KEY_PREFIX","LS","getItem","key","localStorage","setItem","value","removeItem","volume","setVolume","Howler","isNaN","end","now","colors","confetti","particleCount","angle","spread","origin","x","y","shapes","disableForReducedMotion","frame","hiddenWord","testWord","letters1","split","letters2","lettersLength","length","states","Array","from","correctLetterIndices","i","l1","l2","push","presentLetterIndices","l1Index","findIndex","l","index","includes","matchMedia","media","hidden","visibilityChange","document","isVisible","setIsVisible","useEffect","handleVisibilityChange","addEventListener","removeEventListener","HARD_MODE","JSON","parse","MAX_GAMES_BEFORE_SHOW_DASHBOARD","MAX_LETTERS","MAX_KEYS","MAX_STEPS","MIN_IDIOMS","idioms","idiomsTxt","games","gameIdioms","slice","map","row","id","idiom","keypressStandard","Howl","src","keypressStandardMp3","preload","keypressDelete","keypressDeleteMp3","keypressReturn","keypressReturnMp3","clearGames","startsWith","allGames","Map","game","set","replace","exportGameData","Object","entries","filter","k","v","isPrefixed","gameID","find","g","data","importGameData","gameData","overrides","forEach","stringify","getBoardGameState","boardStates","some","every","s","lastRow","blankBoard","getIdiomsKeys","prevPassedIdioms","prevKeys","depth","passedIdioms","Set","add","keys","idiomLetters","consecutiveFailures","anotherIdiom","has","j","size","nextIdiom","_passedIdioms","_keys","randomIdiom","random","error","possibleIdioms","keySize","startDate","getTodayGame","today","dayCount","max","IdiomsDashboard","wonCount","lostCount","boardGame","gameState","board","gamesCount","gamesCountOverTotal","ShareImageButton","header","footer","imageRef","useRef","imageSrc","setImageSrc","imageOpts","canvasWidth","canvasHeight","quality","mediaChanged","setMediaChanged","prefersColorSchemeSupported","colorSchemeChange","event","matches","addListener","removeListener","isSubscribed","current","dataURL","fileName","i18n","showDashboard","setShowDashboard","showError","setShowError","showModal","setShowModal","showInfoModal","setShowInfoModal","colorScheme","setColorScheme","html","querySelector","classList","remove","skipFirstTime","setSkipFirstTime","currentGame","setCurrentGame","location","hash","load","setBoard","cachedGame","useMemo","compareWords","definition","setDefinition","json","currentStep","currentGameKeys","currentGameKeysPinyin","allPossibleIdioms","keysPinyin","get","pinyinSet","sort","a","b","localeCompare","console","groupCollapsed","log","join","groupEnd","ANSWER","handleLetter","overwrite","newBoard","columnIndex","correctKeys","presentKeys","absentKeys","handleEnter","currentIdiom","valid","timeout","cachedTodayGame","pageLoad","isPageVisible","usePageVisibility","todayGame","test","handleBackspace","handleKey","metaKey","ctrlKey","toLowerCase","preventDefault","stopPropagation","reverse","pinyinLetter","possibleLettersSet","pinyins","firstPinyinChar","sensitivity","possibleLetters","letterIndex","indexOf","nextLetter","breakLoop","$board","getElementById","$currentRow","scrollIntoView","behavior","block","permalink","pathname","shortPermalink","host","emojiResults","trim","attempts","attemptsText","shareTextWithLink","hints","letters","absentHints","zh","c","en","letterHints","pinyinHint","pattern","HINTS","hintIndex","showHint","hint","toasts","useToasterStore","TOAST_LIMIT","visible","dismiss","gamesPlayedCount","precision","toPrecision","GamesCount","useCallback","play","currentTarget","p","userAgent","share","encodeURIComponent","blastConfetti","confirm","rand","round","randGame","prompt","URL","resolvedLanguage","undefined","changeLanguage","checked","reload","__COMMIT_HASH__","str","version","exportDate","bytes","TextEncoder","encode","blob","Blob","createObjectURL","$a","createElement","body","appendChild","style","href","download","click","revokeObjectURL","FileReader","file","fileList","files","reader","result","readAsText","top","className","pointerEvents","use","LanguageDetector","initReactI18next","init","resources","translation","zhCN","fallbackLng","debug","hostname","detection","lookupLocalStorage","lookupCookie","interpolation","escapeValue","updateLocale","documentElement","lang","content","on","render"],"mappings":"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"}