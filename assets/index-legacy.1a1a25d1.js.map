{"version":3,"file":"index-legacy.1a1a25d1.js","sources":["../../vite/modulepreload-polyfill","../../preact/jsx-runtime","../../src/app.jsx","../../src/main.jsx","../../src/compareWords.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import * as jsxRuntime from \"/home/runner/work/chengyu-wordle/chengyu-wordle/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import {\n  useState,\n  useEffect,\n  useMemo,\n  useRef,\n  useCallback,\n} from 'preact/hooks';\nimport { pinyin } from 'pinyin-pro';\nconst py = pinyin;\nwindow.pinyin = pinyin;\n\nimport { toJpeg } from 'html-to-image';\nimport { useTranslation, Trans } from 'react-i18next';\n\nimport toast, { Toaster, useToasterStore } from 'react-hot-toast';\nconst alert = (text) => toast(text);\n\nimport Switch from 'rc-switch';\n\nimport { toClipboard } from 'copee';\nconst copy = (text, fn = () => {}) => {\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard\n      .writeText(text)\n      .then(fn)\n      .catch((e) => {});\n  } else {\n    toClipboard(text);\n    fn();\n  }\n};\n\nimport compareWords from './compareWords';\n\n// Always need to wrap localStorage in a try/catch block because\n// it can throw an exception in some browsers (e.g. Safari)\nconst LS = {\n  getItem: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n  setItem: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      return null;\n    }\n  },\n  removeItem: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n};\n\nconst fireEvent = (...props) => {\n  if (window.plausible) {\n    plausible(...props);\n  }\n};\n\n// Data\nimport idiomsTxt from '../game-data/all-idioms.txt?raw';\nconst idioms = idiomsTxt.split('\\n');\nimport gameIdioms from '../game-data/game-idioms.csv';\nconst games = gameIdioms.slice(1).map((row) => ({\n  id: row[0],\n  idiom: row[1],\n}));\n\nconst KEY_PREFIX = 'cywd-';\nconst HARD_MODE = JSON.parse(LS.getItem(`${KEY_PREFIX}hardMode`) || false);\nconst MAX_GAMES_BEFORE_SHOW_DASHBOARD = 5000;\nconst MAX_LETTERS = 4;\nconst MAX_KEYS = HARD_MODE ? 40 : 20;\nconst MAX_STEPS = 6;\nconst MIN_IDIOMS = HARD_MODE ? 10 : 6;\n\nif (HARD_MODE) {\n  fireEvent('Hard mode');\n}\n\n// Check letters with multiple pinyins\n// const letter2PY = new Map();\n// const differentPinyins = [];\n// games.forEach((game) => {\n//   const letters = game.idiom.split('');\n//   const pinyins = pinyin(game.idiom, { type: 'array' });\n//   letters.forEach((letter, i) => {\n//     if (!letter2PY.has(letter)) {\n//       letter2PY.set(letter, pinyins[i]);\n//     } else if (letter2PY.get(letter) !== pinyins[i]) {\n//       differentPinyins.push({\n//         id: game.id,\n//         idiom: game.idiom,\n//         letter,\n//         pinyins: [letter2PY.get(letter), pinyins[i]].join(' '),\n//       });\n//     }\n//   });\n// });\n// console.log({\n//   differentPinyins: `id,idiom,letter,pinyins\\n${differentPinyins\n//     .map((row) => `${row.id},${row.idiom},${row.letter},${row.pinyins}`)\n//     .join('\\n')}`,\n// });\n\nwindow.clearGames = () => {\n  try {\n    const { length } = localStorage;\n    for (let i = 0; i < length; i++) {\n      const key = localStorage.key(i);\n      if (key?.startsWith(KEY_PREFIX)) {\n        localStorage.removeItem(key);\n      }\n    }\n  } catch (e) {}\n};\n\nwindow.allGames = () => {\n  const allGames = new Map();\n  const { length } = localStorage;\n  for (let i = 0; i < length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      const game = JSON.parse(localStorage.getItem(key));\n      allGames.set(key.replace(KEY_PREFIX, ''), game);\n    }\n  }\n  return allGames;\n};\n\nconst exportGameData = () => {\n  try {\n    const gameData = Object.entries(localStorage)\n      .filter(([k, v]) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && games.find((g) => g.id === gameID);\n      })\n      .map(([k, v]) => {\n        const id = k.slice(KEY_PREFIX.length);\n        const data = JSON.parse(v);\n        return {\n          id,\n          ...data,\n        };\n      });\n    return gameData;\n  } catch (e) {}\n};\nconst importGameData = (gameData, overrides = false) => {\n  try {\n    gameData.forEach((game) => {\n      const { id, ...data } = game;\n      if (overrides || !localStorage.getItem(`${KEY_PREFIX}${id}`)) {\n        LS.setItem(`${KEY_PREFIX}${id}`, JSON.stringify(data));\n      }\n    });\n  } catch (e) {}\n};\n\nconst getBoardGameState = (boardStates) => {\n  const won = boardStates.some(\n    (row) => !!row.length && row.every((s) => s === '🟩'),\n  );\n  if (won) return 'won';\n  const lastRow = boardStates[boardStates.length - 1];\n  const lost = !!lastRow.length && lastRow.every((s) => s !== '🟩');\n  if (lost) return 'lost';\n  return null;\n};\n\n// v = letter values of the row\n// s = submitted state of the row (after user press enter)\nconst blankBoard = () =>\n  Array.from({ length: MAX_STEPS }, () => ({\n    v: Array.from({ length: MAX_LETTERS }, () => ''),\n    s: false,\n  }));\n\nconst getIdiomsKeys = (idiom, prevPassedIdioms, prevKeys, depth = 0) => {\n  let passedIdioms = prevPassedIdioms || new Set();\n  passedIdioms.add(idiom);\n  let keys = prevKeys || new Set();\n  const idiomLetters = idiom.split('');\n  idiomLetters.forEach((letter) => keys.add(letter));\n  let consecutiveFailures = 0;\n  lettersCycle: for (let i = 0; i < games.length; i++) {\n    const letter = idiomLetters[(i + 1) % MAX_LETTERS];\n    const anotherIdiom = games.find(\n      ({ idiom }) => !passedIdioms.has(idiom) && idiom.includes(letter),\n    );\n    if (anotherIdiom) {\n      for (let j = 0; j < anotherIdiom.idiom.length; j++) {\n        keys.add(anotherIdiom.idiom[j]);\n\n        if (keys.size >= MAX_KEYS) {\n          break lettersCycle;\n        }\n      }\n      passedIdioms.add(anotherIdiom.idiom);\n      consecutiveFailures = 0;\n    } else {\n      if (consecutiveFailures >= MAX_LETTERS + 1) {\n        // Too many failures, stop\n        break lettersCycle;\n      }\n      consecutiveFailures += 1;\n    }\n  }\n\n  // Try the next idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const nextIdiom = [...passedIdioms][++depth];\n    if (nextIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        nextIdiom,\n        passedIdioms,\n        keys,\n        depth,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Still not enough keys, choose a random idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const randomIdiom = games[Math.floor(Math.random() * games.length)].idiom;\n    if (randomIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        randomIdiom,\n        passedIdioms,\n        keys,\n        0,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Something very wrong happened\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const gameID = games.find((g) => g.idiom === idiom)?.id;\n    console.error(gameID, {\n      possibleIdioms: passedIdioms.size,\n      keySize: keys.size,\n      consecutiveFailures,\n    });\n  }\n\n  return {\n    passedIdioms,\n    keys,\n  };\n};\n\n// Check if all idioms have enough keys/idioms\n// games.forEach((game) => {\n//   getIdiomsKeys(game.idiom);\n// });\n\nconst ShareIcon = (props) => (\n  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n    <path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"></path>\n  </svg>\n);\n\nconst DownloadIcon = (props) => (\n  <svg viewBox=\"0 0 330 330\" fill=\"currentColor\" {...props}>\n    <title>⬇️</title>\n    <path d=\"m154 256 1 1h2v1h1l1 1h2v1h8v-1h2l1-1h1v-1h2l1-1 70-70a15 15 0 0 0-22-22l-44 45V25a15 15 0 0 0-30 0v184l-44-45a15 15 0 1 0-22 22z\" />\n    <path d=\"M315 160c-8 0-15 7-15 15v115H30V175a15 15 0 0 0-30 0v130c0 8 7 15 15 15h300c8 0 15-7 15-15V175c0-8-7-15-15-15z\" />\n  </svg>\n);\n\nconst PlayIcon = (props) => (\n  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" {...props}>\n    <title>▶️</title>\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\n      clip-rule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst CloseIcon = (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <title>✖️</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    ></path>\n  </svg>\n);\n\nconst InfoIcon = (props) => (\n  <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" {...props}>\n    <title>ℹ️</title>\n    <path\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n    />\n  </svg>\n);\n\nconst startDate = new Date(2022, 0, 27); // 27 January 2022\nconst getTodayGame = () => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const diff = today - startDate;\n  const dayCount = Math.floor(diff / (1000 * 60 * 60 * 24));\n  return games[Math.max(0, dayCount % games.length)];\n};\n\n// Component that shows hours, minutes and seconds counting down to start of next day\nconst Countdown = () => {\n  const { t } = useTranslation();\n  let nextDay = new Date().setHours(0, 0, 0, 0) + 24 * 60 * 60 * 1000;\n  const nextStartDate = new Date(+startDate + 24 * 60 * 60 * 1000);\n  if (nextDay < nextStartDate) {\n    nextDay = nextStartDate;\n  }\n  const [hours, setHours] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [isNow, setIsNow] = useState(false);\n  // update countdown every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const diff = nextDay - new Date();\n      if (diff <= 0) {\n        setIsNow(true);\n        clearInterval(timer);\n        return;\n      }\n      setHours(\n        Math.floor(diff / (1000 * 60 * 60))\n          .toString()\n          .padStart(2, '0'),\n      );\n      setMinutes(\n        Math.floor((diff / (1000 * 60)) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n      setSeconds(\n        Math.floor((diff / 1000) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  if (isNow) {\n    return <a href=\"./\">{t('ui.countdownNow')}</a>;\n  }\n  return (\n    <time class=\"countdown\">\n      {hours}:{minutes}:{seconds}\n    </time>\n  );\n};\n\nconst CodeInput = ({ code, url }) => {\n  const { t } = useTranslation();\n  return (\n    code && (\n      <input\n        type=\"text\"\n        readOnly\n        value={code}\n        class=\"idiom-code\"\n        onClick={(e) => {\n          e.target.focus();\n          e.target.select();\n          copy(url || code, () => {\n            alert(t('ui.copiedURL'));\n          });\n          fireEvent('Click: Share', {\n            props: {\n              type: 'idiom-code',\n            },\n          });\n        }}\n      />\n    )\n  );\n};\n\nconst Letter = ({ letter, pinyin, state }) => {\n  return (\n    <div\n      class={`letter ${letter ? 'lettered' : ''} ${state ?? ''} ${\n        state ? '🌈' : ''\n      }`}\n    >\n      <ruby>\n        {letter || <span style={{ opacity: 0 }}>一</span>}\n        <rp>(</rp>\n        <rt>{pinyin || py(letter) || <>&nbsp;</>}</rt>\n        <rp>)</rp>\n      </ruby>\n    </div>\n  );\n};\n\nconst CurrentPlaying = () => {\n  const { t } = useTranslation();\n  const [playingCount, setPlayingCount] = useState(0);\n  useEffect(() => {\n    let fetchTimer, fetchRAF;\n    const fetchPlayingCount = () => {\n      fetch('https://chengyu-wordle-realtime-visitors.cheeaun.workers.dev/')\n        .then((r) => {\n          if (!r.ok) throw Error(r.statusText);\n          return r.text();\n        })\n        .then((text) => {\n          const count = +text;\n          if (!count) throw Error('Zero or NaN');\n          setPlayingCount(count);\n        })\n        .catch((e) => {\n          setPlayingCount(0);\n        });\n      fetchTimer = setTimeout(() => {\n        fetchRAF = requestAnimationFrame(fetchPlayingCount);\n      }, 2 * 60 * 1000);\n    };\n    fetchPlayingCount();\n    return () => {\n      clearTimeout(fetchTimer);\n      cancelAnimationFrame(fetchRAF);\n    };\n  }, []);\n\n  if (playingCount <= 1) return null;\n\n  return (\n    <div id=\"current-playing\">\n      {t('ui.countPlaying', { count: playingCount })}\n    </div>\n  );\n};\n\nimport confetti from 'canvas-confetti';\nlet confettiRAF;\nconst blastConfetti = () => {\n  const end = Date.now() + 2 * 1000;\n  const colors = ['#008000', '#FFA500'];\n\n  (function frame() {\n    confetti({\n      particleCount: 2,\n      angle: 60,\n      spread: 80,\n      origin: { x: 0, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    confetti({\n      particleCount: 2,\n      angle: 120,\n      spread: 80,\n      origin: { x: 1, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    if (Date.now() < end) {\n      confettiRAF = requestAnimationFrame(frame);\n    }\n  })();\n};\nconst stopConfetti = () => {\n  cancelAnimationFrame(confettiRAF);\n};\nconst IdiomsDashboard = () => {\n  const { t } = useTranslation();\n  let wonCount = 0;\n  let lostCount = 0;\n  const idioms = games.map((game) => {\n    // Get board from localStorage\n    const boardGame = JSON.parse(LS.getItem(`${KEY_PREFIX}${game.id}`));\n    if (boardGame && boardGame.gameState) {\n      const { board, gameState } = boardGame;\n      if (gameState === 'won') {\n        wonCount++;\n      } else if (gameState === 'lost') {\n        lostCount++;\n      }\n      return (\n        <a\n          href={`/#${game.id}`}\n          class={`board ${gameState}`}\n          title={`${game.id} (${gameState})`}\n        >\n          {gameState === 'won' ? '🟩' : '🟧'}\n        </a>\n      );\n    } else {\n      return (\n        <a href={`/#${game.id}`} class=\"board\" title={`${game.id}`}>\n          ⬜\n        </a>\n      );\n    }\n  });\n\n  useEffect(() => {\n    blastConfetti();\n    return stopConfetti;\n  }, []);\n\n  return (\n    <>\n      <h2>\n        {t('dashboard.heading', {\n          gamesCount: MAX_GAMES_BEFORE_SHOW_DASHBOARD,\n        })}\n      </h2>\n      <p>{t('dashboard.subheading')}</p>\n      <p>\n        <Trans\n          i18nKey=\"dashboard.totalGamesPlayed\"\n          values={{\n            gamesCountOverTotal: `${wonCount + lostCount} / ${games.length}`,\n          }}\n          components={[<b />]}\n        />\n        <br />\n        <Trans\n          i18nKey=\"dashboard.wonLost\"\n          values={{\n            wonCount,\n            lostCount,\n          }}\n          components={[<b />, <b />]}\n        />\n      </p>\n      <div class=\"boards\">{idioms}</div>\n    </>\n  );\n};\n\nconst prefersColorSchemeSupported =\n  'matchMedia' in window &&\n  window.matchMedia('(prefers-color-scheme: dark)').media !== 'not all';\n\nconst ShareImageButton = ({ header, footer, boardStates, id }) => {\n  const { t } = useTranslation();\n  const imageRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const imageOpts = {\n    canvasWidth: 1080,\n    canvasHeight: 1080,\n    quality: 0.5,\n  };\n\n  // Update image when light/dark mode kicks in\n  const [mediaChanged, setMediaChanged] = useState();\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n    const colorSchemeChange = (event) => {\n      setMediaChanged(event.matches);\n    };\n    try {\n      media.addEventListener('change', colorSchemeChange);\n    } catch (e) {\n      media.addListener(colorSchemeChange);\n    }\n    return () => {\n      try {\n        media.removeEventListener('change', colorSchemeChange);\n      } catch (e) {\n        media.removeListener(colorSchemeChange);\n      }\n    };\n  });\n\n  useEffect(() => {\n    setImageSrc(null);\n    toJpeg(imageRef.current, imageOpts)\n      .then((dataURL) => {\n        setImageSrc(dataURL);\n      })\n      .catch((e) => {\n        setImageSrc(null);\n      });\n  }, [boardStates, id, mediaChanged]);\n\n  const fileName = `chengyu-wordle-${id}.jpg`;\n\n  return (\n    <>\n      {!!imageSrc && (\n        <a\n          id=\"share-image-button\"\n          class=\"button\"\n          href={imageSrc}\n          download={fileName}\n          target=\"_blank\"\n          onClick={() => {\n            fireEvent('Click: Share', {\n              props: {\n                type: 'image',\n              },\n            });\n          }}\n        >\n          {t('common.image')} <DownloadIcon width=\"12\" height=\"12\" />\n        </a>\n      )}\n      <div id=\"share-image-container\">\n        <div id=\"share-image\" ref={imageRef}>\n          <p class=\"header\">\n            <b>{header}</b>\n          </p>\n          <div class=\"board\">\n            {boardStates.map((row) => {\n              return (\n                <div>\n                  {row.map((letter) => {\n                    return <span class={`tile ${letter}`} />;\n                  })}\n                </div>\n              );\n            })}\n          </div>\n          <p class=\"footer\">{footer}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport function App() {\n  const { t, i18n } = useTranslation();\n\n  const [showDashboard, setShowDashboard] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showModal, setShowModal] = useState(false); // false | won | lost\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const [colorScheme, setColorScheme] = useState(\n    LS.getItem(`${KEY_PREFIX}colorScheme`) || 'auto',\n  );\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const html = document.querySelector('html');\n    if (colorScheme === 'dark') {\n      html.classList.add('dark-mode');\n      html.classList.remove('light-mode');\n    } else if (colorScheme === 'light') {\n      html.classList.add('light-mode');\n      html.classList.remove('dark-mode');\n    } else {\n      html.classList.remove('dark-mode', 'light-mode');\n    }\n  }, [colorScheme]);\n\n  const [skipFirstTime, setSkipFirstTime] = useState(\n    LS.getItem(`${KEY_PREFIX}skipFirstTime`) || false,\n  );\n\n  const [currentGame, setCurrentGame] = useState(\n    games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n  );\n  useEffect(() => {\n    window.addEventListener('hashchange', () => {\n      setCurrentGame(\n        games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n      );\n      setShowDashboard(false);\n    });\n  }, []);\n\n  const [board, setBoard] = useState(\n    JSON.parse(LS.getItem(`${KEY_PREFIX}${currentGame.id}`))?.board ||\n      blankBoard(),\n  );\n  useEffect(() => {\n    const cachedGame = LS.getItem(`${KEY_PREFIX}${currentGame.id}`);\n    if (cachedGame) {\n      setBoard(JSON.parse(cachedGame).board);\n    } else {\n      setBoard(blankBoard());\n    }\n  }, [currentGame.id]);\n\n  const boardStates = useMemo(() => {\n    return board.map((row, i) => {\n      if (row.s) {\n        return compareWords(currentGame.idiom, row.v);\n      }\n      return [];\n    });\n  }, [board]);\n\n  // Save to localStorage every time board changes\n  useEffect(() => {\n    // Only store in localStorage if board has some values\n    if (board && board.some((row) => row.v.some((v) => v))) {\n      LS.setItem(\n        `${KEY_PREFIX}${currentGame.id}`,\n        JSON.stringify({\n          board,\n          gameState: getBoardGameState(boardStates),\n        }),\n      );\n    }\n  }, [boardStates]);\n\n  const [definition, setDefinition] = useState(null);\n  useEffect(() => {\n    setDefinition(null);\n    fetch(\n      `https://baidu-hanyu-idiom.cheeaun.workers.dev/?wd=${currentGame.idiom}`,\n    )\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.definition) {\n          setDefinition(r.definition);\n        }\n      })\n      .catch(() => {});\n  }, [currentGame.idiom]);\n\n  const currentStep = board?.findIndex((row) => row.s === false) || 0;\n\n  const [currentGameKeys, currentGameKeysPinyin] = useMemo(() => {\n    const { keys } = getIdiomsKeys(currentGame.idiom);\n    const allPossibleIdioms = idioms.filter((idiom) => {\n      // check if idiom contains 4 letters from keys\n      return idiom.split('').every((letter) => keys.has(letter));\n    });\n\n    // Pinyin mappings\n    const keysPinyin = new Map();\n    allPossibleIdioms.forEach((idiom) => {\n      const idiomPinyin = pinyin(idiom, { type: 'array' });\n      idiomPinyin.forEach((pinyin, i) => {\n        if (keysPinyin.has(idiom[i])) {\n          keysPinyin.get(idiom[i]).add(pinyin);\n        } else {\n          keysPinyin.set(idiom[i], new Set([pinyin]));\n        }\n      });\n    });\n    keysPinyin.forEach((pinyinSet, letter) => {\n      pinyinSet.add(py(letter)); // Add its own individual-letter pinyin\n    });\n\n    // SPOILER inside console.log!\n    const possibleIdioms = allPossibleIdioms\n      .map((idiom) => {\n        return `${idiom} (${py(idiom)})`;\n      })\n      .sort((a, b) => a.localeCompare(b, 'zh'));\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\n        `${possibleIdioms.length} Possible Idioms [${currentGame.id}] (${keys.size} keys):`,\n      );\n      console.log(`${possibleIdioms\n        .map((idiom, i) => `${i + 1}. ${idiom}`)\n        .join('\\n')}\n\n🚨SPOILER🚨 Type 'HINTS' to see all hints. Type 'ANSWER' to see the answer.`);\n      console.groupEnd();\n    }\n    window.ANSWER = `${currentGame.idiom} (${py(currentGame.idiom)})`;\n\n    const sortedKeys = [...keys].sort((a, b) => a.localeCompare(b, 'zh'));\n    return [sortedKeys, keysPinyin];\n  }, [currentGame.idiom]);\n\n  const handleLetter = (letter, overwrite = false) => {\n    if (!board[currentStep]) return;\n    if (gameState) return;\n    setShowError(false);\n\n    const newBoard = [...board];\n    let columnIndex = newBoard[currentStep].v.findIndex((v) => v === '');\n    if (overwrite) {\n      if (columnIndex === -1) {\n        columnIndex = 3;\n      } else {\n        columnIndex--;\n      }\n    }\n    if (columnIndex !== -1) {\n      newBoard[currentStep].v[columnIndex] = letter;\n      setBoard(newBoard);\n    }\n  };\n\n  const correctKeys = new Set();\n  const presentKeys = new Set();\n  const absentKeys = new Set();\n  board.forEach((row, i) => {\n    if (!row.s) return;\n    row.v.forEach((letter, j) => {\n      const state = boardStates[i][j];\n      if (state === '🟩') {\n        correctKeys.add(letter);\n      } else if (state === '🟧') {\n        presentKeys.add(letter);\n      } else if (state === '⬜') {\n        absentKeys.add(letter);\n      }\n    });\n  });\n\n  const handleEnter = () => {\n    if (gameState) return;\n    console.log('handleEnter');\n    setShowError(false);\n\n    const row = board[currentStep];\n    if (!row) return;\n    const currentIdiom = row.v.join('');\n    const valid = idioms.includes(currentIdiom);\n    if (valid) {\n      row.s = true;\n      setBoard([...board]);\n    } else {\n      setTimeout(() => {\n        setShowError(true);\n      }, 10);\n    }\n    console.log({ currentIdiom, valid });\n  };\n\n  const gameState = useMemo(() => {\n    return getBoardGameState(boardStates);\n  }, [boardStates]);\n\n  useEffect(() => {\n    let timeout;\n    if (gameState === 'won') {\n      timeout = setTimeout(() => {\n        setShowModal('won');\n      }, 600);\n    } else if (gameState === 'lost') {\n      setShowModal('lost');\n    } else {\n      setShowModal(false);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [gameState]);\n\n  const handleBackspace = () => {\n    if (gameState) return;\n    const newBoard = [...board];\n    // Get last column with value\n    const row = newBoard[currentStep];\n    if (!row || row.s) return;\n    let columnIndex = -1;\n    for (let i = row.v.length - 1; i >= 0; i--) {\n      if (row.v[i] !== '') {\n        columnIndex = i;\n        break;\n      }\n    }\n    if (columnIndex !== -1) {\n      row.v[columnIndex] = '';\n      setBoard(newBoard);\n    }\n  };\n\n  useEffect(() => {\n    const handleKey = (e) => {\n      if (gameState) return;\n      if (e.metaKey || e.ctrlKey || !e.key) {\n        return;\n      }\n      const key = e.key.toLowerCase();\n      if (key === 'enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        handleEnter();\n      } else if (key === 'backspace') {\n        e.preventDefault();\n        handleBackspace();\n      } else if (/^arrow(left|right)/i.test(key)) {\n        // This will cycle through all letters with same starting pinyin letter\n        const row = board[currentStep];\n        const value = [...row.v].reverse().find((v) => v !== '');\n        if (value) {\n          const pinyinLetter = py(value)[0];\n\n          const possibleLettersSet = new Set();\n          currentGameKeysPinyin.forEach((pinyins, letter) => {\n            pinyins.forEach((pinyin) => {\n              const firstPinyinChar = pinyin[0];\n              if (\n                firstPinyinChar.localeCompare(pinyinLetter, 'en', {\n                  sensitivity: 'base',\n                }) === 0\n              ) {\n                possibleLettersSet.add(letter);\n              }\n            });\n          });\n          const possibleLetters = [...possibleLettersSet];\n\n          if (possibleLetters.length <= 1) return;\n          const letterIndex = possibleLetters.indexOf(value);\n          const nextLetter =\n            key === 'arrowright'\n              ? possibleLetters[(letterIndex + 1) % possibleLetters.length]\n              : possibleLetters[\n                  (letterIndex + possibleLetters.length - 1) %\n                    possibleLetters.length\n                ];\n          if (nextLetter) {\n            handleLetter(nextLetter, true);\n          }\n        }\n      } else if (/[a-z]/i.test(key)) {\n        // Type \"a\" will trigger the first letter pinyin that starts with \"ā\"\n        let breakLoop = false;\n        currentGameKeysPinyin.forEach((pinyins, letter) => {\n          if (breakLoop) return;\n          pinyins.forEach((pinyin) => {\n            if (breakLoop) return;\n            const firstPinyinChar = pinyin[0];\n            if (\n              firstPinyinChar.localeCompare(key, 'en', {\n                sensitivity: 'base',\n              }) === 0\n            ) {\n              e.preventDefault();\n              breakLoop = true;\n              handleLetter(letter);\n            }\n          });\n        });\n      }\n\n      const $board = document.getElementById('board');\n      if ($board?.querySelector) {\n        const $currentRow = $board.querySelector(\n          `.row:nth-child(${currentStep + 1})`,\n        );\n        if ($currentRow?.scrollIntoView) {\n          $currentRow.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          });\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKey);\n    return () => {\n      document.removeEventListener('keydown', handleKey);\n    };\n  }, [currentGameKeys, currentGameKeysPinyin, board, currentStep, gameState]);\n\n  const permalink = location.origin + location.pathname + '#' + currentGame.id;\n  const shortPermalink =\n    location.host + location.pathname + '#' + currentGame.id;\n  const emojiResults = boardStates\n    .map((row) => row.join(''))\n    .join('\\n')\n    .trim();\n  const attempts = gameState === 'won' ? emojiResults.split('\\n').length : 'X';\n  const attemptsText = `${attempts}/${MAX_STEPS}`;\n  const shareText = `${t('app.title')} [${currentGame.id}]${\n    HARD_MODE ? ' 🔥' : ''\n  } ${attemptsText}\\n\\n${emojiResults}`;\n  const shareTextWithLink = `${shareText}\\n\\n${shortPermalink}`;\n\n  const hints = useMemo(() => {\n    const hints = [];\n    const letters = currentGame.idiom.split('');\n\n    // 1. Absent letters hints\n    const absentHints = currentGameKeys\n      .filter((k) => {\n        return !letters.includes(k) && !absentKeys.has(k);\n      })\n      .slice(0, -1) // Don't reveal at least one letter\n      .slice(0, 3) // But still max 3 letters\n      .map((letter) => {\n        return t('hints.absentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...absentHints);\n\n    // 2. Definition hints\n    if (\n      definition?.zh &&\n      letters.filter((c) => definition.zh.includes(c)).length <= 2\n      // Only show hint if definition contains 2 or less of the characters in the idiom\n      // Else, the definition basically revealed the answer\n    ) {\n      hints.push(`ℹ️ ${definition.zh}`);\n    }\n    if (definition?.en) hints.push(`ℹ️ ${definition.en}`);\n\n    // 3. Letter hints\n    const letterHints = letters\n      .filter((c) => !correctKeys.has(c) && !presentKeys.has(c))\n      .slice(0, -1) // Don't reveal at least one letter\n      .map((letter) => {\n        return t('hints.presentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...letterHints);\n\n    // 4. Pinyin hints\n    const pinyinHint = py(currentGame.idiom, {\n      pattern: 'first',\n      type: 'array',\n    }).join('');\n    hints.push(t('hints.abbreviatedPinyin', { pinyinHint }));\n\n    window.HINTS = hints;\n\n    return hints;\n  }, [currentGame.idiom, definition]);\n  const hintIndex = useRef(0);\n  useEffect(() => {\n    hintIndex.current = 0;\n  }, [currentGame.idiom]);\n  const showHint = () => {\n    if (gameState) return;\n    const hint = hints[hintIndex.current];\n    hintIndex.current = (hintIndex.current + 1) % hints.length;\n    alert(hint);\n  };\n\n  // Limit number of toasts\n  // https://github.com/timolins/react-hot-toast/issues/31#issuecomment-803359550\n  const { toasts } = useToasterStore();\n  const TOAST_LIMIT = 1;\n  useEffect(() => {\n    toasts\n      .filter((t, i) => t.visible && i >= TOAST_LIMIT)\n      .forEach((t) => toast.dismiss(t.id));\n  }, [toasts]);\n\n  const gamesPlayedCount = useMemo(() => {\n    // Only count games played if info modal is open\n    if (!showInfoModal) return;\n    try {\n      const keys = Object.keys(localStorage).filter((k) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && games.find((g) => g.id === gameID);\n      });\n      return keys.length;\n    } catch (e) {}\n  }, [showInfoModal]);\n\n  useEffect(() => {\n    if (!gamesPlayedCount || gamesPlayedCount < 10) return;\n    const precision = gamesPlayedCount < 100 ? 1 : 2;\n    const count = +gamesPlayedCount.toPrecision(precision);\n    fireEvent('Games Played', {\n      props: {\n        count,\n      },\n    });\n  }, [gamesPlayedCount]);\n\n  const GamesCount = useCallback(\n    () => (\n      <b>\n        {gamesPlayedCount}\n        {gamesPlayedCount >= MAX_GAMES_BEFORE_SHOW_DASHBOARD && (\n          <>\n            {' '}\n            /{' '}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                setShowInfoModal(false);\n                setShowDashboard(true);\n              }}\n            >\n              {games.length}\n            </a>\n          </>\n        )}\n      </b>\n    ),\n    [gamesPlayedCount],\n  );\n\n  return (\n    <>\n      <header>\n        <div class=\"inner\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowInfoModal(true);\n            }}\n          >\n            <InfoIcon width=\"16\" height=\"16\" />\n          </button>\n          <span>\n            <h1>{t('app.title')}</h1>\n            <CurrentPlaying />\n          </span>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowModal(gameState || 'play');\n            }}\n          >\n            {gameState ? (\n              t('common.play')\n            ) : (\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 290 290\">\n                <title>...</title>\n                <path\n                  fill=\"currentColor\"\n                  d=\"M255 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM35 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM145 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70z\"\n                />\n              </svg>\n            )}\n          </button>\n        </div>\n      </header>\n      <div id=\"board\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        {board.map((row, index) => {\n          const pinyins = pinyin(row.v.join(''), { type: 'array' });\n          return (\n            <div\n              className={`row ${\n                currentStep === index && showError ? 'error' : ''\n              } ${currentStep === index ? 'current' : ''} ${boardStates[\n                index\n              ].join('')}`}\n              key={index}\n            >\n              {row.v.map((letter, i) => (\n                <Letter\n                  key={i}\n                  letter={letter}\n                  pinyin={pinyins[i]}\n                  state={boardStates[index][i]}\n                />\n              ))}\n            </div>\n          );\n        })}\n      </div>\n      <div id=\"keyboard\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        <div class=\"inner\">\n          <div class=\"keys\">\n            {currentGameKeys.map((key, i) => (\n              <button\n                class={`${correctKeys.has(key) ? '🟩' : ''} ${\n                  presentKeys.has(key) ? '🟧' : ''\n                } ${absentKeys.has(key) ? '⬜' : ''}`}\n                type=\"button\"\n                tabIndex={-1}\n                onClick={() => {\n                  handleLetter(key);\n                }}\n              >\n                <ruby>\n                  {key}\n                  <rp>(</rp>\n                  <rt>\n                    {currentGameKeysPinyin.has(key)\n                      ? [...currentGameKeysPinyin.get(key)]\n                          .sort((a, b) => a.localeCompare(b, 'zh'))\n                          .join(' ⸱ ')\n                      : py(key)}\n                  </rt>\n                  <rp>)</rp>\n                </ruby>\n              </button>\n            ))}\n          </div>\n          <div class=\"row\">\n            <button type=\"button\" onClick={handleEnter} tabIndex={-1}>\n              {t('common.enter')}\n            </button>\n            {HARD_MODE ? (\n              <b class=\"hard\">{t('ui.hardMode')}</b>\n            ) : (\n              <button type=\"button\" class=\"stuck\" onClick={showHint}>\n                {t('ui.hint')}\n              </button>\n            )}\n            <button type=\"button\" onClick={handleBackspace} tabIndex={-1}>\n              <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"modal\"\n        class={showModal ? 'appear' : ''}\n        onClick={(e) => {\n          if (e.target === e.currentTarget) setShowModal(null);\n        }}\n      >\n        <CloseIcon\n          height=\"24\"\n          width=\"24\"\n          class=\"close\"\n          onClick={() => {\n            setShowModal(null);\n          }}\n        />\n        <div class=\"content\">\n          <h2>\n            {showModal === 'won'\n              ? '🎉🎉🎉'\n              : showModal === 'lost'\n              ? '😭😭😭'\n              : '🐯🐯🐯'}\n          </h2>\n          {showModal === 'play' && (\n            <p>\n              {t('ui.idiomId')}{' '}\n              <CodeInput code={currentGame.id} url={permalink} />\n            </p>\n          )}\n          {/(won|lost)/i.test(showModal) && (\n            <>\n              <p>\n                <b class=\"answer\">\n                  <ruby>\n                    {currentGame.idiom}\n                    <rp>(</rp>\n                    <rt>{py(currentGame.idiom)}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </b>\n                <div class=\"definition\">\n                  {definition?.zh\n                    ? definition.zh.split('').map((c) => {\n                        const p = py(c);\n                        if (p === c) return c;\n                        return (\n                          <ruby>\n                            {c}\n                            <rp>(</rp>\n                            <rt>{py(c)}</rt>\n                            <rp>)</rp>\n                          </ruby>\n                        );\n                      })\n                    : ''}\n                  {definition?.zh && definition?.en && <br />}\n                  {definition?.en}\n                </div>\n                <small>\n                  <a\n                    href={`https://hanyu.baidu.com/s?wd=${currentGame.idiom}&from=zici`}\n                    target=\"_blank\"\n                  >\n                    📖 {t('glossary.baidu')}\n                  </a>\n                  &nbsp; &nbsp;\n                  <a\n                    href={`https://www.zdic.net/hans/${currentGame.idiom}`}\n                    target=\"_blank\"\n                  >\n                    📖 {t('glossary.zdic')}\n                  </a>\n                </small>\n              </p>\n              <div class=\"results-container\">\n                <div class=\"results\">{shareTextWithLink}</div>\n                <div>\n                  <button\n                    id=\"share\"\n                    onClick={async () => {\n                      try {\n                        if (\n                          // Edge/ or Edg/\n                          /edge?\\//i.test(navigator.userAgent) ||\n                          // Windows\n                          /windows/.test(navigator.userAgent)\n                        ) {\n                          throw new Error(\n                            'Web Share API not working well here',\n                          );\n                        }\n                        copy(shareTextWithLink);\n                        await navigator.share({ text: shareTextWithLink });\n                      } catch (e) {\n                        copy(shareTextWithLink, () => {\n                          alert(t('ui.copiedResults'));\n                        });\n                      }\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'share',\n                        },\n                      });\n                    }}\n                  >\n                    {t('common.share')} <ShareIcon width=\"16\" height=\"16\" />\n                  </button>\n                  &nbsp;\n                  <ShareImageButton\n                    id={currentGame.id}\n                    header={t('app.title')}\n                    footer={`[${currentGame.id}]${\n                      HARD_MODE ? ' 🔥' : ''\n                    } ${attemptsText}`}\n                    boardStates={boardStates}\n                  />\n                  &nbsp;\n                  <a\n                    class=\"button facebook\"\n                    href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n                      permalink,\n                    )}&hashtag=${encodeURIComponent('#chengyuwordle')}`}\n                    target=\"_blank\"\n                    onClick={() => {\n                      copy(shareTextWithLink);\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'facebook',\n                        },\n                      });\n                    }}\n                  >\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 96.1 96.1\">\n                      <title>Facebook</title>\n                      <path\n                        fill=\"currentColor\"\n                        d=\"M72 0H59.7c-14 0-23 9.3-23 23.7v10.9H24c-1 0-2 .8-2 2v15.7c0 1.1 1 2 2 2h12.6v39.9c0 1 .8 2 2 2h16.3c1 0 2-1 2-2v-40h14.6c1 0 2-.8 2-1.9V36.5a2 2 0 0 0-2-2H56.8v-9.2c0-4.4 1.1-6.7 6.9-6.7H72c1 0 2-.9 2-2V2c0-1.1-1-2-2-2z\"\n                      />\n                    </svg>\n                  </a>\n                  &nbsp;\n                  <a\n                    class=\"button tweet\"\n                    href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n                      shareTextWithLink,\n                    )}`}\n                    target=\"_blank\"\n                    onClick={() => {\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'twitter',\n                        },\n                      });\n                    }}\n                  >\n                    <svg height=\"16\" width=\"16\" viewBox=\"0 0 24 24\">\n                      <title>{t('common.tweet')}</title>\n                      <path\n                        fill=\"currentColor\"\n                        d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"\n                      />\n                    </svg>\n                  </a>\n                  &nbsp;\n                  <CodeInput code={currentGame.id} url={permalink} />\n                </div>\n              </div>\n            </>\n          )}\n          {gameState === 'won' && attempts <= 2 && !HARD_MODE && (\n            <p\n              onClick={() => {\n                setShowModal(null);\n                setTimeout(() => {\n                  setShowInfoModal(true);\n                }, 300);\n              }}\n            >\n              {t('ui.easyEnableHardMode')}\n            </p>\n          )}\n          {showModal === 'won' &&\n            gameState === 'won' &&\n            attempts >= 5 &&\n            blastConfetti()}\n          <div class=\"footer\">\n            {/won|lost/i.test(gameState) &&\n              getTodayGame().id === currentGame.id && (\n                <p>\n                  <big>\n                    <Trans\n                      i18nKey=\"ui.nextIdiom\"\n                      components={[<Countdown />]}\n                    />\n                  </big>\n                </p>\n              )}\n            <div>\n              {getTodayGame().id !== currentGame.id && (\n                <>\n                  <a href=\"./\" class=\"button strong\">\n                    <PlayIcon width={20} height={20} /> {t('ui.playTodayGame')}\n                  </a>\n                  <br />\n                </>\n              )}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Random');\n                  const yes = confirm(t('ui.confirmRandom'));\n                  if (yes) {\n                    const rand = Math.round(Math.random() * (games.length - 1));\n                    const randGame = games[rand];\n                    location.hash = `#${randGame.id}`;\n                    setShowModal(null);\n                    fireEvent('Game load: Random');\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.random')}\n              </button>{' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Idiom ID');\n                  // Ask user for idiom ID, load game if ID is valid\n                  let id = prompt(t('ui.promptIdiom'));\n                  try {\n                    id = new URL(id).hash.slice(1);\n                  } catch (e) {}\n                  if (id) {\n                    const game = games.find((g) => g.id === id);\n                    if (game) {\n                      location.hash = `#${game.id}`;\n                      setShowModal(null);\n                      fireEvent('Game load: Idiom ID');\n                    } else {\n                      alert('Invalid idiom ID');\n                    }\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.choose')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"info-modal\"\n        class={showInfoModal || !skipFirstTime ? 'appear' : ''}\n      >\n        {skipFirstTime && (\n          <CloseIcon\n            height=\"32\"\n            width=\"32\"\n            class=\"close\"\n            onClick={() => {\n              setShowInfoModal(false);\n            }}\n          />\n        )}\n        <div class=\"content\">\n          {prefersColorSchemeSupported && (\n            <p class=\"color-scheme-selector\">\n              <button\n                type=\"button\"\n                class={colorScheme === 'dark' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'dark');\n                  setColorScheme('dark');\n                }}\n              >\n                🌑\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'auto' ? 'active' : ''}\n                onClick={() => {\n                  LS.removeItem(`${KEY_PREFIX}colorScheme`);\n                  setColorScheme('auto');\n                }}\n              >\n                🌓\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'light' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'light');\n                  setColorScheme('light');\n                }}\n              >\n                🌕\n              </button>\n            </p>\n          )}{' '}\n          <p class=\"locale-selector\">\n            🌐{' '}\n            <a\n              href=\"./?lng=en\"\n              hreflang=\"en\"\n              rel={i18n.resolvedLanguage === 'en' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'en' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('en');\n              }}\n            >\n              English\n            </a>{' '}\n            &#8901;{' '}\n            <a\n              href=\"./?lng=zh-CN\"\n              hreflang=\"zh-CN\"\n              rel={i18n.resolvedLanguage === 'zh' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'zh' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('zh-CN');\n              }}\n            >\n              中文\n            </a>\n          </p>\n          {skipFirstTime && gamesPlayedCount > 0 && (\n            <div id=\"stats\">\n              <p>\n                <Trans i18nKey=\"ui.gamesPlayed\" components={[<GamesCount />]} />\n              </p>\n              <div id=\"config\">\n                <p>\n                  <label>\n                    {t('ui.hardMode')}\n                    <Switch\n                      defaultChecked={HARD_MODE}\n                      onChange={(checked) => {\n                        LS.setItem(\n                          `${KEY_PREFIX}hardMode`,\n                          checked ? 'true' : 'false',\n                        );\n                        setTimeout(() => {\n                          location.reload();\n                        }, 310); // Wait for Switch to animate\n                      }}\n                    />\n                  </label>\n                </p>\n              </div>\n            </div>\n          )}\n          <h2>{t('howToPlay.heading')}</h2>\n          <p>{t('howToPlay.how1')}</p>\n          <p>{t('howToPlay.how2')}</p>\n          <p>{t('howToPlay.how3')}</p>\n          <div class=\"example-idiom\">\n            {'九牛一毛'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 0 ? '🟩' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotCorrect')}</p>\n          <div class=\"example-idiom\">\n            {'理所当然'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 1 ? '🟧' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotPresent')}</p>\n          <div class=\"example-idiom\">\n            {'爱不释手'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 2 ? '⬜' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotAbsent')}</p>\n          <p>{t('howToPlay.how4')}</p>\n          {skipFirstTime ? (\n            <>\n              <h2>{t('about.heading')}</h2>\n              <p>\n                <Trans\n                  i18nKey=\"about.about1\"\n                  components={[\n                    <a\n                      href=\"https://github.com/cheeaun/chengyu-wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://cheeaun.com/projects/\" target=\"_blank\" />,\n                    <a\n                      href=\"https://www.nytimes.com/games/wordle/\"\n                      target=\"_blank\"\n                    />,\n                  ]}\n                />\n              </p>\n              <p>\n                <Trans\n                  i18nKey=\"about.about2\"\n                  components={[\n                    <a\n                      href=\"https://www.buymeacoffee.com/cheeaun\"\n                      target=\"_blank\"\n                    />,\n                  ]}\n                />\n              </p>\n              <h2>{t('feedback.heading')}</h2>\n              <ul>\n                <li>\n                  <a href=\"https://t.me/+ykuhfiImLd1kNjk1\" target=\"_blank\">\n                    {t('feedback.telegramGroup')}\n                  </a>\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubDiscussions\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/discussions\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubIssues\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/issues\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <a href=\"https://twitter.com/cheeaun\" target=\"_blank\">\n                    {t('feedback.twitter')}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://t.me/cheeaun\" target=\"_blank\">\n                    {t('feedback.telegram')}\n                  </a>\n                </li>\n              </ul>\n              <details id=\"debugging-container\">\n                <summary>\n                  {t('debugging.heading')} ({__COMMIT_HASH__})\n                </summary>\n                <div>\n                  Game data:{' '}\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      // Construct URL\n                      const data = exportGameData();\n                      const str = JSON.stringify({\n                        version: 1,\n                        exportDate: new Date(),\n                        data,\n                      });\n                      const bytes = new TextEncoder().encode(str);\n                      const blob = new Blob([bytes], {\n                        type: 'application/json;charset=utf-8',\n                      });\n                      const url = URL.createObjectURL(blob);\n\n                      // Trigger download\n                      const $a = document.createElement('a');\n                      document.body.appendChild($a);\n                      $a.style = 'display: none';\n                      $a.href = url;\n                      $a.download = 'chengyu-wordle.gamedata.json';\n                      $a.click();\n\n                      // Clean up\n                      URL.revokeObjectURL(url);\n                      $a.remove();\n                    }}\n                  >\n                    Export\n                  </button>{' '}\n                  <label class=\"input-file-button\">\n                    <input\n                      type=\"file\"\n                      accept=\".json\"\n                      onChange={(event) => {\n                        if (window.FileReader) {\n                          if (confirm('Are you sure you want to import?')) {\n                            try {\n                              const fileList = event.target.files;\n                              const file = fileList[0];\n                              const reader = new FileReader();\n                              reader.addEventListener('load', (e) => {\n                                const gameData = JSON.parse(\n                                  e.target.result,\n                                ).data;\n                                const overrides = confirm(\n                                  'If there are conflicting games data, override them? (Cancel to keep them)',\n                                );\n                                importGameData(gameData, overrides);\n                              });\n                              reader.readAsText(file);\n                            } catch (e) {\n                              alert('Unable to import.');\n                            }\n                          }\n                        } else {\n                          alert(\n                            'Import feature is not supported by the current browser.',\n                          );\n                        }\n                      }}\n                    />\n                    <button type=\"button\">Import</button>\n                  </label>\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmResetGame'))) {\n                      LS.removeItem(KEY_PREFIX + currentGame.id);\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.resetGame')}\n                </button>\n                &nbsp;\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmClearDB'))) {\n                      clearGames();\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.clearDB')}\n                </button>\n              </details>\n            </>\n          ) : (\n            <p>\n              <button\n                type=\"button\"\n                class=\"large\"\n                onClick={() => {\n                  setShowInfoModal(false);\n                  LS.setItem(KEY_PREFIX + 'skipFirstTime', 1);\n                  setSkipFirstTime(true);\n                }}\n              >\n                <PlayIcon width=\"20\" height=\"20\" /> {t('ui.startPlay')}\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n      {showDashboard && (\n        <div id=\"dashboard-modal\">\n          <CloseIcon\n            height=\"24\"\n            width=\"24\"\n            class=\"close\"\n            onClick={() => {\n              setShowDashboard(false);\n            }}\n          />\n          <IdiomsDashboard />\n        </div>\n      )}\n      <Toaster\n        containerStyle={{\n          top: '3.5em',\n        }}\n        toastOptions={{\n          className: 'toast',\n          style: {\n            pointerEvents: 'none',\n          },\n        }}\n      />\n    </>\n  );\n}\n","import '@fontsource/nunito/400.css';\nimport '@fontsource/nunito/700.css';\nimport 'rc-switch/assets/index.css';\nimport './index.css';\n\nimport { render } from 'preact';\nimport { App } from './app';\n\nimport en from '../i18n/en.json';\nimport zhCN from '../i18n/zh-CN.json';\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n      zh: {\n        translation: zhCN,\n      },\n    },\n    fallbackLng: 'en',\n    debug: /localhost/i.test(location.hostname),\n    detection: {\n      // localStorage is default\n      lookupLocalStorage: 'locale',\n      lookupCookie: 'locale',\n    },\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n  })\n  .then((t) => {\n    const updateLocale = () => {\n      document.documentElement.lang = i18n.resolvedLanguage;\n      document.title = document.querySelector(\n        'meta[property=\"og:title\"]',\n      ).content = t('app.title');\n      document.querySelector('meta[name=\"description\"]').content =\n        document.querySelector('meta[property=\"og:description\"]').content =\n          t('app.description');\n    };\n    i18n.on('languageChanged', updateLocale);\n    updateLocale();\n  });\n\nrender(<App />, document.getElementById('app'));\n","const compareWords = (hiddenWord, testWord) => {\n  if (hiddenWord == null || testWord == null) return [];\n  const letters1 = typeof testWord === 'string' ? testWord.split('') : testWord;\n  const letters2 =\n    typeof hiddenWord === 'string' ? hiddenWord.split('') : hiddenWord;\n  const lettersLength = letters1.length;\n  const states = Array.from({ length: lettersLength }, () => '⬜');\n  if (lettersLength !== letters2.length) {\n    throw new Error('Words must have the same length');\n  }\n  const correctLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 === l2) {\n      states[i] = '🟩';\n      correctLetterIndices.push(i);\n    }\n  }\n  const presentLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 !== l2) {\n      const l1Index = letters2.findIndex(\n        (l, index) =>\n          l === l1 &&\n          !correctLetterIndices.includes(index) &&\n          !presentLetterIndices.includes(index),\n      );\n      if (l1Index !== -1) {\n        states[i] = '🟧';\n        presentLetterIndices.push(l1Index);\n      }\n    }\n  }\n  return states;\n};\n\nexport default compareWords;\n"],"names":["jsx","jsxRuntime.jsx","jsxs","jsxRuntime.jsxs","Fragment","jsxRuntime.Fragment","py","pinyin","window","alert","text","toast","copy","fn","navigator","clipboard","writeText","then","catch","e","LS","key","localStorage","getItem","value","setItem","removeItem","fireEvent","plausible","idioms","idiomsTxt","split","games","gameIdioms","slice","map","row","id","idiom","KEY_PREFIX","HARD_MODE","JSON","parse","MAX_KEYS","MIN_IDIOMS","clearGames","length","i","startsWith","allGames","Map","game","set","replace","confettiRAF","getBoardGameState","boardStates","won","some","every","s","lastRow","lost","blankBoard","Array","from","v","getIdiomsKeys","prevPassedIdioms","prevKeys","depth","passedIdioms","Set","add","keys","idiomLetters","forEach","letter","consecutiveFailures","anotherIdiom","find","has","includes","j","size","MAX_LETTERS","nextIdiom","_toConsumableArray","_passedIdioms","_keys","randomIdiom","Math","floor","random","gameID","g","error","possibleIdioms","keySize","ShareIcon","props","_jsx","viewBox","fill","d","DownloadIcon","_jsxs","PlayIcon","CloseIcon","InfoIcon","stroke","startDate","Date","getTodayGame","diff","setHours","dayCount","max","Countdown","t","useTranslation","nextDay","nextStartDate","useState","hours","minutes","setMinutes","seconds","setSeconds","isNow","setIsNow","timer","setInterval","toString","padStart","clearInterval","href","class","CodeInput","code","url","type","readOnly","onClick","target","focus","select","Letter","state","style","opacity","CurrentPlaying","playingCount","setPlayingCount","fetchTimer","fetchRAF","fetchPlayingCount","r","ok","Error","statusText","count","setTimeout","requestAnimationFrame","blastConfetti","end","now","colors","particleCount","angle","spread","origin","x","y","shapes","disableForReducedMotion","frame","stopConfetti","IdiomsDashboard","wonCount","lostCount","boardGame","gameState","board","title","gamesCount","Trans","i18nKey","values","gamesCountOverTotal","components","prefersColorSchemeSupported","matchMedia","media","ShareImageButton","header","footer","imageRef","useRef","imageSrc","setImageSrc","imageOpts","canvasWidth","canvasHeight","quality","mediaChanged","setMediaChanged","colorSchemeChange","event","matches","addEventListener","addListener","removeEventListener","removeListener","current","dataURL","fileName","download","width","height","ref","use","LanguageDetector","initReactI18next","init","resources","en","translation","zh","zhCN","fallbackLng","debug","test","location","hostname","detection","lookupLocalStorage","lookupCookie","interpolation","escapeValue","updateLocale","documentElement","lang","i18n","resolvedLanguage","document","querySelector","content","on","showDashboard","setShowDashboard","showError","setShowError","showModal","setShowModal","showInfoModal","setShowInfoModal","colorScheme","setColorScheme","html","classList","remove","skipFirstTime","setSkipFirstTime","hash","currentGame","setCurrentGame","setBoard","cachedGame","useMemo","hiddenWord","testWord","letters1","letters2","lettersLength","states","correctLetterIndices","push","presentLetterIndices","l1","l2","l1Index","findIndex","l","index","compareWords","stringify","definition","setDefinition","json","currentStep","allPossibleIdioms","filter","keysPinyin","get","pinyinSet","sort","a","b","localeCompare","console","groupCollapsed","log","join","groupEnd","ANSWER","currentGameKeys","currentGameKeysPinyin","handleLetter","overwrite","newBoard","columnIndex","correctKeys","presentKeys","absentKeys","handleEnter","currentIdiom","valid","timeout","handleBackspace","handleKey","metaKey","ctrlKey","toLowerCase","preventDefault","stopPropagation","reverse","pinyinLetter","possibleLettersSet","pinyins","sensitivity","possibleLetters","letterIndex","indexOf","nextLetter","breakLoop","$board","getElementById","$currentRow","scrollIntoView","behavior","block","permalink","pathname","shortPermalink","host","emojiResults","trim","attempts","attemptsText","shareText","shareTextWithLink","hints","letters","absentHints","k","c","letterHints","pinyinHint","pattern","HINTS","hintIndex","toasts","useToasterStore","visible","dismiss","gamesPlayedCount","Object","isPrefixed","precision","toPrecision","GamesCount","useCallback","className","tabIndex","hint","currentTarget","userAgent","_context","share","encodeURIComponent","confirm","rand","round","randGame","prompt","URL","hreflang","rel","undefined","changeLanguage","Switch","defaultChecked","onChange","checked","reload","__COMMIT_HASH__","data","entries","exportGameData","str","version","exportDate","bytes","TextEncoder","encode","blob","Blob","createObjectURL","$a","createElement","body","appendChild","click","revokeObjectURL","accept","FileReader","file","files","reader","gameData","overrides","result","readAsText","Toaster","containerStyle","top","toastOptions","pointerEvents"],"mappings":"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"}