{"version":3,"file":"index.7cb45990.js","sources":["../../vite/modulepreload-polyfill","../../src/getIdiomStates.js","../../preact/jsx-runtime","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","const getIdiomStates = (hiddenIdiom, testIdiom) => {\n  const letters1 =\n    typeof testIdiom === 'string' ? testIdiom.split('') : testIdiom;\n  const letters2 =\n    typeof hiddenIdiom === 'string' ? hiddenIdiom.split('') : hiddenIdiom;\n  const lettersLength = letters1.length;\n  const states = Array.from({ length: lettersLength }, () => '⬜');\n  if (lettersLength !== letters2.length) {\n    throw new Error('idioms must have the same length');\n  }\n  const correctLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 === l2) {\n      states[i] = '🟩';\n      correctLetterIndices.push(i);\n    }\n  }\n  const presentLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 !== l2) {\n      const l1Index = letters2.findIndex(\n        (l, index) =>\n          l === l1 &&\n          !correctLetterIndices.includes(index) &&\n          !presentLetterIndices.includes(index),\n      );\n      if (l1Index !== -1) {\n        states[i] = '🟧';\n        presentLetterIndices.push(l1Index);\n      }\n    }\n  }\n  return states;\n};\n\nexport default getIdiomStates;\n","import * as jsxRuntime from \"/home/runner/work/chengyu-wordle/chengyu-wordle/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import {\n  useState,\n  useEffect,\n  useMemo,\n  useRef,\n  useCallback,\n} from 'preact/hooks';\nimport { pinyin } from 'pinyin-pro';\nconst py = pinyin;\nwindow.pinyin = pinyin;\n\nimport { toJpeg } from 'html-to-image';\nimport { useTranslation, Trans } from 'react-i18next';\n\nimport toast, { Toaster, useToasterStore } from 'react-hot-toast';\nconst alert = (text) => toast(text);\n\nimport Switch from 'rc-switch';\n\nimport { toClipboard } from 'copee';\nconst copy = (text, fn = () => {}) => {\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard\n      .writeText(text)\n      .then(fn)\n      .catch((e) => {});\n  } else {\n    toClipboard(text);\n    fn();\n  }\n};\n\nimport getIdiomStates from './getIdiomStates';\n\n// Always need to wrap localStorage in a try/catch block because\n// it can throw an exception in some browsers (e.g. Safari)\nconst LS = {\n  getItem: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n  setItem: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      return null;\n    }\n  },\n  removeItem: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n};\n\nconst fireEvent = (...props) => {\n  if (window.plausible) {\n    plausible(...props);\n  }\n};\n\n// Data\nimport idiomsTxt from '../game-data/all-idioms.txt?raw';\nconst idioms = idiomsTxt.split('\\n');\nimport gameIdioms from '../game-data/game-idioms.csv';\nconst games = gameIdioms.slice(1).map((row) => ({\n  id: row[0],\n  idiom: row[1],\n}));\n\nconst KEY_PREFIX = 'cywd-';\nconst HARD_MODE = JSON.parse(LS.getItem(`${KEY_PREFIX}hardMode`) || false);\nconst MAX_GAMES_BEFORE_SHOW_DASHBOARD = 7000;\nconst MAX_LETTERS = 4;\nconst MAX_KEYS = HARD_MODE ? 40 : 20;\nconst MAX_STEPS = 6;\nconst MIN_IDIOMS = HARD_MODE ? 10 : 6;\n\nif (HARD_MODE) {\n  fireEvent('Hard mode');\n}\n\n// Check letters with multiple pinyins\n// const letter2PY = new Map();\n// const differentPinyins = [];\n// games.forEach((game) => {\n//   const letters = game.idiom.split('');\n//   const pinyins = pinyin(game.idiom, { type: 'array' });\n//   letters.forEach((letter, i) => {\n//     if (!letter2PY.has(letter)) {\n//       letter2PY.set(letter, pinyins[i]);\n//     } else if (letter2PY.get(letter) !== pinyins[i]) {\n//       differentPinyins.push({\n//         id: game.id,\n//         idiom: game.idiom,\n//         letter,\n//         pinyins: [letter2PY.get(letter), pinyins[i]].join(' '),\n//       });\n//     }\n//   });\n// });\n// console.log({\n//   differentPinyins: `id,idiom,letter,pinyins\\n${differentPinyins\n//     .map((row) => `${row.id},${row.idiom},${row.letter},${row.pinyins}`)\n//     .join('\\n')}`,\n// });\n\nwindow.clearGames = () => {\n  try {\n    const { length } = localStorage;\n    for (let i = 0; i < length; i++) {\n      const key = localStorage.key(i);\n      if (key?.startsWith(KEY_PREFIX)) {\n        localStorage.removeItem(key);\n      }\n    }\n  } catch (e) {}\n};\n\nwindow.allGames = () => {\n  const allGames = new Map();\n  const { length } = localStorage;\n  for (let i = 0; i < length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      const game = JSON.parse(localStorage.getItem(key));\n      allGames.set(key.replace(KEY_PREFIX, ''), game);\n    }\n  }\n  return allGames;\n};\n\nconst exportGameData = () => {\n  try {\n    const gameData = Object.entries(localStorage)\n      .filter(([k, v]) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && games.find((g) => g.id === gameID);\n      })\n      .map(([k, v]) => {\n        const id = k.slice(KEY_PREFIX.length);\n        const data = JSON.parse(v);\n        return {\n          id,\n          ...data,\n        };\n      });\n    return gameData;\n  } catch (e) {}\n};\nconst importGameData = (gameData, overrides = false) => {\n  try {\n    gameData.forEach((game) => {\n      const { id, ...data } = game;\n      if (overrides || !localStorage.getItem(`${KEY_PREFIX}${id}`)) {\n        LS.setItem(`${KEY_PREFIX}${id}`, JSON.stringify(data));\n      }\n    });\n  } catch (e) {}\n};\n\nconst getBoardGameState = (boardStates) => {\n  const won = boardStates.some(\n    (row) => !!row.length && row.every((s) => s === '🟩'),\n  );\n  if (won) return 'won';\n  const lastRow = boardStates[boardStates.length - 1];\n  const lost = !!lastRow.length && lastRow.every((s) => s !== '🟩');\n  if (lost) return 'lost';\n  return null;\n};\n\n// v = letter values of the row\n// s = submitted state of the row (after user press enter)\nconst blankBoard = () =>\n  Array.from({ length: MAX_STEPS }, () => ({\n    v: Array.from({ length: MAX_LETTERS }, () => ''),\n    s: false,\n  }));\n\nconst getIdiomsKeys = (idiom, prevPassedIdioms, prevKeys, depth = 0) => {\n  let passedIdioms = prevPassedIdioms || new Set();\n  passedIdioms.add(idiom);\n  let keys = prevKeys || new Set();\n  const idiomLetters = idiom.split('');\n  idiomLetters.forEach((letter) => keys.add(letter));\n  let consecutiveFailures = 0;\n  lettersCycle: for (let i = 0; i < games.length; i++) {\n    const letter = idiomLetters[(i + 1) % MAX_LETTERS];\n    const anotherIdiom = games.find(\n      ({ idiom }) => !passedIdioms.has(idiom) && idiom.includes(letter),\n    );\n    if (anotherIdiom) {\n      for (let j = 0; j < anotherIdiom.idiom.length; j++) {\n        keys.add(anotherIdiom.idiom[j]);\n\n        if (keys.size >= MAX_KEYS) {\n          break lettersCycle;\n        }\n      }\n      passedIdioms.add(anotherIdiom.idiom);\n      consecutiveFailures = 0;\n    } else {\n      if (consecutiveFailures >= MAX_LETTERS + 1) {\n        // Too many failures, stop\n        break lettersCycle;\n      }\n      consecutiveFailures += 1;\n    }\n  }\n\n  // Try the next idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const nextIdiom = [...passedIdioms][++depth];\n    if (nextIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        nextIdiom,\n        passedIdioms,\n        keys,\n        depth,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Still not enough keys, choose a random idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const randomIdiom = games[Math.floor(Math.random() * games.length)].idiom;\n    if (randomIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        randomIdiom,\n        passedIdioms,\n        keys,\n        0,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Something very wrong happened\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const gameID = games.find((g) => g.idiom === idiom)?.id;\n    console.error(gameID, {\n      possibleIdioms: passedIdioms.size,\n      keySize: keys.size,\n      consecutiveFailures,\n    });\n  }\n\n  return {\n    passedIdioms,\n    keys,\n  };\n};\n\n// Check if all idioms have enough keys/idioms\n// games.forEach((game) => {\n//   getIdiomsKeys(game.idiom);\n// });\n\nconst ShareIcon = (props) => (\n  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n    <path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"></path>\n  </svg>\n);\n\nconst DownloadIcon = (props) => (\n  <svg viewBox=\"0 0 330 330\" fill=\"currentColor\" {...props}>\n    <title>⬇️</title>\n    <path d=\"m154 256 1 1h2v1h1l1 1h2v1h8v-1h2l1-1h1v-1h2l1-1 70-70a15 15 0 0 0-22-22l-44 45V25a15 15 0 0 0-30 0v184l-44-45a15 15 0 1 0-22 22z\" />\n    <path d=\"M315 160c-8 0-15 7-15 15v115H30V175a15 15 0 0 0-30 0v130c0 8 7 15 15 15h300c8 0 15-7 15-15V175c0-8-7-15-15-15z\" />\n  </svg>\n);\n\nconst PlayIcon = (props) => (\n  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" {...props}>\n    <title>▶️</title>\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\n      clip-rule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst CloseIcon = (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <title>✖️</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    ></path>\n  </svg>\n);\n\nconst InfoIcon = (props) => (\n  <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" {...props}>\n    <title>ℹ️</title>\n    <path\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n    />\n  </svg>\n);\n\nconst startDate = new Date(2022, 0, 27); // 27 January 2022\nconst getTodayGame = () => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const diff = today - startDate;\n  const dayCount = Math.floor(diff / (1000 * 60 * 60 * 24));\n  return games[Math.max(0, dayCount % games.length)];\n};\n\n// Component that shows hours, minutes and seconds counting down to start of next day\nconst Countdown = () => {\n  const { t } = useTranslation();\n  let nextDay = new Date().setHours(0, 0, 0, 0) + 24 * 60 * 60 * 1000;\n  const nextStartDate = new Date(+startDate + 24 * 60 * 60 * 1000);\n  if (nextDay < nextStartDate) {\n    nextDay = nextStartDate;\n  }\n  const [hours, setHours] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [isNow, setIsNow] = useState(false);\n  // update countdown every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const diff = nextDay - new Date();\n      if (diff <= 0) {\n        setIsNow(true);\n        clearInterval(timer);\n        return;\n      }\n      setHours(\n        Math.floor(diff / (1000 * 60 * 60))\n          .toString()\n          .padStart(2, '0'),\n      );\n      setMinutes(\n        Math.floor((diff / (1000 * 60)) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n      setSeconds(\n        Math.floor((diff / 1000) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  if (isNow) {\n    return <a href=\"./\">{t('ui.countdownNow')}</a>;\n  }\n  return (\n    <time class=\"countdown\">\n      {hours}:{minutes}:{seconds}\n    </time>\n  );\n};\n\nconst CodeInput = ({ code, url }) => {\n  const { t } = useTranslation();\n  return (\n    code && (\n      <input\n        type=\"text\"\n        readOnly\n        value={code}\n        class=\"idiom-code\"\n        onClick={(e) => {\n          e.target.focus();\n          e.target.select();\n          copy(url || code, () => {\n            alert(t('ui.copiedURL'));\n          });\n          fireEvent('Click: Share', {\n            props: {\n              type: 'idiom-code',\n            },\n          });\n        }}\n      />\n    )\n  );\n};\n\nconst Letter = ({ letter, pinyin, state }) => {\n  return (\n    <div\n      class={`letter ${letter ? 'lettered' : ''} ${state ?? ''} ${\n        state ? '🌈' : ''\n      }`}\n    >\n      <ruby>\n        {letter || <span style={{ opacity: 0 }}>一</span>}\n        <rp>(</rp>\n        <rt>{pinyin || py(letter) || <>&nbsp;</>}</rt>\n        <rp>)</rp>\n      </ruby>\n    </div>\n  );\n};\n\nconst CurrentPlaying = () => {\n  const { t } = useTranslation();\n  const [playingCount, setPlayingCount] = useState(0);\n  useEffect(() => {\n    let fetchTimer, fetchRAF;\n    const fetchPlayingCount = () => {\n      fetch('https://chengyu-wordle-realtime-visitors.cheeaun.workers.dev/')\n        .then((r) => {\n          if (!r.ok) throw Error(r.statusText);\n          return r.text();\n        })\n        .then((text) => {\n          const count = +text;\n          if (!count) throw Error('Zero or NaN');\n          setPlayingCount(count);\n        })\n        .catch((e) => {\n          setPlayingCount(0);\n        });\n      fetchTimer = setTimeout(() => {\n        fetchRAF = requestAnimationFrame(fetchPlayingCount);\n      }, 2 * 60 * 1000);\n    };\n    fetchPlayingCount();\n    return () => {\n      clearTimeout(fetchTimer);\n      cancelAnimationFrame(fetchRAF);\n    };\n  }, []);\n\n  if (playingCount <= 1) return null;\n\n  return (\n    <div id=\"current-playing\">\n      {t('ui.countPlaying', { count: playingCount })}\n    </div>\n  );\n};\n\nimport confetti from 'canvas-confetti';\nlet confettiRAF;\nconst blastConfetti = () => {\n  const colors = ['#008000', '#FFA500'];\n\n  (function frame() {\n    confetti({\n      particleCount: 2,\n      angle: 60,\n      spread: 80,\n      origin: { x: 0, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    confetti({\n      particleCount: 2,\n      angle: 120,\n      spread: 80,\n      origin: { x: 1, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    confettiRAF = requestAnimationFrame(frame);\n  })();\n};\nconst stopConfetti = () => {\n  cancelAnimationFrame(confettiRAF);\n};\nconst IdiomsDashboard = () => {\n  const { t } = useTranslation();\n  let wonCount = 0;\n  let lostCount = 0;\n  const idioms = games.map((game) => {\n    // Get board from localStorage\n    const boardGame = JSON.parse(LS.getItem(`${KEY_PREFIX}${game.id}`));\n    if (boardGame && boardGame.gameState) {\n      const { board, gameState } = boardGame;\n      if (gameState === 'won') {\n        wonCount++;\n      } else if (gameState === 'lost') {\n        lostCount++;\n      }\n      return (\n        <a\n          href={`/#${game.id}`}\n          class={`board ${gameState}`}\n          title={`${game.id} (${gameState})`}\n        >\n          {gameState === 'won' ? '🟩' : '🟧'}\n        </a>\n      );\n    } else {\n      return (\n        <a href={`/#${game.id}`} class=\"board\" title={`${game.id}`}>\n          ⬜\n        </a>\n      );\n    }\n  });\n\n  useEffect(() => {\n    blastConfetti();\n    return stopConfetti;\n  }, []);\n\n  return (\n    <>\n      <h2>\n        {t('dashboard.heading', {\n          gamesCount: MAX_GAMES_BEFORE_SHOW_DASHBOARD,\n        })}\n      </h2>\n      <p>{t('dashboard.subheading')}</p>\n      <p>\n        <Trans\n          i18nKey=\"dashboard.totalGamesPlayed\"\n          values={{\n            gamesCountOverTotal: `${wonCount + lostCount} / ${games.length}`,\n          }}\n          components={[<b />]}\n        />\n        <br />\n        <Trans\n          i18nKey=\"dashboard.wonLost\"\n          values={{\n            wonCount,\n            lostCount,\n          }}\n          components={[<b />, <b />]}\n        />\n      </p>\n      <div class=\"boards\">{idioms}</div>\n    </>\n  );\n};\n\nconst prefersColorSchemeSupported =\n  'matchMedia' in window &&\n  window.matchMedia('(prefers-color-scheme: dark)').media !== 'not all';\n\nconst ShareImageButton = ({ header, footer, boardStates, id }) => {\n  const { t } = useTranslation();\n  const imageRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const imageOpts = {\n    canvasWidth: 1080,\n    canvasHeight: 1080,\n    quality: 0.5,\n  };\n\n  // Update image when light/dark mode kicks in\n  const [mediaChanged, setMediaChanged] = useState();\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n    const colorSchemeChange = (event) => {\n      setMediaChanged(event.matches);\n    };\n    try {\n      media.addEventListener('change', colorSchemeChange);\n    } catch (e) {\n      media.addListener(colorSchemeChange);\n    }\n    return () => {\n      try {\n        media.removeEventListener('change', colorSchemeChange);\n      } catch (e) {\n        media.removeListener(colorSchemeChange);\n      }\n    };\n  });\n\n  useEffect(() => {\n    setImageSrc(null);\n    toJpeg(imageRef.current, imageOpts)\n      .then((dataURL) => {\n        setImageSrc(dataURL);\n      })\n      .catch((e) => {\n        setImageSrc(null);\n      });\n  }, [boardStates, id, mediaChanged]);\n\n  const fileName = `chengyu-wordle-${id}.jpg`;\n\n  return (\n    <>\n      {!!imageSrc && (\n        <a\n          id=\"share-image-button\"\n          class=\"button\"\n          href={imageSrc}\n          download={fileName}\n          target=\"_blank\"\n          onClick={() => {\n            fireEvent('Click: Share', {\n              props: {\n                type: 'image',\n              },\n            });\n          }}\n        >\n          {t('common.image')} <DownloadIcon width=\"12\" height=\"12\" />\n        </a>\n      )}\n      <div id=\"share-image-container\">\n        <div id=\"share-image\" ref={imageRef}>\n          <p class=\"header\">\n            <b>{header}</b>\n          </p>\n          <div class=\"board\">\n            {boardStates.map((row) => {\n              return (\n                <div>\n                  {row.map((letter) => {\n                    return <span class={`tile ${letter}`} />;\n                  })}\n                </div>\n              );\n            })}\n          </div>\n          <p class=\"footer\">{footer}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport function App() {\n  const { t, i18n } = useTranslation();\n\n  const [showDashboard, setShowDashboard] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showModal, setShowModal] = useState(false); // false | won | lost\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const [colorScheme, setColorScheme] = useState(\n    LS.getItem(`${KEY_PREFIX}colorScheme`) || 'auto',\n  );\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const html = document.querySelector('html');\n    if (colorScheme === 'dark') {\n      html.classList.add('dark-mode');\n      html.classList.remove('light-mode');\n    } else if (colorScheme === 'light') {\n      html.classList.add('light-mode');\n      html.classList.remove('dark-mode');\n    } else {\n      html.classList.remove('dark-mode', 'light-mode');\n    }\n  }, [colorScheme]);\n\n  const [skipFirstTime, setSkipFirstTime] = useState(\n    LS.getItem(`${KEY_PREFIX}skipFirstTime`) || false,\n  );\n\n  const [currentGame, setCurrentGame] = useState(\n    games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n  );\n  useEffect(() => {\n    window.addEventListener('hashchange', () => {\n      setCurrentGame(\n        games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n      );\n      setShowDashboard(false);\n    });\n  }, []);\n\n  const [board, setBoard] = useState(\n    JSON.parse(LS.getItem(`${KEY_PREFIX}${currentGame.id}`))?.board ||\n      blankBoard(),\n  );\n  useEffect(() => {\n    const cachedGame = LS.getItem(`${KEY_PREFIX}${currentGame.id}`);\n    if (cachedGame) {\n      setBoard(JSON.parse(cachedGame).board);\n    } else {\n      setBoard(blankBoard());\n    }\n  }, [currentGame.id]);\n\n  const boardStates = useMemo(() => {\n    return board.map((row, i) => {\n      if (row.s) {\n        return getIdiomStates(currentGame.idiom, row.v);\n      }\n      return [];\n    });\n  }, [board]);\n\n  // Save to localStorage every time board changes\n  useEffect(() => {\n    // Only store in localStorage if board has some values\n    if (board && board.some((row) => row.v.some((v) => v))) {\n      LS.setItem(\n        `${KEY_PREFIX}${currentGame.id}`,\n        JSON.stringify({\n          board,\n          gameState: getBoardGameState(boardStates),\n        }),\n      );\n    }\n  }, [boardStates]);\n\n  const [definition, setDefinition] = useState(null);\n  useEffect(() => {\n    setDefinition(null);\n    fetch(\n      `https://baidu-hanyu-idiom.cheeaun.workers.dev/?wd=${currentGame.idiom}`,\n    )\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.definition) {\n          setDefinition(r.definition);\n        }\n      })\n      .catch(() => {});\n  }, [currentGame.idiom]);\n\n  const currentStep = board?.findIndex((row) => row.s === false) || 0;\n\n  const [currentGameKeys, currentGameKeysPinyin] = useMemo(() => {\n    const { keys } = getIdiomsKeys(currentGame.idiom);\n    const allPossibleIdioms = idioms.filter((idiom) => {\n      // check if idiom contains 4 letters from keys\n      return idiom.split('').every((letter) => keys.has(letter));\n    });\n\n    // Pinyin mappings\n    const keysPinyin = new Map();\n    allPossibleIdioms.forEach((idiom) => {\n      const idiomPinyin = pinyin(idiom, { type: 'array' });\n      idiomPinyin.forEach((pinyin, i) => {\n        if (keysPinyin.has(idiom[i])) {\n          keysPinyin.get(idiom[i]).add(pinyin);\n        } else {\n          keysPinyin.set(idiom[i], new Set([pinyin]));\n        }\n      });\n    });\n    keysPinyin.forEach((pinyinSet, letter) => {\n      pinyinSet.add(py(letter)); // Add its own individual-letter pinyin\n    });\n\n    // SPOILER inside console.log!\n    const possibleIdioms = allPossibleIdioms\n      .map((idiom) => {\n        return `${idiom} (${py(idiom)})`;\n      })\n      .sort((a, b) => a.localeCompare(b, 'zh'));\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\n        `${possibleIdioms.length} Possible Idioms [${currentGame.id}] (${keys.size} keys):`,\n      );\n      console.log(`${possibleIdioms\n        .map((idiom, i) => `${i + 1}. ${idiom}`)\n        .join('\\n')}\n\n🚨SPOILER🚨 Type 'HINTS' to see all hints. Type 'ANSWER' to see the answer.`);\n      console.groupEnd();\n    }\n    window.ANSWER = `${currentGame.idiom} (${py(currentGame.idiom)})`;\n\n    const sortedKeys = [...keys].sort((a, b) => a.localeCompare(b, 'zh'));\n    return [sortedKeys, keysPinyin];\n  }, [currentGame.idiom]);\n\n  const handleLetter = (letter, overwrite = false) => {\n    if (!board[currentStep]) return;\n    if (gameState) return;\n    setShowError(false);\n\n    const newBoard = [...board];\n    let columnIndex = newBoard[currentStep].v.findIndex((v) => v === '');\n    if (overwrite) {\n      if (columnIndex === -1) {\n        columnIndex = 3;\n      } else {\n        columnIndex--;\n      }\n    }\n    if (columnIndex !== -1) {\n      newBoard[currentStep].v[columnIndex] = letter;\n      setBoard(newBoard);\n    }\n  };\n\n  const correctKeys = new Set();\n  const presentKeys = new Set();\n  const absentKeys = new Set();\n  board.forEach((row, i) => {\n    if (!row.s) return;\n    row.v.forEach((letter, j) => {\n      const state = boardStates[i][j];\n      if (state === '🟩') {\n        correctKeys.add(letter);\n      } else if (state === '🟧') {\n        presentKeys.add(letter);\n      } else if (state === '⬜') {\n        absentKeys.add(letter);\n      }\n    });\n  });\n\n  const handleEnter = () => {\n    if (gameState) return;\n    console.log('handleEnter');\n    setShowError(false);\n\n    const row = board[currentStep];\n    if (!row) return;\n    const currentIdiom = row.v.join('');\n    const valid = idioms.includes(currentIdiom);\n    if (valid) {\n      row.s = true;\n      setBoard([...board]);\n    } else {\n      setTimeout(() => {\n        setShowError(true);\n      }, 10);\n    }\n    console.log({ currentIdiom, valid });\n  };\n\n  const gameState = useMemo(() => {\n    return getBoardGameState(boardStates);\n  }, [boardStates]);\n\n  useEffect(() => {\n    let timeout;\n    if (gameState === 'won') {\n      timeout = setTimeout(() => {\n        setShowModal('won');\n      }, 600);\n    } else if (gameState === 'lost') {\n      setShowModal('lost');\n    } else {\n      setShowModal(false);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [gameState]);\n\n  const handleBackspace = () => {\n    if (gameState) return;\n    const newBoard = [...board];\n    // Get last column with value\n    const row = newBoard[currentStep];\n    if (!row || row.s) return;\n    let columnIndex = -1;\n    for (let i = row.v.length - 1; i >= 0; i--) {\n      if (row.v[i] !== '') {\n        columnIndex = i;\n        break;\n      }\n    }\n    if (columnIndex !== -1) {\n      row.v[columnIndex] = '';\n      setBoard(newBoard);\n    }\n  };\n\n  useEffect(() => {\n    const handleKey = (e) => {\n      if (gameState) return;\n      if (e.metaKey || e.ctrlKey || !e.key) {\n        return;\n      }\n      const key = e.key.toLowerCase();\n      if (key === 'enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        handleEnter();\n      } else if (key === 'backspace') {\n        e.preventDefault();\n        handleBackspace();\n      } else if (/^arrow(left|right)/i.test(key)) {\n        // This will cycle through all letters with same starting pinyin letter\n        const row = board[currentStep];\n        const value = [...row.v].reverse().find((v) => v !== '');\n        if (value) {\n          const pinyinLetter = py(value)[0];\n\n          const possibleLettersSet = new Set();\n          currentGameKeysPinyin.forEach((pinyins, letter) => {\n            pinyins.forEach((pinyin) => {\n              const firstPinyinChar = pinyin[0];\n              if (\n                firstPinyinChar.localeCompare(pinyinLetter, 'en', {\n                  sensitivity: 'base',\n                }) === 0\n              ) {\n                possibleLettersSet.add(letter);\n              }\n            });\n          });\n          const possibleLetters = [...possibleLettersSet];\n\n          if (possibleLetters.length <= 1) return;\n          const letterIndex = possibleLetters.indexOf(value);\n          const nextLetter =\n            key === 'arrowright'\n              ? possibleLetters[(letterIndex + 1) % possibleLetters.length]\n              : possibleLetters[\n                  (letterIndex + possibleLetters.length - 1) %\n                    possibleLetters.length\n                ];\n          if (nextLetter) {\n            handleLetter(nextLetter, true);\n          }\n        }\n      } else if (/[a-z]/i.test(key)) {\n        // Type \"a\" will trigger the first letter pinyin that starts with \"ā\"\n        let breakLoop = false;\n        currentGameKeysPinyin.forEach((pinyins, letter) => {\n          if (breakLoop) return;\n          pinyins.forEach((pinyin) => {\n            if (breakLoop) return;\n            const firstPinyinChar = pinyin[0];\n            if (\n              firstPinyinChar.localeCompare(key, 'en', {\n                sensitivity: 'base',\n              }) === 0\n            ) {\n              e.preventDefault();\n              breakLoop = true;\n              handleLetter(letter);\n            }\n          });\n        });\n      }\n\n      const $board = document.getElementById('board');\n      if ($board?.querySelector) {\n        const $currentRow = $board.querySelector(\n          `.row:nth-child(${currentStep + 1})`,\n        );\n        if ($currentRow?.scrollIntoView) {\n          $currentRow.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          });\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKey);\n    return () => {\n      document.removeEventListener('keydown', handleKey);\n    };\n  }, [currentGameKeys, currentGameKeysPinyin, board, currentStep, gameState]);\n\n  const permalink = location.origin + location.pathname + '#' + currentGame.id;\n  const shortPermalink =\n    location.host + location.pathname + '#' + currentGame.id;\n  const emojiResults = boardStates\n    .map((row) => row.join(''))\n    .join('\\n')\n    .trim();\n  const attempts = gameState === 'won' ? emojiResults.split('\\n').length : 'X';\n  const attemptsText = `${attempts}/${MAX_STEPS}`;\n  const shareText = `${t('app.title')} [${currentGame.id}]${\n    HARD_MODE ? ' 🔥' : ''\n  } ${attemptsText}\\n\\n${emojiResults}`;\n  const shareTextWithLink = `${shareText}\\n\\n${shortPermalink}`;\n\n  const hints = useMemo(() => {\n    const hints = [];\n    const letters = currentGame.idiom.split('');\n\n    // 1. Absent letters hints\n    const absentHints = currentGameKeys\n      .filter((k) => {\n        return !letters.includes(k) && !absentKeys.has(k);\n      })\n      .slice(0, -1) // Don't reveal at least one letter\n      .slice(0, 3) // But still max 3 letters\n      .map((letter) => {\n        return t('hints.absentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...absentHints);\n\n    // 2. Definition hints\n    if (\n      definition?.zh &&\n      letters.filter((c) => definition.zh.includes(c)).length <= 2\n      // Only show hint if definition contains 2 or less of the characters in the idiom\n      // Else, the definition basically revealed the answer\n    ) {\n      hints.push(`ℹ️ ${definition.zh}`);\n    }\n    if (definition?.en) hints.push(`ℹ️ ${definition.en}`);\n\n    // 3. Letter hints\n    const letterHints = letters\n      .filter((c) => !correctKeys.has(c) && !presentKeys.has(c))\n      .slice(0, -1) // Don't reveal at least one letter\n      .map((letter) => {\n        return t('hints.presentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...letterHints);\n\n    // 4. Pinyin hints\n    const pinyinHint = py(currentGame.idiom, {\n      pattern: 'first',\n      type: 'array',\n    }).join('');\n    hints.push(t('hints.abbreviatedPinyin', { pinyinHint }));\n\n    window.HINTS = hints;\n\n    return hints;\n  }, [currentGame.idiom, definition]);\n  const hintIndex = useRef(0);\n  useEffect(() => {\n    hintIndex.current = 0;\n  }, [currentGame.idiom]);\n  const showHint = () => {\n    if (gameState) return;\n    const hint = hints[hintIndex.current];\n    hintIndex.current = (hintIndex.current + 1) % hints.length;\n    alert(hint);\n  };\n\n  // Limit number of toasts\n  // https://github.com/timolins/react-hot-toast/issues/31#issuecomment-803359550\n  const { toasts } = useToasterStore();\n  const TOAST_LIMIT = 1;\n  useEffect(() => {\n    toasts\n      .filter((t, i) => t.visible && i >= TOAST_LIMIT)\n      .forEach((t) => toast.dismiss(t.id));\n  }, [toasts]);\n\n  const gamesPlayedCount = useMemo(() => {\n    // Only count games played if info modal is open\n    if (!showInfoModal) return;\n    try {\n      const keys = Object.keys(localStorage).filter((k) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && games.find((g) => g.id === gameID);\n      });\n      return keys.length;\n    } catch (e) {}\n  }, [showInfoModal]);\n\n  useEffect(() => {\n    if (!gamesPlayedCount || gamesPlayedCount < 10) return;\n    const precision = gamesPlayedCount < 100 ? 1 : 2;\n    const count = +gamesPlayedCount.toPrecision(precision);\n    fireEvent('Games Played', {\n      props: {\n        count,\n      },\n    });\n  }, [gamesPlayedCount]);\n\n  const GamesCount = useCallback(\n    () => (\n      <b>\n        {gamesPlayedCount}\n        {gamesPlayedCount >= MAX_GAMES_BEFORE_SHOW_DASHBOARD && (\n          <>\n            {' '}\n            /{' '}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                setShowInfoModal(false);\n                setShowDashboard(true);\n              }}\n            >\n              {games.length}\n            </a>\n          </>\n        )}\n      </b>\n    ),\n    [gamesPlayedCount],\n  );\n\n  return (\n    <>\n      <header>\n        <div class=\"inner\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowInfoModal(true);\n            }}\n          >\n            <InfoIcon width=\"16\" height=\"16\" />\n          </button>\n          <span>\n            <h1>{t('app.title')}</h1>\n            <CurrentPlaying />\n          </span>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowModal(gameState || 'play');\n            }}\n          >\n            {gameState ? (\n              t('common.play')\n            ) : (\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 290 290\">\n                <title>...</title>\n                <path\n                  fill=\"currentColor\"\n                  d=\"M255 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM35 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM145 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70z\"\n                />\n              </svg>\n            )}\n          </button>\n        </div>\n      </header>\n      <div id=\"board\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        {board.map((row, index) => {\n          const pinyins = pinyin(row.v.join(''), { type: 'array' });\n          return (\n            <div\n              className={`row ${\n                currentStep === index && showError ? 'error' : ''\n              } ${currentStep === index ? 'current' : ''} ${boardStates[\n                index\n              ].join('')}`}\n              key={index}\n            >\n              {row.v.map((letter, i) => (\n                <Letter\n                  key={i}\n                  letter={letter}\n                  pinyin={pinyins[i]}\n                  state={boardStates[index][i]}\n                />\n              ))}\n            </div>\n          );\n        })}\n      </div>\n      <div id=\"keyboard\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        <div class=\"inner\">\n          <div class=\"keys\">\n            {currentGameKeys.map((key, i) => (\n              <button\n                class={`${correctKeys.has(key) ? '🟩' : ''} ${\n                  presentKeys.has(key) ? '🟧' : ''\n                } ${absentKeys.has(key) ? '⬜' : ''}`}\n                type=\"button\"\n                tabIndex={-1}\n                onClick={() => {\n                  handleLetter(key);\n                }}\n              >\n                <ruby>\n                  {key}\n                  <rp>(</rp>\n                  <rt>\n                    {currentGameKeysPinyin.has(key)\n                      ? [...currentGameKeysPinyin.get(key)]\n                          .sort((a, b) => a.localeCompare(b, 'zh'))\n                          .join(' ⸱ ')\n                      : py(key)}\n                  </rt>\n                  <rp>)</rp>\n                </ruby>\n              </button>\n            ))}\n          </div>\n          <div class=\"row\">\n            <button type=\"button\" onClick={handleEnter} tabIndex={-1}>\n              {t('common.enter')}\n            </button>\n            {HARD_MODE ? (\n              <b class=\"hard\">{t('ui.hardMode')}</b>\n            ) : (\n              <button type=\"button\" class=\"stuck\" onClick={showHint}>\n                {t('ui.hint')}\n              </button>\n            )}\n            <button type=\"button\" onClick={handleBackspace} tabIndex={-1}>\n              <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"modal\"\n        class={showModal ? 'appear' : ''}\n        onClick={(e) => {\n          if (e.target === e.currentTarget) setShowModal(null);\n        }}\n      >\n        <CloseIcon\n          height=\"24\"\n          width=\"24\"\n          class=\"close\"\n          onClick={() => {\n            setShowModal(null);\n          }}\n        />\n        <div class=\"content\">\n          <h2>\n            {showModal === 'won'\n              ? '🎉🎉🎉'\n              : showModal === 'lost'\n              ? '😭😭😭'\n              : '🐯🐯🐯'}\n          </h2>\n          {showModal === 'play' && (\n            <p>\n              {t('ui.idiomId')}{' '}\n              <CodeInput code={currentGame.id} url={permalink} />\n            </p>\n          )}\n          {/(won|lost)/i.test(showModal) && (\n            <>\n              <p>\n                <b class=\"answer\">\n                  <ruby>\n                    {currentGame.idiom}\n                    <rp>(</rp>\n                    <rt>{py(currentGame.idiom)}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </b>\n                <div class=\"definition\">\n                  {definition?.zh\n                    ? definition.zh.split('').map((c) => {\n                        const p = py(c);\n                        if (p === c) return c;\n                        return (\n                          <ruby>\n                            {c}\n                            <rp>(</rp>\n                            <rt>{py(c)}</rt>\n                            <rp>)</rp>\n                          </ruby>\n                        );\n                      })\n                    : ''}\n                  {definition?.zh && definition?.en && <br />}\n                  {definition?.en}\n                </div>\n                <small>\n                  <a\n                    href={`https://hanyu.baidu.com/s?wd=${currentGame.idiom}&from=zici`}\n                    target=\"_blank\"\n                  >\n                    📖 {t('glossary.baidu')}\n                  </a>\n                  &nbsp; &nbsp;\n                  <a\n                    href={`https://www.zdic.net/hans/${currentGame.idiom}`}\n                    target=\"_blank\"\n                  >\n                    📖 {t('glossary.zdic')}\n                  </a>\n                </small>\n              </p>\n              <div class=\"results-container\">\n                <div class=\"results\">{shareTextWithLink}</div>\n                <div>\n                  <button\n                    id=\"share\"\n                    onClick={async () => {\n                      try {\n                        if (\n                          // Edge/ or Edg/\n                          /edge?\\//i.test(navigator.userAgent) ||\n                          // Windows\n                          /windows/.test(navigator.userAgent)\n                        ) {\n                          throw new Error(\n                            'Web Share API not working well here',\n                          );\n                        }\n                        copy(shareTextWithLink);\n                        await navigator.share({ text: shareTextWithLink });\n                      } catch (e) {\n                        copy(shareTextWithLink, () => {\n                          alert(t('ui.copiedResults'));\n                        });\n                      }\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'share',\n                        },\n                      });\n                    }}\n                  >\n                    {t('common.share')} <ShareIcon width=\"16\" height=\"16\" />\n                  </button>\n                  &nbsp;\n                  <ShareImageButton\n                    id={currentGame.id}\n                    header={t('app.title')}\n                    footer={`[${currentGame.id}]${\n                      HARD_MODE ? ' 🔥' : ''\n                    } ${attemptsText}`}\n                    boardStates={boardStates}\n                  />\n                  &nbsp;\n                  <a\n                    class=\"button facebook\"\n                    href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n                      permalink,\n                    )}&hashtag=${encodeURIComponent('#chengyuwordle')}`}\n                    target=\"_blank\"\n                    onClick={() => {\n                      copy(shareTextWithLink);\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'facebook',\n                        },\n                      });\n                    }}\n                  >\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 96.1 96.1\">\n                      <title>Facebook</title>\n                      <path\n                        fill=\"currentColor\"\n                        d=\"M72 0H59.7c-14 0-23 9.3-23 23.7v10.9H24c-1 0-2 .8-2 2v15.7c0 1.1 1 2 2 2h12.6v39.9c0 1 .8 2 2 2h16.3c1 0 2-1 2-2v-40h14.6c1 0 2-.8 2-1.9V36.5a2 2 0 0 0-2-2H56.8v-9.2c0-4.4 1.1-6.7 6.9-6.7H72c1 0 2-.9 2-2V2c0-1.1-1-2-2-2z\"\n                      />\n                    </svg>\n                  </a>\n                  &nbsp;\n                  <a\n                    class=\"button tweet\"\n                    href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n                      shareTextWithLink,\n                    )}`}\n                    target=\"_blank\"\n                    onClick={() => {\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'twitter',\n                        },\n                      });\n                    }}\n                  >\n                    <svg height=\"16\" width=\"16\" viewBox=\"0 0 24 24\">\n                      <title>{t('common.tweet')}</title>\n                      <path\n                        fill=\"currentColor\"\n                        d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"\n                      />\n                    </svg>\n                  </a>\n                  &nbsp;\n                  <CodeInput code={currentGame.id} url={permalink} />\n                </div>\n              </div>\n            </>\n          )}\n          {gameState === 'won' && attempts <= 2 && !HARD_MODE && (\n            <p\n              onClick={() => {\n                setShowModal(null);\n                setTimeout(() => {\n                  setShowInfoModal(true);\n                }, 300);\n              }}\n            >\n              {t('ui.easyEnableHardMode')}\n            </p>\n          )}\n          <div class=\"footer\">\n            {/won|lost/i.test(gameState) &&\n              getTodayGame().id === currentGame.id && (\n                <p>\n                  <big>\n                    <Trans\n                      i18nKey=\"ui.nextIdiom\"\n                      components={[<Countdown />]}\n                    />\n                  </big>\n                </p>\n              )}\n            <div>\n              {getTodayGame().id !== currentGame.id && (\n                <>\n                  <a href=\"./\" class=\"button strong\">\n                    <PlayIcon width={20} height={20} /> {t('ui.playTodayGame')}\n                  </a>\n                  <br />\n                </>\n              )}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Random');\n                  const yes = confirm(t('ui.confirmRandom'));\n                  if (yes) {\n                    const rand = Math.round(Math.random() * (games.length - 1));\n                    const randGame = games[rand];\n                    location.hash = `#${randGame.id}`;\n                    setShowModal(null);\n                    fireEvent('Game load: Random');\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.random')}\n              </button>{' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Idiom ID');\n                  // Ask user for idiom ID, load game if ID is valid\n                  let id = prompt(t('ui.promptIdiom'));\n                  try {\n                    id = new URL(id).hash.slice(1);\n                  } catch (e) {}\n                  if (id) {\n                    const game = games.find((g) => g.id === id);\n                    if (game) {\n                      location.hash = `#${game.id}`;\n                      setShowModal(null);\n                      fireEvent('Game load: Idiom ID');\n                    } else {\n                      alert('Invalid idiom ID');\n                    }\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.choose')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"info-modal\"\n        class={showInfoModal || !skipFirstTime ? 'appear' : ''}\n      >\n        {skipFirstTime && (\n          <CloseIcon\n            height=\"32\"\n            width=\"32\"\n            class=\"close\"\n            onClick={() => {\n              setShowInfoModal(false);\n            }}\n          />\n        )}\n        <div class=\"content\">\n          {prefersColorSchemeSupported && (\n            <p class=\"color-scheme-selector\">\n              <button\n                type=\"button\"\n                class={colorScheme === 'dark' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'dark');\n                  setColorScheme('dark');\n                }}\n              >\n                🌑\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'auto' ? 'active' : ''}\n                onClick={() => {\n                  LS.removeItem(`${KEY_PREFIX}colorScheme`);\n                  setColorScheme('auto');\n                }}\n              >\n                🌓\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'light' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'light');\n                  setColorScheme('light');\n                }}\n              >\n                🌕\n              </button>\n            </p>\n          )}{' '}\n          <p class=\"locale-selector\">\n            🌐{' '}\n            <a\n              href=\"./?lng=en\"\n              hreflang=\"en\"\n              rel={i18n.resolvedLanguage === 'en' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'en' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('en');\n              }}\n            >\n              English\n            </a>{' '}\n            &#8901;{' '}\n            <a\n              href=\"./?lng=zh-CN\"\n              hreflang=\"zh-CN\"\n              rel={i18n.resolvedLanguage === 'zh' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'zh' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('zh-CN');\n              }}\n            >\n              中文\n            </a>\n          </p>\n          {skipFirstTime && gamesPlayedCount > 0 && (\n            <div id=\"stats\">\n              <p>\n                <Trans i18nKey=\"ui.gamesPlayed\" components={[<GamesCount />]} />\n              </p>\n              <div id=\"config\">\n                <p>\n                  <label>\n                    {t('ui.hardMode')}\n                    <Switch\n                      defaultChecked={HARD_MODE}\n                      onChange={(checked) => {\n                        LS.setItem(\n                          `${KEY_PREFIX}hardMode`,\n                          checked ? 'true' : 'false',\n                        );\n                        setTimeout(() => {\n                          location.reload();\n                        }, 310); // Wait for Switch to animate\n                      }}\n                    />\n                  </label>\n                </p>\n              </div>\n            </div>\n          )}\n          <h2>{t('howToPlay.heading')}</h2>\n          <p>{t('howToPlay.how1')}</p>\n          <p>{t('howToPlay.how2')}</p>\n          <p>{t('howToPlay.how3')}</p>\n          <div class=\"example-idiom\">\n            {'九牛一毛'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 0 ? '🟩' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotCorrect')}</p>\n          <div class=\"example-idiom\">\n            {'理所当然'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 1 ? '🟧' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotPresent')}</p>\n          <div class=\"example-idiom\">\n            {'爱不释手'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 2 ? '⬜' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotAbsent')}</p>\n          <p>{t('howToPlay.how4')}</p>\n          {skipFirstTime ? (\n            <>\n              <h2>{t('about.heading')}</h2>\n              <p>\n                <Trans\n                  i18nKey=\"about.about1\"\n                  components={[\n                    <a\n                      href=\"https://github.com/cheeaun/chengyu-wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://cheeaun.com/projects/\" target=\"_blank\" />,\n                    <a\n                      href=\"https://www.nytimes.com/games/wordle/\"\n                      target=\"_blank\"\n                    />,\n                  ]}\n                />\n              </p>\n              <h2>{t('feedback.heading')}</h2>\n              <ul>\n                <li>\n                  <a href=\"https://t.me/+ykuhfiImLd1kNjk1\" target=\"_blank\">\n                    {t('feedback.telegramGroup')}\n                  </a>\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubDiscussions\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/discussions\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubIssues\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/issues\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <a href=\"https://twitter.com/cheeaun\" target=\"_blank\">\n                    {t('feedback.twitter')}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://t.me/cheeaun\" target=\"_blank\">\n                    {t('feedback.telegram')}\n                  </a>\n                </li>\n              </ul>\n              <details id=\"debugging-container\">\n                <summary>\n                  {t('debugging.heading')} ({__COMMIT_HASH__})\n                </summary>\n                <div>\n                  Game data:{' '}\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      // Construct URL\n                      const data = exportGameData();\n                      const str = JSON.stringify({\n                        version: 1,\n                        exportDate: new Date(),\n                        data,\n                      });\n                      const bytes = new TextEncoder().encode(str);\n                      const blob = new Blob([bytes], {\n                        type: 'application/json;charset=utf-8',\n                      });\n                      const url = URL.createObjectURL(blob);\n\n                      // Trigger download\n                      const $a = document.createElement('a');\n                      document.body.appendChild($a);\n                      $a.style = 'display: none';\n                      $a.href = url;\n                      $a.download = 'chengyu-wordle.gamedata.json';\n                      $a.click();\n\n                      // Clean up\n                      URL.revokeObjectURL(url);\n                      $a.remove();\n                    }}\n                  >\n                    Export\n                  </button>{' '}\n                  <label class=\"input-file-button\">\n                    <input\n                      type=\"file\"\n                      accept=\".json\"\n                      onChange={(event) => {\n                        if (window.FileReader) {\n                          if (confirm('Are you sure you want to import?')) {\n                            try {\n                              const fileList = event.target.files;\n                              const file = fileList[0];\n                              const reader = new FileReader();\n                              reader.addEventListener('load', (e) => {\n                                const gameData = JSON.parse(\n                                  e.target.result,\n                                ).data;\n                                const overrides = confirm(\n                                  'If there are conflicting games data, override them? (Cancel to keep them)',\n                                );\n                                importGameData(gameData, overrides);\n                              });\n                              reader.readAsText(file);\n                            } catch (e) {\n                              alert('Unable to import.');\n                            }\n                          }\n                        } else {\n                          alert(\n                            'Import feature is not supported by the current browser.',\n                          );\n                        }\n                      }}\n                    />\n                    <button type=\"button\">Import</button>\n                  </label>\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmResetGame'))) {\n                      LS.removeItem(KEY_PREFIX + currentGame.id);\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.resetGame')}\n                </button>\n                &nbsp;\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmClearDB'))) {\n                      clearGames();\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.clearDB')}\n                </button>\n              </details>\n            </>\n          ) : (\n            <p>\n              <button\n                type=\"button\"\n                class=\"large\"\n                onClick={() => {\n                  setShowInfoModal(false);\n                  LS.setItem(KEY_PREFIX + 'skipFirstTime', 1);\n                  setSkipFirstTime(true);\n                }}\n              >\n                <PlayIcon width=\"20\" height=\"20\" /> {t('ui.startPlay')}\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n      {showDashboard && (\n        <div id=\"dashboard-modal\">\n          <CloseIcon\n            height=\"24\"\n            width=\"24\"\n            class=\"close\"\n            onClick={() => {\n              setShowDashboard(false);\n            }}\n          />\n          <IdiomsDashboard />\n        </div>\n      )}\n      <Toaster\n        containerStyle={{\n          top: '3.5em',\n        }}\n        toastOptions={{\n          className: 'toast',\n          style: {\n            pointerEvents: 'none',\n          },\n        }}\n      />\n    </>\n  );\n}\n","import '@fontsource/nunito/400.css';\nimport '@fontsource/nunito/700.css';\nimport 'rc-switch/assets/index.css';\nimport './index.css';\n\nimport { render } from 'preact';\nimport { App } from './app';\n\nimport en from '../i18n/en.json';\nimport zhCN from '../i18n/zh-CN.json';\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n      zh: {\n        translation: zhCN,\n      },\n    },\n    fallbackLng: 'en',\n    debug: /localhost/i.test(location.hostname),\n    detection: {\n      // localStorage is default\n      lookupLocalStorage: 'locale',\n      lookupCookie: 'locale',\n    },\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n  })\n  .then((t) => {\n    const updateLocale = () => {\n      document.documentElement.lang = i18n.resolvedLanguage;\n      document.title = document.querySelector(\n        'meta[property=\"og:title\"]',\n      ).content = t('app.title');\n      document.querySelector('meta[name=\"description\"]').content =\n        document.querySelector('meta[property=\"og:description\"]').content =\n          t('app.description');\n    };\n    i18n.on('languageChanged', updateLocale);\n    updateLocale();\n  });\n\nrender(<App />, document.getElementById('app'));\n"],"names":["getIdiomStates","hiddenIdiom","testIdiom","letters1","split","letters2","lettersLength","length","states","Array","from","Error","correctLetterIndices","i","l1","l2","push","presentLetterIndices","l1Index","findIndex","l","index","includes","jsxRuntime.jsx","jsxRuntime.jsxs","jsxRuntime.Fragment","py","pinyin","window","alert","text","toast","copy","fn","navigator","clipboard","writeText","then","catch","e","LS","getItem","key","localStorage","setItem","value","removeItem","fireEvent","props","plausible","idioms","idiomsTxt","games","gameIdioms","slice","map","row","id","idiom","KEY_PREFIX","HARD_MODE","JSON","parse","MAX_GAMES_BEFORE_SHOW_DASHBOARD","MAX_LETTERS","MAX_KEYS","MAX_STEPS","MIN_IDIOMS","clearGames","startsWith","allGames","Map","game","set","replace","exportGameData","Object","entries","filter","k","v","isPrefixed","gameID","find","g","data","importGameData","gameData","overrides","forEach","stringify","getBoardGameState","boardStates","some","every","s","lastRow","blankBoard","getIdiomsKeys","prevPassedIdioms","prevKeys","depth","passedIdioms","Set","add","keys","idiomLetters","letter","consecutiveFailures","anotherIdiom","has","j","size","nextIdiom","_passedIdioms","_keys","randomIdiom","Math","floor","random","error","possibleIdioms","keySize","ShareIcon","_jsx","DownloadIcon","_jsxs","PlayIcon","CloseIcon","InfoIcon","startDate","Date","getTodayGame","diff","today","setHours","dayCount","max","Countdown","t","useTranslation","nextDay","nextStartDate","hours","useState","minutes","setMinutes","seconds","setSeconds","isNow","setIsNow","timer","setInterval","toString","padStart","clearInterval","CodeInput","code","url","target","focus","select","type","Letter","state","opacity","CurrentPlaying","playingCount","setPlayingCount","fetchTimer","fetchRAF","fetchPlayingCount","r","ok","statusText","count","setTimeout","requestAnimationFrame","confettiRAF","blastConfetti","colors","particleCount","angle","spread","origin","x","y","shapes","disableForReducedMotion","frame","stopConfetti","IdiomsDashboard","wonCount","lostCount","boardGame","gameState","board","gamesCount","gamesCountOverTotal","prefersColorSchemeSupported","matchMedia","media","ShareImageButton","header","footer","imageRef","useRef","imageSrc","setImageSrc","imageOpts","canvasWidth","canvasHeight","quality","mediaChanged","setMediaChanged","colorSchemeChange","event","matches","addEventListener","addListener","removeEventListener","removeListener","current","dataURL","fileName","i18n","showDashboard","setShowDashboard","showError","setShowError","showModal","setShowModal","showInfoModal","setShowInfoModal","colorScheme","setColorScheme","html","document","querySelector","classList","remove","skipFirstTime","setSkipFirstTime","currentGame","setCurrentGame","location","hash","setBoard","cachedGame","useMemo","definition","setDefinition","json","currentStep","currentGameKeys","currentGameKeysPinyin","allPossibleIdioms","keysPinyin","get","pinyinSet","sort","a","b","localeCompare","console","groupCollapsed","log","join","groupEnd","ANSWER","handleLetter","overwrite","newBoard","columnIndex","correctKeys","presentKeys","absentKeys","handleEnter","currentIdiom","valid","timeout","handleBackspace","handleKey","metaKey","ctrlKey","toLowerCase","preventDefault","stopPropagation","test","reverse","pinyinLetter","possibleLettersSet","pinyins","firstPinyinChar","sensitivity","possibleLetters","letterIndex","indexOf","nextLetter","breakLoop","$board","getElementById","$currentRow","scrollIntoView","behavior","block","permalink","pathname","shortPermalink","host","emojiResults","trim","attempts","attemptsText","shareTextWithLink","hints","letters","absentHints","zh","c","en","letterHints","pinyinHint","pattern","HINTS","hintIndex","showHint","hint","toasts","useToasterStore","TOAST_LIMIT","visible","dismiss","gamesPlayedCount","precision","toPrecision","GamesCount","useCallback","currentTarget","p","userAgent","share","encodeURIComponent","confirm","rand","round","randGame","prompt","URL","resolvedLanguage","undefined","changeLanguage","checked","reload","__COMMIT_HASH__","str","version","exportDate","bytes","TextEncoder","encode","blob","Blob","createObjectURL","$a","createElement","body","appendChild","style","href","download","click","revokeObjectURL","FileReader","file","fileList","files","reader","result","readAsText","top","className","pointerEvents","use","LanguageDetector","initReactI18next","init","resources","translation","zhCN","fallbackLng","debug","hostname","detection","lookupLocalStorage","lookupCookie","interpolation","escapeValue","updateLocale","documentElement","lang","title","content","on","render"],"mappings":"g8CAAA,KAAM,IAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,KC1CtB,KAAMA,IAAiB,CAACC,EAAaC,IAAc,MAC3CC,GACJ,MAAOD,IAAc,SAAWA,EAAUE,MAAM,IAAMF,EAClDG,EACJ,MAAOJ,IAAgB,SAAWA,EAAYG,MAAM,IAAMH,EACtDK,EAAgBH,EAASI,OACzBC,EAASC,MAAMC,KAAK,CAAEH,OAAQD,GAAiB,IAAM,aACvDA,IAAkBD,EAASE,YACvB,IAAII,OAAM,yCAEZC,GAAuB,UACpBC,GAAI,EAAGA,EAAIP,EAAeO,IAAK,MAChCC,GAAKX,EAASU,GACdE,EAAKV,EAASQ,GAChBC,IAAOC,GACTP,GAAOK,GAAK,YACZD,EAAqBI,KAAKH,SAGxBI,GAAuB,UACpBJ,GAAI,EAAGA,EAAIP,EAAeO,IAAK,MAChCC,GAAKX,EAASU,GACdE,EAAKV,EAASQ,MAChBC,IAAOC,EAAI,MACPG,GAAUb,EAASc,UACvB,CAACC,EAAGC,IACFD,IAAMN,GACN,CAACF,EAAqBU,SAASD,IAC/B,CAACJ,EAAqBK,SAASD,IAE/BH,IAAY,IACdV,GAAOK,GAAK,YACZI,EAAqBD,KAAKE,WAIzBV,ICnCI,EAAMe,GACN,EAAOC,GACP,EAAWC,GCKlBC,EAAKC,GACXC,OAAOD,OAASA,GAMhB,KAAME,GAASC,GAASC,GAAMD,GAKxBE,GAAO,CAACF,EAAMG,EAAK,IAAM,KAAO,CAChCC,UAAUC,WAAaD,UAAUC,UAAUC,oBACnCD,UACPC,UAAUN,GACVO,KAAKJ,GACLK,MAAOC,GAAM,QAEJT,SASVU,EAAK,CACTC,QAAUC,GAAQ,IACZ,OACKC,cAAaF,QAAQC,SACrBH,SACA,QAGXK,QAAS,CAACF,EAAKG,IAAU,IACnB,OACKF,cAAaC,QAAQF,EAAKG,SAC1BN,SACA,QAGXO,WAAaJ,GAAQ,IACf,OACKC,cAAaG,WAAWJ,SACxBH,SACA,SAKPQ,EAAY,IAAIC,IAAU,CAC1BpB,OAAOqB,qBACC,GAAGD,IAMXE,GAASC,GAAU/C,MAAM;AAAA,GAEzBgD,EAAQC,GAAWC,MAAM,GAAGC,IAAKC,KACrCC,GAAID,EAAI,GACRE,MAAOF,EAAI,MAGPG,EAAa,QACbC,EAAYC,KAAKC,MAAMtB,EAAGC,QAAS,GAAEkB,cAAyB,IAC9DI,GAAkC,IAClCC,GAAc,EACdC,EAAWL,EAAY,GAAK,GAC5BM,GAAY,EACZC,GAAaP,EAAY,GAAK,EAEpC,AAAIA,KACQ,aA4BZhC,OAAOwC,WAAa,IAAM,IACpB,MACI,CAAE7D,UAAWoC,oBACV9B,GAAI,EAAGA,EAAIN,EAAQM,IAAK,MACzB6B,GAAMC,aAAaD,IAAI7B,GACzB6B,kBAAK2B,WAAWV,kBACLb,WAAWJ,UAGrBH,MAGXX,OAAO0C,SAAW,IAAM,MAChBA,MAAeC,KACf,CAAEhE,UAAWoC,oBACV9B,GAAI,EAAGA,EAAIN,EAAQM,IAAK,MACzB6B,GAAMC,aAAaD,IAAI7B,MACzB6B,EAAI2B,WAAWV,GAAa,MACxBa,GAAOX,KAAKC,MAAMnB,aAAaF,QAAQC,MACpC+B,IAAI/B,EAAIgC,QAAQf,EAAY,IAAKa,UAGvCF,IAGT,KAAMK,IAAiB,IAAM,IACvB,OACeC,QAAOC,QAAQlC,cAC7BmC,OAAO,CAAC,CAACC,EAAGC,KAAO,MACZC,GAAaF,EAAEV,WAAWV,MAC5B,CAACsB,QAAmB,QAClBC,GAASH,EAAEzB,MAAMK,EAAWpD,cAC3B0E,IAAc7B,EAAM+B,KAAMC,GAAMA,EAAE3B,KAAOyB,KAEjD3B,IAAI,CAAC,CAACwB,EAAGC,KAAO,MACTvB,GAAKsB,EAAEzB,MAAMK,EAAWpD,QACxB8E,EAAOxB,KAAKC,MAAMkB,SACjB,IACLvB,MACG4B,WAIF9C,MAEL+C,GAAiB,CAACC,EAAUC,EAAY,KAAU,IAClD,GACOC,QAASjB,GAAS,MACDA,KAAhBf,OAAgBe,EAATa,KAASb,EAATa,CAAP5B,OACJ+B,IAAa,CAAC7C,aAAaF,QAAS,GAAEkB,IAAaF,SAClDb,QAAS,GAAEe,IAAaF,IAAMI,KAAK6B,UAAUL,YAG7C9C,MAGLoD,GAAqBC,GAAgB,IAC7BA,EAAYC,KACrBrC,GAAQ,CAAC,CAACA,EAAIjD,QAAUiD,EAAIsC,MAAOC,GAAMA,IAAM,oBAElC,WACVC,GAAUJ,EAAYA,EAAYrF,OAAS,SACpC,CAAC,CAACyF,EAAQzF,QAAUyF,EAAQF,MAAOC,GAAMA,IAAM,aAC3C,OACV,MAKHE,GAAa,IACjBxF,MAAMC,KAAK,CAAEH,OAAQ2D,IAAa,MAChCc,EAAGvE,MAAMC,KAAK,CAAEH,OAAQyD,IAAe,IAAM,IAC7C+B,EAAG,MAGDG,GAAgB,CAACxC,EAAOyC,EAAkBC,EAAUC,EAAQ,IAAM,UAClEC,GAAeH,MAAwBI,OAC9BC,IAAI9C,MACb+C,GAAOL,MAAgBG,UACrBG,GAAehD,EAAMtD,MAAM,MACpBqF,QAASkB,GAAWF,EAAKD,IAAIG,OACtCC,GAAsB,WACH/F,GAAI,EAAGA,EAAIuC,EAAM7C,OAAQM,IAAK,MAC7C8F,GAASD,KAAkB,GAAK1C,IAChC6C,EAAezD,EAAM+B,KACzB,CAAC,CAAEzB,WAAY,CAAC4C,EAAaQ,IAAIpD,IAAUA,EAAMpC,SAASqF,OAExDE,EAAc,QACPE,GAAI,EAAGA,EAAIF,EAAanD,MAAMnD,OAAQwG,SACxCP,IAAIK,EAAanD,MAAMqD,IAExBN,EAAKO,MAAQ/C,YAINuC,IAAIK,EAAanD,SACR,MACjB,IACDkD,GAAuB5C,GAAc,aAIlB,MAKvByC,EAAKO,KAAO/C,GAAYqC,EAAaU,KAAO7C,GAAY,MACpD8C,GAAY,CAAC,GAAGX,GAAc,EAAED,MAClCY,EAAW,MACP,CAAEX,aAAcY,EAAeT,KAAMU,GAAUjB,GACnDe,EACAX,EACAG,EACAJ,KAEaa,IACRC,MAKPV,EAAKO,KAAO/C,GAAYqC,EAAaU,KAAO7C,GAAY,MACpDiD,GAAchE,EAAMiE,KAAKC,MAAMD,KAAKE,SAAWnE,EAAM7C,SAASmD,SAChE0D,EAAa,MACT,CAAEd,aAAcY,EAAeT,KAAMU,GAAUjB,GACnDkB,EACAd,EACAG,EACA,KAEaS,IACRC,MAKPV,EAAKO,KAAO/C,GAAYqC,EAAaU,KAAO7C,GAAY,MACpDe,GAAS9B,KAAM+B,KAAMC,GAAMA,EAAE1B,QAAUA,KAA9BN,cAAsCK,WAC7C+D,MAAMtC,EAAQ,CACpBuC,eAAgBnB,EAAaU,KAC7BU,QAASjB,EAAKO,KACdJ,8BAIG,CACLN,eACAG,SASEkB,GAAa3E,GACjB4E,aAAK,QAAQ,YAAY,KAAK,gBAAmB5E,aAC/C4E,UAAM,EAAE,ghBAINC,GAAgB7E,GACpB8E,aAAK,QAAQ,cAAc,KAAK,gBAAmB9E,cACjD4E,qCACAA,UAAM,EAAE,sIACRA,UAAM,EAAE,uHAING,GAAY/E,GAChB8E,aAAK,QAAQ,YAAY,KAAK,gBAAmB9E,cAC/C4E,qCACAA,sBACY,UACV,EAAE,sHACQ,gBAKVI,GAAahF,GACjB8E,aAAK,QAAQ,aAAgB9E,cAC3B4E,qCACAA,UACE,KAAK,eACL,EAAE,8GAKFK,GAAYjF,GAChB8E,aAAK,KAAK,OAAO,QAAQ,YAAY,OAAO,gBAAmB9E,cAC7D4E,qCACAA,2BACiB,0BACC,uBACH,IACb,EAAE,kEAKFM,GAAY,GAAIC,MAAK,KAAM,EAAG,IAC9BC,GAAe,IAAM,MAEnBC,GAAOC,AADC,GAAIH,QAAOI,SAAS,EAAG,EAAG,EAAG,GACtBL,GACfM,EAAWnB,KAAKC,MAAMe,OAAe,GAAK,GAAK,WAC9CjF,GAAMiE,KAAKoB,IAAI,EAAGD,EAAWpF,EAAM7C,UAItCmI,GAAY,IAAM,MAChB,CAAEC,GAAMC,OACVC,GAAU,GAAIV,QAAOI,SAAS,EAAG,EAAG,EAAG,GAAK,GAAK,GAAK,GAAK,SACzDO,GAAgB,GAAIX,MAAK,CAACD,GAAY,GAAK,GAAK,GAAK,KACvDW,EAAUC,MACFA,QAEN,CAACC,EAAOR,GAAYS,EAAS,MAC7B,CAACC,EAASC,GAAcF,EAAS,MACjC,CAACG,EAASC,GAAcJ,EAAS,MACjC,CAACK,EAAOC,GAAYN,EAAS,aAEzB,IAAM,MACRO,GAAQC,YAAY,IAAM,MACxBnB,GAAOQ,EAAU,GAAIV,SACvBE,GAAQ,EAAG,GACJ,kBACKkB,YAIdlC,KAAKC,MAAMe,QACRoB,WACAC,SAAS,EAAG,QAGfrC,KAAKC,MAAOe,MAAsB,IAC/BoB,WACAC,SAAS,EAAG,QAGfrC,KAAKC,MAAOe,EAAO,IAAQ,IACxBoB,WACAC,SAAS,EAAG,OAEhB,WACI,IAAMC,cAAcJ,IAC1B,IACCF,EACKzB,OAAG,KAAK,cAAMe,EAAE,qBAGvBb,UAAM,MAAM,sBACTiB,MAAQE,MAAUE,MAKnBS,GAAY,CAAC,CAAEC,OAAMC,SAAU,MAC7B,CAAEnB,KAAMC,UAEZiB,IACEjC,WACE,KAAK,OACL,YACA,MAAOiC,EACP,MAAM,aACN,QAAUtH,GAAM,GACZwH,OAAOC,UACPD,OAAOE,YACJH,GAAOD,EAAM,IAAM,GAChBlB,EAAE,qBAEA,eAAgB,CACxB3F,MAAO,CACLkH,KAAM,oBASdC,GAAS,CAAC,CAAExD,SAAQhF,SAAQyI,WAE9BxC,SACE,MAAQ,UAASjB,EAAS,WAAa,MAAMyD,UAAS,MACpDA,EAAQ,YAAO,cAGjBtC,oBACGnB,GAAUiB,UAAM,MAAO,CAAEyC,QAAS,uBACnCzC,uBACAA,iBAAKjG,GAAUD,EAAGiF,IAAWiB,yBAC7BA,4BAMF0C,GAAiB,IAAM,MACrB,CAAE3B,GAAMC,IACR,CAAC2B,EAAcC,GAAmBxB,EAAS,YACvC,IAAM,IACVyB,GAAYC,OACVC,GAAoB,IAAM,OACxB,iEACHtI,KAAMuI,GAAM,IACP,CAACA,EAAEC,QAAUlK,OAAMiK,EAAEE,kBAClBF,GAAE9I,SAEVO,KAAMP,GAAS,MACRiJ,GAAQ,CAACjJ,KACX,CAACiJ,OAAapK,OAAM,iBACRoK,KAEjBzI,MAAOC,GAAM,GACI,OAEPyI,WAAW,IAAM,GACjBC,sBAAsBN,IAChC,kBAGE,IAAM,cACEF,wBACQC,KAEtB,IAECH,GAAgB,EAAU,KAG5B3C,SAAK,GAAG,2BACLe,EAAE,kBAAmB,CAAEoC,MAAOR,OAMrC,GAAIW,IACJ,KAAMC,IAAgB,IAAM,MACpBC,GAAS,CAAC,UAAW,WAE1B,aAAiB,IACP,CACPC,cAAe,EACfC,MAAO,GACPC,OAAQ,GACRC,OAAQ,CAAEC,EAAG,EAAGC,EAAG,GACnBN,SACAO,OAAQ,CAAC,UACTC,wBAAyB,QAElB,CACPP,cAAe,EACfC,MAAO,IACPC,OAAQ,GACRC,OAAQ,CAAEC,EAAG,EAAGC,EAAG,GACnBN,SACAO,OAAQ,CAAC,UACTC,wBAAyB,QAEbX,sBAAsBY,QAGlCC,GAAe,IAAM,sBACJZ,KAEjBa,GAAkB,IAAM,MACtB,CAAEpD,GAAMC,OACVoD,GAAW,EACXC,EAAY,OACV/I,GAASE,EAAMG,IAAKiB,GAAS,MAE3B0H,GAAYrI,KAAKC,MAAMtB,EAAGC,QAAS,GAAEkB,IAAaa,EAAKf,UACzDyI,GAAaA,EAAUC,UAAW,MAC9B,CAAEC,QAAOD,aAAcD,QACzBC,KAAc,UAEPA,IAAc,YAIvBvE,OACE,KAAO,KAAIpD,EAAKf,KAChB,MAAQ,SAAQ0I,IAChB,MAAQ,GAAE3H,EAAKf,OAAO0I,cAErBA,IAAc,MAAQ,YAAO,yBAKhCvE,QAAG,KAAO,KAAIpD,EAAKf,KAAM,MAAM,QAAQ,MAAQ,GAAEe,EAAKf,oCAOlD,UAEDqI,IACN,IAGDhE,eACEF,iBACGe,EAAE,oBAAqB,CACtB0D,WAAYtI,OAGhB6D,gBAAIe,EAAE,0BACNb,iBACEF,EAAC,GACC,QAAQ,6BACR,OAAQ,CACN0E,oBAAsB,GAAEN,EAAWC,OAAe7I,EAAM7C,UAE1D,WAAY,CAACqH,aAEfA,WACAA,EAAC,GACC,QAAQ,oBACR,OAAQ,CACNoE,WACAC,aAEF,WAAY,CAACrE,UAAOA,gBAGxBA,SAAK,MAAM,kBAAU1E,QAKrBqJ,GACJ,cAAgB3K,SAChBA,OAAO4K,WAAW,gCAAgCC,QAAU,UAExDC,GAAmB,CAAC,CAAEC,SAAQC,SAAQhH,cAAanC,QAAS,MAC1D,CAAEkF,KAAMC,IACRiE,EAAWC,GAAO,MAClB,CAACC,EAAUC,GAAehE,EAAS,MACnCiE,EAAY,CAChBC,YAAa,KACbC,aAAc,KACdC,QAAS,IAIL,CAACC,EAAcC,GAAmBtE,MAC9B,IAAM,IACV,CAACuD,eACCE,GAAQ7K,OAAO4K,WAAW,gCAC1Be,EAAqBC,GAAU,GACnBA,EAAMC,aAEpB,GACIC,iBAAiB,SAAUH,SAC1BhL,KACDoL,YAAYJ,SAEb,IAAM,IACP,GACIK,oBAAoB,SAAUL,SAC7BhL,KACDsL,eAAeN,SAKjB,IAAM,GACF,SACLV,EAASiB,QAASb,GACtB5K,KAAM0L,GAAY,GACLA,KAEbzL,MAAOC,GAAM,GACA,SAEf,CAACqD,EAAanC,EAAI4J,SAEfW,GAAY,kBAAiBvK,cAGjCqE,gBACG,CAAC,CAACiF,GACDjF,OACE,GAAG,qBACH,MAAM,SACN,KAAMiF,EACN,SAAUiB,EACV,OAAO,SACP,QAAS,IAAM,GACH,eAAgB,CACxBhL,MAAO,CACLkH,KAAM,sBAKXvB,EAAE,oBAAiBf,EAAC,IAAa,MAAM,KAAK,OAAO,UAGxDA,SAAK,GAAG,iCACNE,SAAK,GAAG,cAAc,IAAK+E,YACzBjF,OAAG,MAAM,kBACPA,gBAAI+E,MAEN/E,SAAK,MAAM,iBACRhC,EAAYrC,IAAKC,GAEdoE,kBACGpE,EAAID,IAAKoD,GACDiB,UAAM,MAAQ,QAAOjB,YAMtCiB,OAAG,MAAM,kBAAUgF,0BAOP,aACd,GAAKqB,QAASrF,IAEd,CAACsF,EAAeC,GAAoBnF,EAAS,IAC7C,CAACoF,EAAWC,GAAgBrF,EAAS,IACrC,CAACsF,EAAWC,GAAgBvF,EAAS,IACrC,CAACwF,EAAeC,GAAoBzF,EAAS,IAE7C,CAAC0F,EAAaC,GAAkB3F,EACpCxG,EAAGC,QAAS,GAAEkB,iBAA4B,UAElC,IAAM,IACV,CAAC4I,eACCqC,GAAOC,SAASC,cAAc,QAChCJ,IAAgB,UACbK,UAAUvI,IAAI,eACduI,UAAUC,OAAO,eACbN,IAAgB,WACpBK,UAAUvI,IAAI,gBACduI,UAAUC,OAAO,gBAEjBD,UAAUC,OAAO,YAAa,eAEpC,CAACN,SAEE,CAACO,EAAeC,GAAoBlG,EACxCxG,EAAGC,QAAS,GAAEkB,mBAA8B,IAGxC,CAACwL,EAAaC,IAAkBpG,EACpC5F,EAAM+B,KAAMC,GAAMA,EAAE3B,KAAO4L,SAASC,KAAKhM,MAAM,KAAO8E,QAE9C,IAAM,QACPsF,iBAAiB,aAAc,IAAM,IAExCtK,EAAM+B,KAAMC,GAAMA,EAAE3B,KAAO4L,SAASC,KAAKhM,MAAM,KAAO8E,QAEvC,OAElB,SAEG,CAACgE,EAAOmD,GAAYvG,EACxBnF,UAAKC,MAAMtB,EAAGC,QAAS,GAAEkB,IAAawL,EAAY1L,SAAlDI,eAA0DuI,QACxDnG,QAEM,IAAM,MACRuJ,GAAahN,EAAGC,QAAS,GAAEkB,IAAawL,EAAY1L,QACtD+L,EACO3L,KAAKC,MAAM0L,GAAYpD,MAEvBnG,OAEV,CAACkJ,EAAY1L,UAEVmC,GAAc6J,EAAQ,IACnBrD,EAAM7I,IAAI,CAACC,EAAK3C,IACjB2C,EAAIuC,EACC/F,GAAemP,EAAYzL,MAAOF,EAAIwB,GAExC,IAER,CAACoH,MAGM,IAAM,CAEVA,GAASA,EAAMvG,KAAMrC,GAAQA,EAAIwB,EAAEa,KAAMb,GAAMA,OAC9CpC,QACA,GAAEe,IAAawL,EAAY1L,KAC5BI,KAAK6B,UAAU,CACb0G,QACAD,UAAWxG,GAAkBC,OAIlC,CAACA,SAEE,CAAC8J,EAAYC,IAAiB3G,EAAS,QACnC,IAAM,IACA,YAEX,qDAAoDmG,EAAYzL,SAEhErB,KAAMuI,GAAMA,EAAEgF,QACdvN,KAAMuI,GAAM,CACPA,EAAE8E,eACU9E,EAAE8E,cAGnBpN,MAAM,IAAM,KACd,CAAC6M,EAAYzL,aAEVmM,GAAczD,kBAAOjL,UAAWqC,GAAQA,EAAIuC,IAAM,MAAU,EAE5D,CAAC+J,GAAiBC,GAAyBN,EAAQ,IAAM,MACvD,CAAEhJ,QAASP,GAAciJ,EAAYzL,OACrCsM,EAAoB9M,GAAO4B,OAAQpB,GAEhCA,EAAMtD,MAAM,IAAI0F,MAAOa,GAAWF,EAAKK,IAAIH,KAI9CsJ,KAAiB1L,OACLkB,QAAS/B,GAAU,CACf/B,GAAO+B,EAAO,CAAEwG,KAAM,UAC9BzE,QAAQ,CAAC9D,EAAQd,IAAM,CAC7BoP,EAAWnJ,IAAIpD,EAAM7C,MACZqP,IAAIxM,EAAM7C,IAAI2F,IAAI7E,KAElB8C,IAAIf,EAAM7C,MAAQ0F,KAAI,CAAC5E,WAI7B8D,QAAQ,CAAC0K,EAAWxJ,IAAW,GAC9BH,IAAI9E,EAAGiF,WAIbc,GAAiBuI,EACpBzM,IAAKG,GACI,GAAEA,MAAUhC,EAAGgC,OAExB0M,KAAK,CAACC,EAAGC,IAAMD,EAAEE,cAAcD,EAAG,aACjCE,SAAQC,yBACFA,eACL,GAAEhJ,EAAelH,2BAA2B4O,EAAY1L,QAAQgD,EAAKO,uBAEhE0J,IAAK,GAAEjJ,EACZlE,IAAI,CAACG,EAAO7C,IAAO,GAAEA,EAAI,MAAM6C,KAC/BiN,KAAK;AAAA;AAAA;AAAA,oGAGAC,mBAEHC,OAAU,GAAE1B,EAAYzL,UAAUhC,EAAGyN,EAAYzL,UAGjD,CADY,CAAC,GAAG+C,GAAM2J,KAAK,CAACC,EAAGC,IAAMD,EAAEE,cAAcD,EAAG,OAC3CL,IACnB,CAACd,EAAYzL,QAEVoN,GAAe,CAACnK,EAAQoK,EAAY,KAAU,IAC9C,CAAC3E,EAAMyD,IACP1D,WACS,SAEP6E,GAAW,CAAC,GAAG5E,MACjB6E,GAAcD,EAASnB,GAAa7K,EAAE7D,UAAW6D,GAAMA,IAAM,IAC7D+L,IACEE,IAAgB,KACJ,OAKdA,IAAgB,OACTpB,GAAa7K,EAAEiM,GAAetK,IAC9BqK,KAIPE,MAAkB3K,KAClB4K,MAAkB5K,KAClB6K,MAAiB7K,OACjBd,QAAQ,CAACjC,EAAK3C,IAAM,CACpB,CAAC2C,EAAIuC,KACLf,EAAES,QAAQ,CAACkB,EAAQI,IAAM,MACrBqD,GAAQxE,EAAY/E,GAAGkG,GACzBqD,IAAU,eACA5D,IAAIG,GACPyD,IAAU,eACP5D,IAAIG,GACPyD,IAAU,aACR5D,IAAIG,YAKf0K,IAAc,IAAM,IACpBlF,iBACIuE,IAAI,iBACC,SAEPlN,GAAM4I,EAAMyD,MACd,CAACrM,cACC8N,GAAe9N,EAAIwB,EAAE2L,KAAK,IAC1BY,EAAQrO,GAAO5B,SAASgQ,GAC1BC,KACExL,EAAI,KACC,CAAC,GAAGqG,gBAEF,IAAM,GACF,KACZ,YAEGsE,IAAI,CAAEY,eAAcC,WAGxBpF,EAAYsD,EAAQ,IACjB9J,GAAkBC,GACxB,CAACA,MAEM,IAAM,IACV4L,SACArF,KAAc,QACNnB,WAAW,IAAM,GACZ,QACZ,OACMmB,IAAc,OACV,OAEA,IAER,IAAM,cACEqF,KAEd,CAACrF,SAEEsF,IAAkB,IAAM,IACxBtF,cACE6E,GAAW,CAAC,GAAG5E,GAEf5I,EAAMwN,EAASnB,MACjB,CAACrM,GAAOA,EAAIuC,YACZkL,GAAc,UACTpQ,GAAI2C,EAAIwB,EAAEzE,OAAS,EAAGM,GAAK,EAAGA,OACjC2C,EAAIwB,EAAEnE,KAAO,GAAI,GACLA,QAIdoQ,IAAgB,OACdjM,EAAEiM,GAAe,KACZD,OAIH,IAAM,MACRU,GAAanP,GAAM,IACnB4J,GACA5J,EAAEoP,SAAWpP,EAAEqP,SAAW,CAACrP,EAAEG,gBAG3BA,GAAMH,EAAEG,IAAImP,iBACdnP,IAAQ,UACRoP,mBACAC,+BAEOrP,IAAQ,cACfoP,8BAEO,sBAAsBE,KAAKtP,GAAM,MAGpCG,GAAQ,CAAC,GAAGW,AADN4I,EAAMyD,GACI7K,GAAGiN,UAAU9M,KAAMH,GAAMA,IAAM,OACjDnC,EAAO,MACHqP,GAAexQ,EAAGmB,GAAO,GAEzBsP,KAAyB5L,OACTd,QAAQ,CAAC2M,GAASzL,KAAW,IACzClB,QAAS9D,IAAW,CAGxB0Q,AAFsB1Q,GAAO,GAEb4O,cAAc2B,EAAc,KAAM,CAChDI,YAAa,WACR,KAEY9L,IAAIG,aAIvB4L,GAAkB,CAAC,GAAGJ,MAExBI,EAAgBhS,QAAU,cACxBiS,IAAcD,EAAgBE,QAAQ5P,GACtC6P,GACJhQ,IAAQ,aACJ6P,MAA+B,GAAKA,EAAgBhS,QACpDgS,MACiBA,EAAgBhS,OAAS,GACtCgS,EAAgBhS,QAEtBmS,OACWA,GAAY,aAGpB,SAASV,KAAKtP,GAAM,IAEzBiQ,GAAY,KACMlN,QAAQ,CAAC2M,EAASzL,IAAW,CAC7CgM,KACIlN,QAAS9D,GAAW,IACtBgR,SAGFN,AAFsB1Q,EAAO,GAEb4O,cAAc7N,EAAK,KAAM,CACvC4P,YAAa,WACR,MAELR,mBACU,MACCnL,aAMfiM,GAAS/D,SAASgE,eAAe,YACnCD,iBAAQ9D,cAAe,MACnBgE,GAAcF,EAAO9D,cACxB,kBAAiBe,EAAc,MAE9BiD,kBAAaC,mBACHA,eAAe,CACzBC,SAAU,SACVC,MAAO,8BAKNvF,iBAAiB,UAAWgE,GAC9B,IAAM,UACF9D,oBAAoB,UAAW8D,KAEzC,CAAC5B,GAAiBC,EAAuB3D,EAAOyD,EAAa1D,SAE1D+G,IAAY7D,SAAS7D,OAAS6D,SAAS8D,SAAW,IAAMhE,EAAY1L,GACpE2P,GACJ/D,SAASgE,KAAOhE,SAAS8D,SAAW,IAAMhE,EAAY1L,GAClD6P,GAAe1N,EAClBrC,IAAKC,GAAQA,EAAImN,KAAK,KACtBA,KAAK;AAAA,GACL4C,OACGC,GAAWrH,IAAc,MAAQmH,GAAalT,MAAM;AAAA,GAAMG,OAAS,IACnEkT,GAAgB,GAAED,MAAYtP,KAI9BwP,EAAqB,GAHR,GAAE/K,EAAE,iBAAiBwG,EAAY1L,MAClDG,EAAY,aAAQ,MAClB6P;AAAAA;AAAAA,EAAmBH;AAAAA;AAAAA,EACsBF,KAEvCO,GAAQlE,EAAQ,IAAM,MACpBkE,GAAQ,GACRC,EAAUzE,EAAYzL,MAAMtD,MAAM,IAGlCyT,EAAc/D,GACjBhL,OAAQC,GACA,CAAC6O,EAAQtS,SAASyD,IAAM,CAACqM,GAAWtK,IAAI/B,IAEhDzB,MAAM,EAAG,IACTA,MAAM,EAAG,GACTC,IAAKoD,GACGgC,EAAE,qBAAsB,CAC7BhC,SACAhF,OAAQD,EAAGiF,MAGdyJ,KAAK,IAAM/I,KAAKE,SAAW,MACxBvG,KAAK,GAAG6S,GAIZnE,kBAAYoE,KACZF,EAAQ9O,OAAQiP,GAAMrE,EAAWoE,GAAGxS,SAASyS,IAAIxT,QAAU,KAIrDS,KAAM,gBAAK0O,EAAWoE,MAE1BpE,kBAAYsE,OAAUhT,KAAM,gBAAK0O,EAAWsE,WAG1CC,GAAcL,EACjB9O,OAAQiP,GAAM,CAAC7C,GAAYpK,IAAIiN,IAAM,CAAC5C,GAAYrK,IAAIiN,IACtDzQ,MAAM,EAAG,IACTC,IAAKoD,GACGgC,EAAE,sBAAuB,CAC9BhC,SACAhF,OAAQD,EAAGiF,MAGdyJ,KAAK,IAAM/I,KAAKE,SAAW,MACxBvG,KAAK,GAAGiT,QAGRC,GAAaxS,EAAGyN,EAAYzL,MAAO,CACvCyQ,QAAS,QACTjK,KAAM,UACLyG,KAAK,aACF3P,KAAK2H,EAAE,0BAA2B,CAAEuL,uBAEnCE,MAAQT,EAERA,GACN,CAACxE,EAAYzL,MAAOgM,IACjB2E,EAAYvH,GAAO,KACf,IAAM,GACJgB,QAAU,GACnB,CAACqB,EAAYzL,aACV4Q,IAAW,IAAM,IACjBnI,cACEoI,GAAOZ,GAAMU,EAAUvG,WACnBA,WAAqBA,QAAU,GAAK6F,GAAMpT,SAC9CgU,IAKF,CAAEC,WAAWC,KACbC,GAAc,IACV,IAAM,IAEX5P,OAAO,CAAC6D,EAAG9H,IAAM8H,EAAEgM,SAAW9T,GAAK6T,IACnCjP,QAASkD,GAAM5G,GAAM6S,QAAQjM,EAAElF,MACjC,CAAC+Q,UAEEK,GAAmBpF,EAAQ,IAAM,IAEjC,EAACjB,KACD,OAOK/H,AANM7B,QAAO6B,KAAK9D,cAAcmC,OAAQC,GAAM,MAC7CE,GAAaF,EAAEV,WAAWV,MAC5B,CAACsB,QAAmB,QAClBC,GAASH,EAAEzB,MAAMK,EAAWpD,cAC3B0E,IAAc7B,EAAM+B,KAAMC,GAAMA,EAAE3B,KAAOyB,KAEtC3E,aACLgC,MACR,CAACiM,MAEM,IAAM,IACV,CAACqG,GAAoBA,EAAmB,eACtCC,GAAYD,EAAmB,IAAM,EAAI,EACzC9J,EAAQ,CAAC8J,EAAiBE,YAAYD,KAClC,eAAgB,CACxB9R,MAAO,CACL+H,YAGH,CAAC8J,SAEEG,IAAaC,GACjB,IACEnN,iBACG+M,EACAA,GAAoB9Q,IACnB+D,eACG,QACC,IACFF,OACE,KAAK,IACL,QAAUrF,GAAM,GACZuP,mBACe,MACA,cAGlB1O,EAAM7C,eAMjB,CAACsU,UAID/M,gBACEF,qBACEE,SAAK,MAAM,kBACTF,YACE,KAAK,SACL,QAAS,IAAM,GACI,cAGnBA,EAAC,IAAS,MAAM,KAAK,OAAO,SAE9BE,oBACEF,iBAAKe,EAAE,eACPf,EAAC,UAEHA,YACE,KAAK,SACL,QAAS,IAAM,GACAuE,GAAa,kBAG3BA,EACCxD,EAAE,eAEFb,SAAK,MAAM,KAAK,OAAO,KAAK,QAAQ,wBAClCF,4BACAA,UACE,KAAK,eACL,EAAE,+IAOdA,SAAK,GAAG,QAAQ,MAAQ,GAAEuE,KAAavI,EAAY,YAAc,cAC9DwI,EAAM7I,IAAI,CAACC,EAAKnC,IAAU,MACnB+Q,GAAUzQ,GAAO6B,EAAIwB,EAAE2L,KAAK,IAAK,CAAEzG,KAAM,gBAE7CtC,UACE,UAAY,OACViI,IAAgBxO,GAAS+M,EAAY,QAAU,MAC7CyB,IAAgBxO,EAAQ,UAAY,MAAMuE,EAC5CvE,GACAsP,KAAK,eAGNnN,EAAIwB,EAAEzB,IAAI,CAACoD,EAAQ9F,IAClB+G,EAAC,IAEC,SACA,OAAQwK,EAAQvR,GAChB,MAAO+E,EAAYvE,GAAOR,IAHrBA,KAJJQ,OAcbuG,SAAK,GAAG,WAAW,MAAQ,GAAEuE,KAAavI,EAAY,YAAc,cAClEkE,SAAK,MAAM,kBACTF,SAAK,MAAM,gBACRkI,GAAgBvM,IAAI,CAACb,EAAK7B,IACzB+G,YACE,MAAQ,GAAEsJ,GAAYpK,IAAIpE,GAAO,YAAO,MACtCyO,GAAYrK,IAAIpE,GAAO,YAAO,MAC5B0O,GAAWtK,IAAIpE,GAAO,SAAM,KAChC,KAAK,SACL,SAAU,GACV,QAAS,IAAM,IACAA,aAGfoF,oBACGpF,EACDkF,uBACAA,iBACGmI,EAAsBjJ,IAAIpE,GACvB,CAAC,GAAGqN,EAAsBG,IAAIxN,IAC3B0N,KAAK,CAACC,EAAGC,IAAMD,EAAEE,cAAcD,EAAG,OAClCK,KAAK,YACRjP,EAAGgB,KAETkF,+BAKRE,SAAK,MAAM,gBACTF,YAAQ,KAAK,SAAS,QAASyJ,GAAa,SAAU,YACnD1I,EAAE,kBAEJ/E,EACCgE,OAAG,MAAM,gBAAQe,EAAE,iBAEnBf,YAAQ,KAAK,SAAS,MAAM,QAAQ,QAAS0M,YAC1C3L,EAAE,aAGPf,YAAQ,KAAK,SAAS,QAAS6J,GAAiB,SAAU,YACxD7J,SAAK,OAAO,KAAK,QAAQ,YAAY,MAAM,cACzCA,UACE,KAAK,eACL,EAAE,4PAOdE,SACE,GAAG,QACH,MAAOwG,EAAY,SAAW,GAC9B,QAAU/L,GAAM,CACVA,EAAEwH,SAAWxH,EAAE2S,iBAA4B,iBAGjDtN,EAAC,IACC,OAAO,KACP,MAAM,KACN,MAAM,QACN,QAAS,IAAM,GACA,SAGjBE,SAAK,MAAM,oBACTF,iBACG0G,IAAc,MACX,8BACAA,IAAc,OACd,8BACA,gCAELA,IAAc,QACbxG,iBACGa,EAAE,cAAe,IAClBf,EAAC,IAAU,KAAMuH,EAAY1L,GAAI,IAAKyP,QAGzC,cAAclB,KAAK1D,IAClBxG,eACEA,iBACEF,OAAG,MAAM,kBACPE,oBACGqH,EAAYzL,MACbkE,uBACAA,iBAAKlG,EAAGyN,EAAYzL,SACpBkE,4BAGJE,SAAK,MAAM,uBACR4H,kBAAYoE,IACTpE,EAAWoE,GAAG1T,MAAM,IAAImD,IAAKwQ,GAEvBoB,AADMzT,EAAGqS,KACHA,EAAUA,EAElBjM,oBACGiM,EACDnM,uBACAA,iBAAKlG,EAAGqS,KACRnM,2BAIN,GACH8H,kBAAYoE,KAAMpE,kBAAYsE,KAAMpM,WACpC8H,iBAAYsE,MAEflM,qBACEA,OACE,KAAO,gCAA+BqH,EAAYzL,kBAClD,OAAO,gCAEHiF,EAAE,iCAGRb,OACE,KAAO,6BAA4BqH,EAAYzL,QAC/C,OAAO,gCAEHiF,EAAE,0BAIZb,SAAK,MAAM,8BACTF,SAAK,MAAM,mBAAW8L,IACtB5L,mBACEA,YACE,GAAG,QACH,QAAS,SAAY,IACf,eAGWkK,KAAK9P,UAAUkT,sBAEhBpD,KAAK9P,UAAUkT,gBAEnB,IAAIzU,OACR,0CAGC+S,QACCxR,WAAUmT,MAAM,CAAEvT,KAAM4R,UACvBnR,MACFmR,EAAmB,IAAM,GACtB/K,EAAE,yBAGF,eAAgB,CACxB3F,MAAO,CACLkH,KAAM,sBAKXvB,EAAE,oBAAiBf,EAAC,IAAU,MAAM,KAAK,OAAO,iBAGnDA,EAAC,IACC,GAAIuH,EAAY1L,GAChB,OAAQkF,EAAE,aACV,OAAS,IAAGwG,EAAY1L,MACtBG,EAAY,aAAQ,MAClB6P,KACJ,uBAGF7L,OACE,MAAM,kBACN,KAAO,gDAA+C0N,mBACpDpC,eACWoC,mBAAmB,oBAChC,OAAO,SACP,QAAS,IAAM,IACR5B,KACK,eAAgB,CACxB1Q,MAAO,CACLkH,KAAM,wBAKZpC,SAAK,MAAM,KAAK,OAAO,KAAK,QAAQ,0BAClCF,iCACAA,UACE,KAAK,eACL,EAAE,6OAKRA,OACE,MAAM,eACN,KAAO,yCAAwC0N,mBAC7C5B,KAEF,OAAO,SACP,QAAS,IAAM,GACH,eAAgB,CACxB1Q,MAAO,CACLkH,KAAM,uBAKZpC,SAAK,OAAO,KAAK,MAAM,KAAK,QAAQ,sBAClCF,oBAAQe,EAAE,kBACVf,UACE,KAAK,eACL,EAAE,4fAKRA,EAAC,IAAU,KAAMuH,EAAY1L,GAAI,IAAKyP,cAK7C/G,IAAc,OAASqH,IAAY,GAAK,CAAC5P,GACxCgE,OACE,QAAS,IAAM,GACA,iBACF,IAAM,GACE,KAChB,eAGJe,EAAE,2BAGPb,SAAK,MAAM,mBACR,YAAYkK,KAAK7F,IAChB/D,KAAe3E,KAAO0L,EAAY1L,IAChCmE,gBACEA,kBACEA,EAAC,GACC,QAAQ,eACR,WAAY,CAACA,EAAC,cAKxBE,mBACGM,KAAe3E,KAAO0L,EAAY1L,IACjCqE,eACEA,OAAG,KAAK,KAAK,MAAM,0BACjBF,EAAC,IAAS,MAAO,GAAI,OAAQ,SAAQe,EAAE,uBAEzCf,cAGJE,YACE,KAAK,SACL,QAAS,IAAM,MACH,iBACEyN,QAAQ5M,EAAE,qBACb,MACD6M,GAAOnO,KAAKoO,MAAMpO,KAAKE,YAAkBhH,OAAS,IAClDmV,EAAWtS,EAAMoS,YACdlG,KAAQ,IAAGoG,EAASjS,OAChB,QACH,iCAIdmE,EAAC,IAAS,MAAO,GAAI,OAAQ,SAAQe,EAAE,oBAC/B,IACVb,YACE,KAAK,SACL,QAAS,IAAM,GACH,sBAENrE,GAAKkS,OAAOhN,EAAE,sBACd,GACG,GAAIiN,KAAInS,GAAI6L,KAAKhM,MAAM,SACrBf,OACLkB,EAAI,MACAe,GAAOpB,EAAM+B,KAAMC,GAAMA,EAAE3B,KAAOA,GACpCe,YACO8K,KAAQ,IAAG9K,EAAKf,OACZ,QACH,0BAEJ,gCAKZmE,EAAC,IAAS,MAAO,GAAI,OAAQ,SAAQe,EAAE,gCAMjDb,SACE,GAAG,aACH,MAAO0G,GAAiB,CAACS,EAAgB,SAAW,aAEnDA,GACCrH,EAAC,IACC,OAAO,KACP,MAAM,KACN,MAAM,QACN,QAAS,IAAM,GACI,OAIvBE,SAAK,MAAM,oBACRyE,IACCzE,OAAG,MAAM,kCACPF,YACE,KAAK,SACL,MAAO8G,IAAgB,OAAS,SAAW,GAC3C,QAAS,IAAM,GACV9L,QAAS,GAAEe,eAAyB,UACxB,gCAIT,IACViE,YACE,KAAK,SACL,MAAO8G,IAAgB,OAAS,SAAW,GAC3C,QAAS,IAAM,GACV5L,WAAY,GAAEa,kBACF,gCAIT,IACViE,YACE,KAAK,SACL,MAAO8G,IAAgB,QAAU,SAAW,GAC5C,QAAS,IAAM,GACV9L,QAAS,GAAEe,eAAyB,WACxB,oCAMpB,IACHmE,OAAG,MAAM,wCACJ,IACHF,OACE,KAAK,YACL,SAAS,KACT,IAAKqG,EAAK4H,mBAAqB,KAAOC,OAAY,YAClD,MAAQ,GAAE7H,EAAK4H,mBAAqB,KAAO,WAAa,KACxD,QAAUtT,GAAM,GACZuP,mBACGiE,eAAe,4BAInB,aACG,IACRnO,OACE,KAAK,eACL,SAAS,QACT,IAAKqG,EAAK4H,mBAAqB,KAAOC,OAAY,YAClD,MAAQ,GAAE7H,EAAK4H,mBAAqB,KAAO,WAAa,KACxD,QAAUtT,GAAM,GACZuP,mBACGiE,eAAe,uCAMzB9G,GAAiB4F,EAAmB,GACnC/M,SAAK,GAAG,kBACNF,gBACEA,EAAC,GAAM,QAAQ,iBAAiB,WAAY,CAACA,EAAC,YAEhDA,SAAK,GAAG,kBACNA,gBACEE,qBACGa,EAAE,eACHf,EAAC,IACC,eAAgBhE,EAChB,SAAWoS,GAAY,GAClBpT,QACA,GAAEe,YACHqS,EAAU,OAAS,oBAEV,IAAM,UACNC,UACR,kBAQjBrO,iBAAKe,EAAE,uBACPf,gBAAIe,EAAE,oBACNf,gBAAIe,EAAE,oBACNf,gBAAIe,EAAE,oBACNf,SAAK,MAAM,yBACR,2BAAOxH,MAAM,IAAImD,IAAI,CAACoD,EAAQ9F,IAC7B+G,EAAC,IAEC,SACA,MAAO/G,IAAM,EAAI,YAAO,IAFnB8F,MAMXiB,gBAAIe,EAAE,2BACNf,SAAK,MAAM,yBACR,2BAAOxH,MAAM,IAAImD,IAAI,CAACoD,EAAQ9F,IAC7B+G,EAAC,IAEC,SACA,MAAO/G,IAAM,EAAI,YAAO,IAFnB8F,MAMXiB,gBAAIe,EAAE,2BACNf,SAAK,MAAM,yBACR,2BAAOxH,MAAM,IAAImD,IAAI,CAACoD,EAAQ9F,IAC7B+G,EAAC,IAEC,SACA,MAAO/G,IAAM,EAAI,SAAM,IAFlB8F,MAMXiB,gBAAIe,EAAE,0BACNf,gBAAIe,EAAE,oBACLsG,EACCnH,eACEF,iBAAKe,EAAE,mBACPf,gBACEA,EAAC,GACC,QAAQ,eACR,WAAY,CACVA,OACE,KAAK,6CACL,OAAO,WAETA,OAAG,KAAK,gCAAgC,OAAO,WAC/CA,OACE,KAAK,wCACL,OAAO,gBAKfA,iBAAKe,EAAE,sBACPb,kBACEF,iBACEA,OAAG,KAAK,iCAAiC,OAAO,kBAC7Ce,EAAE,8BAGPf,iBACEA,EAAC,GACC,QAAQ,6BACR,WAAY,CACVA,OACE,KAAK,wDACL,OAAO,gBAKfA,iBACEA,EAAC,GACC,QAAQ,wBACR,WAAY,CACVA,OACE,KAAK,mDACL,OAAO,gBAKfA,iBACEA,OAAG,KAAK,8BAA8B,OAAO,kBAC1Ce,EAAE,wBAGPf,iBACEA,OAAG,KAAK,uBAAuB,OAAO,kBACnCe,EAAE,4BAITb,aAAS,GAAG,gCACVA,uBACGa,EAAE,0BAAwBuN,iBAE7BpO,gCACa,IACXF,YACE,KAAK,SACL,QAAS,IAAM,MAEPvC,GAAOV,KACPwR,EAAMtS,KAAK6B,UAAU,CACzB0Q,QAAS,EACTC,WAAY,GAAIlO,MAChB9C,SAEIiR,EAAQ,GAAIC,eAAcC,OAAOL,GACjCM,EAAO,GAAIC,MAAK,CAACJ,GAAQ,CAC7BpM,KAAM,mCAEFJ,EAAM8L,IAAIe,gBAAgBF,GAG1BG,EAAK/H,SAASgI,cAAc,cACzBC,KAAKC,YAAYH,KACvBI,MAAQ,kBACRC,KAAOnN,IACPoN,SAAW,iCACXC,YAGCC,gBAAgBtN,KACjBkF,8BAIG,IACVlH,WAAO,MAAM,8BACXF,WACE,KAAK,OACL,OAAO,QACP,SAAW4F,GAAU,IACf5L,OAAOyV,eACL9B,QAAQ,uCACN,MAEI+B,GAAOC,AADI/J,EAAMzD,OAAOyN,MACR,GAChBC,EAAS,GAAIJ,cACZ3J,iBAAiB,OAASnL,GAAM,MAC/BgD,GAAW1B,KAAKC,MACpBvB,EAAEwH,OAAO2N,QACTrS,KACIG,EAAY+P,QAChB,gFAEahQ,EAAUC,OAEpBmS,WAAWL,SACX/U,KACD,6BAKR,8DAKRqF,YAAQ,KAAK,mCAGjBA,YACE,KAAK,SACL,QAAS,IAAM,CACT2N,QAAQ5M,EAAE,mCACT7F,WAAWa,EAAawL,EAAY1L,aAC9BwS,oBAIZtN,EAAE,gCAGLf,YACE,KAAK,SACL,QAAS,IAAM,CACT2N,QAAQ5M,EAAE,qDAEHsN,oBAIZtN,EAAE,6BAKTf,gBACEE,YACE,KAAK,SACL,MAAM,QACN,QAAS,IAAM,GACI,MACdlF,QAAQe,EAAa,gBAAiB,KACxB,eAGnBiE,EAAC,IAAS,MAAM,KAAK,OAAO,WAASe,EAAE,2BAMhDuF,GACCpG,SAAK,GAAG,4BACNF,EAAC,IACC,OAAO,KACP,MAAM,KACN,MAAM,QACN,QAAS,IAAM,GACI,OAGrBA,EAAC,UAGLA,EAAC,IACC,eAAgB,CACdgQ,IAAK,SAEP,aAAc,CACZC,UAAW,QACXb,MAAO,CACLc,cAAe,i5LCxvD3B7J,GACG8J,IAAIC,IACJD,IAAIE,IACJC,KAAK,CACJC,UAAW,CACTnE,GAAI,CACFoE,YAAapE,IAEfF,GAAI,CACFsE,YAAaC,KAGjBC,YAAa,KACbC,MAAO,aAAavG,KAAK3C,SAASmJ,UAClCC,UAAW,CAETC,mBAAoB,SACpBC,aAAc,UAEhBC,cAAe,CACbC,YAAa,MAGhBxW,KAAMsG,GAAM,MACLmQ,GAAe,IAAM,UAChBC,gBAAgBC,KAAO/K,GAAK4H,0BAC5BoD,MAAQpK,SAASC,cACxB,6BACAoK,QAAUvQ,EAAE,sBACLmG,cAAc,4BAA4BoK,QACjDrK,SAASC,cAAc,mCAAmCoK,QACxDvQ,EAAE,uBAEHwQ,GAAG,kBAAmBL,SAI/BM,GAAOxR,EAAC,OAAQiH,SAASgE,eAAe"}