{"version":3,"file":"index.3f8967d3.js","sources":["../../vite/modulepreload-polyfill","../../src/getIdiomStates.js","../../preact/jsx-runtime","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","const getIdiomStates = (hiddenIdiom, testIdiom) => {\n  const letters1 =\n    typeof testIdiom === 'string' ? testIdiom.split('') : testIdiom;\n  const letters2 =\n    typeof hiddenIdiom === 'string' ? hiddenIdiom.split('') : hiddenIdiom;\n  const lettersLength = letters1.length;\n  const states = Array.from({ length: lettersLength }, () => '⬜');\n  if (lettersLength !== letters2.length) {\n    throw new Error('idioms must have the same length');\n  }\n  const correctLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 === l2) {\n      states[i] = '🟩';\n      correctLetterIndices.push(i);\n    }\n  }\n  const presentLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 !== l2) {\n      const l1Index = letters2.findIndex(\n        (l, index) =>\n          l === l1 &&\n          !correctLetterIndices.includes(index) &&\n          !presentLetterIndices.includes(index),\n      );\n      if (l1Index !== -1) {\n        states[i] = '🟧';\n        presentLetterIndices.push(l1Index);\n      }\n    }\n  }\n  return states;\n};\n\nexport default getIdiomStates;\n","import * as jsxRuntime from \"/home/runner/work/chengyu-wordle/chengyu-wordle/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import {\n  useState,\n  useEffect,\n  useMemo,\n  useRef,\n  useCallback,\n} from 'preact/hooks';\nimport { pinyin } from 'pinyin-pro';\nconst py = pinyin;\nwindow.pinyin = pinyin;\n\nimport { toJpeg } from 'html-to-image';\nimport { useTranslation, Trans } from 'react-i18next';\n\nimport toast, { Toaster, useToasterStore } from 'react-hot-toast';\nconst alert = (text) => toast(text);\n\nimport Switch from 'rc-switch';\n\nimport { toClipboard } from 'copee';\nconst copy = (text, fn = () => {}) => {\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard\n      .writeText(text)\n      .then(fn)\n      .catch((e) => {});\n  } else {\n    toClipboard(text);\n    fn();\n  }\n};\n\nimport getIdiomStates from './getIdiomStates';\n\n// Always need to wrap localStorage in a try/catch block because\n// it can throw an exception in some browsers (e.g. Safari)\nconst LS = {\n  getItem: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n  setItem: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      return null;\n    }\n  },\n  removeItem: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n};\n\nconst fireEvent = (...props) => {\n  if (window.plausible) {\n    plausible(...props);\n  }\n};\n\n// Data\nimport idiomsTxt from '../game-data/all-idioms.txt?raw';\nconst idioms = idiomsTxt.split('\\n');\nimport gameIdioms from '../game-data/game-idioms.csv';\nconst games = gameIdioms.slice(1).map((row) => ({\n  id: row[0],\n  idiom: row[1],\n}));\n\nconst KEY_PREFIX = 'cywd-';\nconst HARD_MODE = JSON.parse(LS.getItem(`${KEY_PREFIX}hardMode`) || false);\nconst MAX_GAMES_BEFORE_SHOW_DASHBOARD = 7000;\nconst MAX_LETTERS = 4;\nconst MAX_KEYS = HARD_MODE ? 40 : 20;\nconst MAX_STEPS = 6;\nconst MIN_IDIOMS = HARD_MODE ? 10 : 6;\n\nif (HARD_MODE) {\n  fireEvent('Hard mode');\n}\n\n// Check letters with multiple pinyins\n// const letter2PY = new Map();\n// const differentPinyins = [];\n// games.forEach((game) => {\n//   const letters = game.idiom.split('');\n//   const pinyins = pinyin(game.idiom, { type: 'array' });\n//   letters.forEach((letter, i) => {\n//     if (!letter2PY.has(letter)) {\n//       letter2PY.set(letter, pinyins[i]);\n//     } else if (letter2PY.get(letter) !== pinyins[i]) {\n//       differentPinyins.push({\n//         id: game.id,\n//         idiom: game.idiom,\n//         letter,\n//         pinyins: [letter2PY.get(letter), pinyins[i]].join(' '),\n//       });\n//     }\n//   });\n// });\n// console.log({\n//   differentPinyins: `id,idiom,letter,pinyins\\n${differentPinyins\n//     .map((row) => `${row.id},${row.idiom},${row.letter},${row.pinyins}`)\n//     .join('\\n')}`,\n// });\n\nwindow.clearGames = () => {\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      localStorage.removeItem(key);\n    }\n  }\n};\n\nwindow.allGames = () => {\n  const allGames = new Map();\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      const game = JSON.parse(localStorage.getItem(key));\n      allGames.set(key.replace(KEY_PREFIX, ''), game);\n    }\n  }\n  return allGames;\n};\n\nconst getBoardGameState = (boardStates) => {\n  const won = boardStates.some(\n    (row) => !!row.length && row.every((s) => s === '🟩'),\n  );\n  if (won) return 'won';\n  const lastRow = boardStates[boardStates.length - 1];\n  const lost = !!lastRow.length && lastRow.every((s) => s !== '🟩');\n  if (lost) return 'lost';\n  return null;\n};\n\n// v = letter values of the row\n// s = submitted state of the row (after user press enter)\nconst blankBoard = () =>\n  Array.from({ length: MAX_STEPS }, () => ({\n    v: Array.from({ length: MAX_LETTERS }, () => ''),\n    s: false,\n  }));\n\nconst getIdiomsKeys = (idiom, prevPassedIdioms, prevKeys, depth = 0) => {\n  let passedIdioms = prevPassedIdioms || new Set();\n  passedIdioms.add(idiom);\n  let keys = prevKeys || new Set();\n  const idiomLetters = idiom.split('');\n  idiomLetters.forEach((letter) => keys.add(letter));\n  let consecutiveFailures = 0;\n  lettersCycle: for (let i = 0; i < games.length; i++) {\n    const letter = idiomLetters[(i + 1) % MAX_LETTERS];\n    const anotherIdiom = games.find(\n      ({ idiom }) => !passedIdioms.has(idiom) && idiom.includes(letter),\n    );\n    if (anotherIdiom) {\n      for (let j = 0; j < anotherIdiom.idiom.length; j++) {\n        keys.add(anotherIdiom.idiom[j]);\n\n        if (keys.size >= MAX_KEYS) {\n          break lettersCycle;\n        }\n      }\n      passedIdioms.add(anotherIdiom.idiom);\n      consecutiveFailures = 0;\n    } else {\n      if (consecutiveFailures >= MAX_LETTERS + 1) {\n        // Too many failures, stop\n        break lettersCycle;\n      }\n      consecutiveFailures += 1;\n    }\n  }\n\n  // Try the next idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const nextIdiom = [...passedIdioms][++depth];\n    if (nextIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        nextIdiom,\n        passedIdioms,\n        keys,\n        depth,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Still not enough keys, choose a random idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const randomIdiom = games[Math.floor(Math.random() * games.length)].idiom;\n    if (randomIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        randomIdiom,\n        passedIdioms,\n        keys,\n        0,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Something very wrong happened\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const gameID = games.find((g) => g.idiom === idiom)?.id;\n    console.error(gameID, {\n      possibleIdioms: passedIdioms.size,\n      keySize: keys.size,\n      consecutiveFailures,\n    });\n  }\n\n  return {\n    passedIdioms,\n    keys,\n  };\n};\n\n// Check if all idioms have enough keys/idioms\n// games.forEach((game) => {\n//   getIdiomsKeys(game.idiom);\n// });\n\nconst ShareIcon = (props) => (\n  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n    <path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"></path>\n  </svg>\n);\n\nconst DownloadIcon = (props) => (\n  <svg viewBox=\"0 0 330 330\" fill=\"currentColor\" {...props}>\n    <title>⬇️</title>\n    <path d=\"m154 256 1 1h2v1h1l1 1h2v1h8v-1h2l1-1h1v-1h2l1-1 70-70a15 15 0 0 0-22-22l-44 45V25a15 15 0 0 0-30 0v184l-44-45a15 15 0 1 0-22 22z\" />\n    <path d=\"M315 160c-8 0-15 7-15 15v115H30V175a15 15 0 0 0-30 0v130c0 8 7 15 15 15h300c8 0 15-7 15-15V175c0-8-7-15-15-15z\" />\n  </svg>\n);\n\nconst PlayIcon = (props) => (\n  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" {...props}>\n    <title>▶️</title>\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\n      clip-rule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst CloseIcon = (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <title>✖️</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    ></path>\n  </svg>\n);\n\nconst startDate = new Date(2022, 0, 27); // 27 January 2022\nconst getTodayGame = () => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const diff = today - startDate;\n  const dayCount = Math.floor(diff / (1000 * 60 * 60 * 24));\n  return games[Math.max(0, dayCount % games.length)];\n};\n\n// Component that shows hours, minutes and seconds counting down to start of next day\nconst Countdown = () => {\n  const { t } = useTranslation();\n  let nextDay = new Date().setHours(0, 0, 0, 0) + 24 * 60 * 60 * 1000;\n  const nextStartDate = new Date(+startDate + 24 * 60 * 60 * 1000);\n  if (nextDay < nextStartDate) {\n    nextDay = nextStartDate;\n  }\n  const [hours, setHours] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [isNow, setIsNow] = useState(false);\n  // update countdown every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const diff = nextDay - new Date();\n      if (diff <= 0) {\n        setIsNow(true);\n        clearInterval(timer);\n        return;\n      }\n      setHours(\n        Math.floor(diff / (1000 * 60 * 60))\n          .toString()\n          .padStart(2, '0'),\n      );\n      setMinutes(\n        Math.floor((diff / (1000 * 60)) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n      setSeconds(\n        Math.floor((diff / 1000) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  if (isNow) {\n    return <a href=\"./\">{t('ui.countdownNow')}</a>;\n  }\n  return (\n    <time class=\"countdown\">\n      {hours}:{minutes}:{seconds}\n    </time>\n  );\n};\n\nconst CodeInput = ({ code, url }) => {\n  const { t } = useTranslation();\n  return (\n    code && (\n      <input\n        readOnly\n        value={code}\n        class=\"idiom-code\"\n        onClick={(e) => {\n          e.target.focus();\n          e.target.select();\n          copy(url || code, () => {\n            alert(t('ui.copiedURL'));\n          });\n        }}\n      />\n    )\n  );\n};\n\nconst Letter = ({ letter, pinyin, state }) => {\n  return (\n    <div\n      class={`letter ${letter ? 'lettered' : ''} ${state ?? ''} ${\n        state ? '🌈' : ''\n      }`}\n    >\n      <ruby>\n        {letter || <span style={{ opacity: 0 }}>一</span>}\n        <rp>(</rp>\n        <rt>{pinyin || py(letter) || <>&nbsp;</>}</rt>\n        <rp>)</rp>\n      </ruby>\n    </div>\n  );\n};\n\nimport confetti from 'canvas-confetti';\nlet confettiRAF;\nconst blastConfetti = () => {\n  const colors = ['#008000', '#FFA500'];\n\n  (function frame() {\n    confetti({\n      particleCount: 2,\n      angle: 60,\n      spread: 80,\n      origin: { x: 0, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    confetti({\n      particleCount: 2,\n      angle: 120,\n      spread: 80,\n      origin: { x: 1, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    confettiRAF = requestAnimationFrame(frame);\n  })();\n};\nconst stopConfetti = () => {\n  cancelAnimationFrame(confettiRAF);\n};\nconst IdiomsDashboard = () => {\n  const { t } = useTranslation();\n  let wonCount = 0;\n  let lostCount = 0;\n  const idioms = games.map((game) => {\n    // Get board from localStorage\n    const boardGame = JSON.parse(LS.getItem(`${KEY_PREFIX}${game.id}`));\n    if (boardGame && boardGame.gameState) {\n      const { board, gameState } = boardGame;\n      if (gameState === 'won') {\n        wonCount++;\n      } else if (gameState === 'lost') {\n        lostCount++;\n      }\n      return (\n        <a\n          href={`/#${game.id}`}\n          class={`board ${gameState}`}\n          title={`${game.id} (${gameState})`}\n        >\n          {gameState === 'won' ? '🟩' : '🟧'}\n        </a>\n      );\n    } else {\n      return (\n        <a href={`/#${game.id}`} class=\"board\" title={`${game.id}`}>\n          ⬜\n        </a>\n      );\n    }\n  });\n\n  useEffect(() => {\n    blastConfetti();\n    return stopConfetti;\n  }, []);\n\n  return (\n    <>\n      <h2>\n        {t('dashboard.heading', {\n          gamesCount: MAX_GAMES_BEFORE_SHOW_DASHBOARD,\n        })}\n      </h2>\n      <p>{t('dashboard.subheading')}</p>\n      <p>\n        <Trans\n          i18nKey=\"dashboard.totalGamesPlayed\"\n          values={{\n            gamesCountOverTotal: `${wonCount + lostCount} / ${games.length}`,\n          }}\n          components={[<b />]}\n        />\n        <br />\n        <Trans\n          i18nKey=\"dashboard.wonLost\"\n          values={{\n            wonCount,\n            lostCount,\n          }}\n          components={[<b />, <b />]}\n        />\n      </p>\n      <div class=\"boards\">{idioms}</div>\n    </>\n  );\n};\n\nconst prefersColorSchemeSupported =\n  'matchMedia' in window &&\n  window.matchMedia('(prefers-color-scheme: dark)').media !== 'not all';\n\nconst ShareImageButton = ({ header, footer, boardStates, id }) => {\n  const { t } = useTranslation();\n  const imageRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const imageOpts = {\n    canvasWidth: 1080,\n    canvasHeight: 1080,\n    quality: 0.5,\n  };\n\n  // Update image when light/dark mode kicks in\n  const [mediaChanged, setMediaChanged] = useState();\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n    const colorSchemeChange = (event) => {\n      setMediaChanged(event.matches);\n    };\n    try {\n      media.addEventListener('change', colorSchemeChange);\n    } catch (e) {\n      media.addListener(colorSchemeChange);\n    }\n    return () => {\n      try {\n        media.removeEventListener('change', colorSchemeChange);\n      } catch (e) {\n        media.removeListener(colorSchemeChange);\n      }\n    };\n  });\n\n  useEffect(() => {\n    toJpeg(imageRef.current, imageOpts)\n      .then((dataURL) => {\n        setImageSrc(dataURL);\n      })\n      .catch((e) => {\n        setImageSrc(null);\n      });\n    return () => setImageSrc(null);\n  }, [boardStates, id, mediaChanged]);\n\n  const fileName = `chengyu-wordle-${id}.jpg`;\n\n  return (\n    <>\n      {!!imageSrc && (\n        <a\n          id=\"share-image-button\"\n          class=\"button\"\n          href={imageSrc}\n          download={fileName}\n          target=\"_blank\"\n        >\n          {t('common.image')} <DownloadIcon width=\"12\" height=\"12\" />\n        </a>\n      )}\n      <div id=\"share-image-container\">\n        <div id=\"share-image\" ref={imageRef}>\n          <p class=\"header\">\n            <b>{header}</b>\n          </p>\n          <div class=\"board\">\n            {boardStates.map((row) => {\n              return (\n                <div>\n                  {row.map((letter) => {\n                    return <span class={`tile ${letter}`} />;\n                  })}\n                </div>\n              );\n            })}\n          </div>\n          <p class=\"footer\">{footer}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport function App() {\n  const { t, i18n } = useTranslation();\n\n  const [showDashboard, setShowDashboard] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showModal, setShowModal] = useState(false); // false | won | lost\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const [colorScheme, setColorScheme] = useState(\n    LS.getItem(`${KEY_PREFIX}colorScheme`) || 'auto',\n  );\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const html = document.querySelector('html');\n    if (colorScheme === 'dark') {\n      html.classList.add('dark-mode');\n      html.classList.remove('light-mode');\n    } else if (colorScheme === 'light') {\n      html.classList.add('light-mode');\n      html.classList.remove('dark-mode');\n    } else {\n      html.classList.remove('dark-mode', 'light-mode');\n    }\n  }, [colorScheme]);\n\n  const [skipFirstTime, setSkipFirstTime] = useState(\n    LS.getItem(`${KEY_PREFIX}skipFirstTime`) || false,\n  );\n\n  const [currentGame, setCurrentGame] = useState(\n    games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n  );\n  useEffect(() => {\n    window.addEventListener('hashchange', () => {\n      setCurrentGame(\n        games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n      );\n      setShowDashboard(false);\n    });\n  }, []);\n\n  const [board, setBoard] = useState(\n    JSON.parse(LS.getItem(`${KEY_PREFIX}${currentGame.id}`))?.board ||\n      blankBoard(),\n  );\n  useEffect(() => {\n    const cachedGame = LS.getItem(`${KEY_PREFIX}${currentGame.id}`);\n    if (cachedGame) {\n      setBoard(JSON.parse(cachedGame).board);\n    } else {\n      setBoard(blankBoard());\n    }\n  }, [currentGame.id]);\n\n  const boardStates = useMemo(() => {\n    return board.map((row, i) => {\n      if (row.s) {\n        return getIdiomStates(currentGame.idiom, row.v);\n      }\n      return [];\n    });\n  }, [board]);\n\n  // Save to localStorage every time board changes\n  useEffect(() => {\n    // Only store in localStorage if board has some values\n    if (board && board.some((row) => row.v.some((v) => v))) {\n      LS.setItem(\n        `${KEY_PREFIX}${currentGame.id}`,\n        JSON.stringify({\n          board,\n          gameState: getBoardGameState(boardStates),\n        }),\n      );\n    }\n  }, [boardStates]);\n\n  const [definition, setDefinition] = useState(null);\n  useEffect(() => {\n    setDefinition(null);\n    fetch(\n      `https://baidu-hanyu-idiom.cheeaun.workers.dev/?wd=${currentGame.idiom}`,\n    )\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.definition) {\n          setDefinition(r.definition);\n        }\n      })\n      .catch(() => {});\n  }, [currentGame.idiom]);\n\n  const currentStep = board?.findIndex((row) => row.s === false) || 0;\n\n  const [currentGameKeys, currentGameKeysPinyin] = useMemo(() => {\n    const { keys } = getIdiomsKeys(currentGame.idiom);\n    const allPossibleIdioms = idioms.filter((idiom) => {\n      // check if idiom contains 4 letters from keys\n      return idiom.split('').every((letter) => keys.has(letter));\n    });\n\n    // Pinyin mappings\n    const keysPinyin = new Map();\n    allPossibleIdioms.forEach((idiom) => {\n      const idiomPinyin = pinyin(idiom, { type: 'array' });\n      idiomPinyin.forEach((pinyin, i) => {\n        if (keysPinyin.has(idiom[i])) {\n          keysPinyin.get(idiom[i]).add(pinyin);\n        } else {\n          keysPinyin.set(idiom[i], new Set([pinyin]));\n        }\n      });\n    });\n\n    // SPOILER inside console.log!\n    const possibleIdioms = allPossibleIdioms\n      .map((idiom) => {\n        return `${idiom} (${py(idiom)})`;\n      })\n      .sort((a, b) => a.localeCompare(b, 'zh'));\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\n        `${possibleIdioms.length} Possible Idioms [${currentGame.id}] (${keys.size} keys):`,\n      );\n      console.log(`${possibleIdioms\n        .map((idiom, i) => `${i + 1}. ${idiom}`)\n        .join('\\n')}\n\n🚨SPOILER🚨 Type 'HINTS' to see all hints. Type 'ANSWER' to see the answer.`);\n      console.groupEnd();\n    }\n    window.ANSWER = `${currentGame.idiom} (${py(currentGame.idiom)})`;\n\n    const sortedKeys = [...keys].sort((a, b) => a.localeCompare(b, 'zh'));\n    return [sortedKeys, keysPinyin];\n  }, [currentGame.idiom]);\n\n  const handleLetter = (letter, overwrite = false) => {\n    if (!board[currentStep]) return;\n    if (gameState) return;\n    setShowError(false);\n\n    const newBoard = [...board];\n    let columnIndex = newBoard[currentStep].v.findIndex((v) => v === '');\n    if (overwrite) {\n      if (columnIndex === -1) {\n        columnIndex = 3;\n      } else {\n        columnIndex--;\n      }\n    }\n    if (columnIndex !== -1) {\n      newBoard[currentStep].v[columnIndex] = letter;\n      setBoard(newBoard);\n    }\n  };\n\n  const correctKeys = new Set();\n  const presentKeys = new Set();\n  const absentKeys = new Set();\n  board.forEach((row, i) => {\n    if (!row.s) return;\n    row.v.forEach((letter, j) => {\n      const state = boardStates[i][j];\n      if (state === '🟩') {\n        correctKeys.add(letter);\n      } else if (state === '🟧') {\n        presentKeys.add(letter);\n      } else if (state === '⬜') {\n        absentKeys.add(letter);\n      }\n    });\n  });\n\n  const handleEnter = () => {\n    if (gameState) return;\n    console.log('handleEnter');\n    setShowError(false);\n\n    const row = board[currentStep];\n    if (!row) return;\n    const currentIdiom = row.v.join('');\n    const valid = idioms.includes(currentIdiom);\n    if (valid) {\n      row.s = true;\n      setBoard([...board]);\n    } else {\n      setTimeout(() => {\n        setShowError(true);\n      }, 10);\n    }\n    console.log({ currentIdiom, valid });\n  };\n\n  const gameState = useMemo(() => {\n    return getBoardGameState(boardStates);\n  }, [boardStates]);\n\n  useEffect(() => {\n    if (gameState === 'won') {\n      setShowModal('won');\n    } else if (gameState === 'lost') {\n      setShowModal('lost');\n    } else {\n      setShowModal(false);\n    }\n  }, [gameState]);\n\n  const handleBackspace = () => {\n    if (gameState) return;\n    const newBoard = [...board];\n    // Get last column with value\n    const row = newBoard[currentStep];\n    if (!row || row.s) return;\n    let columnIndex = -1;\n    for (let i = row.v.length - 1; i >= 0; i--) {\n      if (row.v[i] !== '') {\n        columnIndex = i;\n        break;\n      }\n    }\n    if (columnIndex !== -1) {\n      row.v[columnIndex] = '';\n      setBoard(newBoard);\n    }\n  };\n\n  useEffect(() => {\n    const handleKey = (e) => {\n      if (gameState) return;\n      if (e.metaKey || e.ctrlKey || !e.key) {\n        return;\n      }\n      const key = e.key.toLowerCase();\n      if (key === 'enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        handleEnter();\n      } else if (key === 'backspace') {\n        e.preventDefault();\n        handleBackspace();\n      } else if (/^arrow(left|right)/i.test(key)) {\n        // This will cycle through all letters with same starting pinyin letter\n        const row = board[currentStep];\n        const value = [...row.v].reverse().find((v) => v !== '');\n        if (value) {\n          const pinyinLetter = py(value)[0];\n\n          const possibleLettersSet = new Set();\n          currentGameKeysPinyin.forEach((pinyins, letter) => {\n            pinyins.forEach((pinyin) => {\n              const firstPinyinChar = pinyin[0];\n              if (\n                firstPinyinChar.localeCompare(pinyinLetter, 'en', {\n                  sensitivity: 'base',\n                }) === 0\n              ) {\n                possibleLettersSet.add(letter);\n              }\n            });\n          });\n          const possibleLetters = [...possibleLettersSet];\n\n          if (possibleLetters.length <= 1) return;\n          const letterIndex = possibleLetters.indexOf(value);\n          const nextLetter =\n            key === 'arrowright'\n              ? possibleLetters[(letterIndex + 1) % possibleLetters.length]\n              : possibleLetters[\n                  (letterIndex + possibleLetters.length - 1) %\n                    possibleLetters.length\n                ];\n          if (nextLetter) {\n            handleLetter(nextLetter, true);\n          }\n        }\n      } else if (/[a-z]/i.test(key)) {\n        // Type \"a\" will trigger the first letter pinyin that starts with \"ā\"\n        let breakLoop = false;\n        currentGameKeysPinyin.forEach((pinyins, letter) => {\n          if (breakLoop) return;\n          pinyins.forEach((pinyin) => {\n            if (breakLoop) return;\n            const firstPinyinChar = pinyin[0];\n            if (\n              firstPinyinChar.localeCompare(key, 'en', {\n                sensitivity: 'base',\n              }) === 0\n            ) {\n              e.preventDefault();\n              breakLoop = true;\n              handleLetter(letter);\n            }\n          });\n        });\n      }\n    };\n    document.addEventListener('keydown', handleKey);\n    return () => {\n      document.removeEventListener('keydown', handleKey);\n    };\n  }, [currentGameKeys, currentGameKeysPinyin, board, currentStep, gameState]);\n\n  const permalink = location.origin + location.pathname + '#' + currentGame.id;\n  const shortPermalink =\n    location.host + location.pathname + '#' + currentGame.id;\n  const emojiResults = boardStates\n    .map((row) => row.join(''))\n    .join('\\n')\n    .trim();\n  const attempts = gameState === 'won' ? emojiResults.split('\\n').length : 'X';\n  const attemptsText = `${attempts}/${MAX_STEPS}`;\n  const shareText = `${t('app.title')} [${currentGame.id}]${\n    HARD_MODE ? ' 🔥' : ''\n  } ${attemptsText}\\n\\n${emojiResults}`;\n  const shareTextWithLink = `${shareText}\\n\\n${shortPermalink}`;\n\n  const hints = useMemo(() => {\n    const hints = [];\n    const letters = currentGame.idiom.split('');\n\n    // 1. Absent letters hints\n    const absentHints = currentGameKeys\n      .filter((k) => {\n        return !letters.includes(k) && !absentKeys.has(k);\n      })\n      .slice(0, -1) // Don't reveal at least one letter\n      .slice(0, 3) // But still max 3 letters\n      .map((letter) => {\n        return t('hints.absentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...absentHints);\n\n    // 2. Definition hints\n    if (\n      definition?.zh &&\n      letters.filter((c) => definition.zh.includes(c)).length <= 2\n      // Only show hint if definition contains 2 or less of the characters in the idiom\n      // Else, the definition basically revealed the answer\n    ) {\n      hints.push(`ℹ️ ${definition.zh}`);\n    }\n    if (definition?.en) hints.push(`ℹ️ ${definition.en}`);\n\n    // 3. Letter hints\n    const letterHints = letters\n      .filter((c) => !correctKeys.has(c) && !presentKeys.has(c))\n      .slice(0, -1) // Don't reveal at least one letter\n      .map((letter) => {\n        return t('hints.presentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...letterHints);\n\n    // 4. Pinyin hints\n    const pinyinHint = py(currentGame.idiom, {\n      pattern: 'first',\n      type: 'array',\n    }).join('');\n    hints.push(t('hints.abbreviatedPinyin', { pinyinHint }));\n\n    window.HINTS = hints;\n\n    return hints;\n  }, [currentGame.idiom, definition]);\n  const hintIndex = useRef(0);\n  useEffect(() => {\n    hintIndex.current = 0;\n  }, [currentGame.idiom]);\n  const showHint = () => {\n    if (gameState) return;\n    const hint = hints[hintIndex.current];\n    hintIndex.current = (hintIndex.current + 1) % hints.length;\n    alert(hint);\n  };\n\n  // Limit number of toasts\n  // https://github.com/timolins/react-hot-toast/issues/31#issuecomment-803359550\n  const { toasts } = useToasterStore();\n  const TOAST_LIMIT = 1;\n  useEffect(() => {\n    toasts\n      .filter((t, i) => t.visible && i >= TOAST_LIMIT)\n      .forEach((t) => toast.dismiss(t.id));\n  }, [toasts]);\n\n  const gamesPlayedCount = useMemo(() => {\n    // Only count games played if info modal is open\n    if (!showInfoModal) return;\n    try {\n      const keys = Object.keys(localStorage).filter((k) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && games.find((g) => g.id === gameID);\n      });\n      return keys.length;\n    } catch (e) {}\n  }, [showInfoModal]);\n\n  useEffect(() => {\n    if (!gamesPlayedCount || gamesPlayedCount < 10) return;\n    const precision = gamesPlayedCount < 100 ? 1 : 2;\n    const count = +gamesPlayedCount.toPrecision(precision);\n    fireEvent('Games Played', {\n      props: {\n        count,\n      },\n    });\n  }, [gamesPlayedCount]);\n\n  const GamesCount = useCallback(\n    () => (\n      <b>\n        {gamesPlayedCount}\n        {gamesPlayedCount >= MAX_GAMES_BEFORE_SHOW_DASHBOARD && (\n          <>\n            {' '}\n            /{' '}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                setShowInfoModal(false);\n                setShowDashboard(true);\n              }}\n            >\n              {games.length}\n            </a>\n          </>\n        )}\n      </b>\n    ),\n    [gamesPlayedCount],\n  );\n\n  return (\n    <>\n      <header>\n        <div class=\"inner\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowInfoModal(true);\n            }}\n          >\n            <svg\n              width=\"16\"\n              height=\"16\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <title>ℹ️</title>\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          </button>\n          <h1>{t('app.title')}</h1>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowModal(gameState || 'play');\n            }}\n          >\n            {gameState ? (\n              t('common.play')\n            ) : (\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 290 290\">\n                <title>...</title>\n                <path\n                  fill=\"currentColor\"\n                  d=\"M255 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM35 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM145 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70z\"\n                />\n              </svg>\n            )}\n          </button>\n        </div>\n      </header>\n      <div id=\"board\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        {board.map((row, index) => {\n          const pinyins = pinyin(row.v.join(''), { type: 'array' });\n          return (\n            <div\n              className={`row ${\n                currentStep === index && showError ? 'error' : ''\n              } ${currentStep === index ? 'current' : ''}`}\n              key={index}\n            >\n              {row.v.map((letter, i) => (\n                <Letter\n                  key={i}\n                  letter={letter}\n                  pinyin={pinyins[i]}\n                  state={boardStates[index][i]}\n                />\n              ))}\n            </div>\n          );\n        })}\n      </div>\n      <div id=\"keyboard\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        <div class=\"inner\">\n          <div class=\"keys\">\n            {currentGameKeys.map((key, i) => (\n              <button\n                class={`${correctKeys.has(key) ? '🟩' : ''} ${\n                  presentKeys.has(key) ? '🟧' : ''\n                } ${absentKeys.has(key) ? '⬜' : ''}`}\n                type=\"button\"\n                tabIndex={-1}\n                onClick={() => {\n                  handleLetter(key);\n                }}\n              >\n                <ruby>\n                  {key}\n                  <rp>(</rp>\n                  <rt>\n                    {currentGameKeysPinyin.has(key)\n                      ? [...currentGameKeysPinyin.get(key)]\n                          .sort((a, b) => a.localeCompare(b, 'zh'))\n                          .join(' ⸱ ')\n                      : py(key)}\n                  </rt>\n                  <rp>)</rp>\n                </ruby>\n              </button>\n            ))}\n          </div>\n          <div class=\"row\">\n            <button type=\"button\" onClick={handleEnter} tabIndex={-1}>\n              {t('common.enter')}\n            </button>\n            {HARD_MODE ? (\n              <b class=\"hard\">{t('ui.hardMode')}</b>\n            ) : (\n              <button type=\"button\" class=\"stuck\" onClick={showHint}>\n                {t('ui.hint')}\n              </button>\n            )}\n            <button type=\"button\" onClick={handleBackspace} tabIndex={-1}>\n              <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"modal\"\n        class={showModal ? 'appear' : ''}\n        onClick={(e) => {\n          if (e.target === e.currentTarget) setShowModal(null);\n        }}\n      >\n        <CloseIcon\n          height=\"24\"\n          width=\"24\"\n          class=\"close\"\n          onClick={() => {\n            setShowModal(null);\n          }}\n        />\n        <div class=\"content\">\n          <h2>\n            {showModal === 'won'\n              ? '🎉🎉🎉'\n              : showModal === 'lost'\n              ? '😭😭😭'\n              : '🐯🐯🐯'}\n          </h2>\n          {showModal === 'play' && (\n            <p>\n              {t('ui.idiomId')}{' '}\n              <CodeInput code={currentGame.id} url={permalink} />\n            </p>\n          )}\n          {/(won|lost)/i.test(showModal) && (\n            <>\n              <p>\n                <b class=\"answer\">\n                  <ruby>\n                    {currentGame.idiom}\n                    <rp>(</rp>\n                    <rt>{py(currentGame.idiom)}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </b>\n                <div class=\"definition\">\n                  {definition?.zh\n                    ? definition.zh.split('').map((c) => {\n                        const p = py(c);\n                        if (p === c) return c;\n                        return (\n                          <ruby>\n                            {c}\n                            <rp>(</rp>\n                            <rt>{py(c)}</rt>\n                            <rp>)</rp>\n                          </ruby>\n                        );\n                      })\n                    : ''}\n                  {definition?.zh && definition?.en && <br />}\n                  {definition?.en}\n                </div>\n                <small>\n                  <a\n                    href={`https://hanyu.baidu.com/s?wd=${currentGame.idiom}&from=zici`}\n                    target=\"_blank\"\n                  >\n                    📖 {t('glossary.baidu')}\n                  </a>\n                  &nbsp; &nbsp;\n                  <a\n                    href={`https://www.zdic.net/hans/${currentGame.idiom}`}\n                    target=\"_blank\"\n                  >\n                    📖 {t('glossary.zdic')}\n                  </a>\n                </small>\n              </p>\n              <div class=\"results\">{shareTextWithLink}</div>\n              <button\n                id=\"share\"\n                onClick={async () => {\n                  try {\n                    if (\n                      // Edge/ or Edg/\n                      /edge?\\//i.test(navigator.userAgent) ||\n                      // Windows\n                      /windows/.test(navigator.userAgent)\n                    ) {\n                      throw new Error('Web Share API not working well here');\n                    }\n                    copy(shareTextWithLink);\n                    await navigator.share({ text: shareTextWithLink });\n                  } catch (e) {\n                    copy(shareTextWithLink, () => {\n                      alert(t('ui.copiedResults'));\n                    });\n                  }\n                }}\n              >\n                {t('common.share')} <ShareIcon width=\"16\" height=\"16\" />\n              </button>\n              &nbsp;\n              <ShareImageButton\n                id={currentGame.id}\n                header={t('app.title')}\n                footer={`[${currentGame.id}]${\n                  HARD_MODE ? ' 🔥' : ''\n                } ${attemptsText}`}\n                boardStates={boardStates}\n              />\n              &nbsp;\n              <a\n                class=\"button facebook\"\n                href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n                  permalink,\n                )}&hashtag=${encodeURIComponent('#chengyuwordle')}`}\n                target=\"_blank\"\n                onClick={() => {\n                  copy(shareTextWithLink);\n                }}\n              >\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 96.1 96.1\">\n                  <title>Facebook</title>\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M72 0H59.7c-14 0-23 9.3-23 23.7v10.9H24c-1 0-2 .8-2 2v15.7c0 1.1 1 2 2 2h12.6v39.9c0 1 .8 2 2 2h16.3c1 0 2-1 2-2v-40h14.6c1 0 2-.8 2-1.9V36.5a2 2 0 0 0-2-2H56.8v-9.2c0-4.4 1.1-6.7 6.9-6.7H72c1 0 2-.9 2-2V2c0-1.1-1-2-2-2z\"\n                  />\n                </svg>\n              </a>\n              &nbsp;\n              <a\n                class=\"button tweet\"\n                href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n                  shareTextWithLink,\n                )}`}\n                target=\"_blank\"\n              >\n                <svg height=\"16\" width=\"16\" viewBox=\"0 0 24 24\">\n                  <title>{t('common.tweet')}</title>\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"\n                  />\n                </svg>\n              </a>\n              &nbsp;\n              <CodeInput code={currentGame.id} url={permalink} />\n            </>\n          )}\n          <div class=\"footer\">\n            {/won|lost/i.test(gameState) &&\n              getTodayGame().id === currentGame.id && (\n                <p>\n                  <big>\n                    <Trans\n                      i18nKey=\"ui.nextIdiom\"\n                      components={[<Countdown />]}\n                    />\n                  </big>\n                </p>\n              )}\n            <div>\n              {getTodayGame().id !== currentGame.id && (\n                <>\n                  <a href=\"./\" class=\"button strong\">\n                    <PlayIcon width={20} height={20} /> {t('ui.playTodayGame')}\n                  </a>\n                  <br />\n                </>\n              )}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Random');\n                  const yes = confirm(t('ui.confirmRandom'));\n                  if (yes) {\n                    const rand = Math.round(Math.random() * (games.length - 1));\n                    const randGame = games[rand];\n                    location.hash = `#${randGame.id}`;\n                    setShowModal(null);\n                    fireEvent('Game load: Random');\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.random')}\n              </button>{' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Idiom ID');\n                  // Ask user for idiom ID, load game if ID is valid\n                  let id = prompt(t('ui.promptIdiom'));\n                  try {\n                    id = new URL(id).hash.slice(1);\n                  } catch (e) {}\n                  if (id) {\n                    const game = games.find((g) => g.id === id);\n                    if (game) {\n                      location.hash = `#${game.id}`;\n                      setShowModal(null);\n                      fireEvent('Game load: Idiom ID');\n                    } else {\n                      alert('Invalid idiom ID');\n                    }\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.choose')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"info-modal\"\n        class={showInfoModal || !skipFirstTime ? 'appear' : ''}\n      >\n        {skipFirstTime && (\n          <CloseIcon\n            height=\"32\"\n            width=\"32\"\n            class=\"close\"\n            onClick={() => {\n              setShowInfoModal(false);\n            }}\n          />\n        )}\n        <div class=\"content\">\n          {prefersColorSchemeSupported && (\n            <p class=\"color-scheme-selector\">\n              <button\n                type=\"button\"\n                class={colorScheme === 'dark' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'dark');\n                  setColorScheme('dark');\n                }}\n              >\n                🌑\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'auto' ? 'active' : ''}\n                onClick={() => {\n                  LS.removeItem(`${KEY_PREFIX}colorScheme`);\n                  setColorScheme('auto');\n                }}\n              >\n                🌓\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'light' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'light');\n                  setColorScheme('light');\n                }}\n              >\n                🌕\n              </button>\n            </p>\n          )}{' '}\n          <p class=\"locale-selector\">\n            🌐{' '}\n            <a\n              href=\"./?lng=en\"\n              hreflang=\"en\"\n              rel={i18n.resolvedLanguage === 'en' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'en' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('en');\n              }}\n            >\n              English\n            </a>{' '}\n            &#8901;{' '}\n            <a\n              href=\"./?lng=zh-CN\"\n              hreflang=\"zh-CN\"\n              rel={i18n.resolvedLanguage === 'zh' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'zh' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('zh-CN');\n              }}\n            >\n              中文\n            </a>\n          </p>\n          {skipFirstTime && gamesPlayedCount > 0 && (\n            <div id=\"stats\">\n              <p>\n                <Trans i18nKey=\"ui.gamesPlayed\" components={[<GamesCount />]} />\n              </p>\n              <div id=\"config\">\n                <p>\n                  <label>\n                    {t('ui.hardMode')}\n                    <Switch\n                      defaultChecked={HARD_MODE}\n                      onChange={(checked) => {\n                        LS.setItem(\n                          `${KEY_PREFIX}hardMode`,\n                          checked ? 'true' : 'false',\n                        );\n                        setTimeout(() => {\n                          location.reload();\n                        }, 310); // Wait for Switch to animate\n                      }}\n                    />\n                  </label>\n                </p>\n              </div>\n            </div>\n          )}\n          <h2>{t('howToPlay.heading')}</h2>\n          <p>{t('howToPlay.how1')}</p>\n          <p>{t('howToPlay.how2')}</p>\n          <p>{t('howToPlay.how3')}</p>\n          <div class=\"example-idiom\">\n            {'九牛一毛'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 0 ? '🟩' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotCorrect')}</p>\n          <div class=\"example-idiom\">\n            {'理所当然'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 1 ? '🟧' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotPresent')}</p>\n          <div class=\"example-idiom\">\n            {'爱不释手'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 2 ? '⬜' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotAbsent')}</p>\n          <p>{t('howToPlay.how4')}</p>\n          {skipFirstTime ? (\n            <>\n              <h2>{t('about.heading')}</h2>\n              <p>\n                <Trans\n                  i18nKey=\"about.about1\"\n                  components={[\n                    <a\n                      href=\"https://github.com/cheeaun/chengyu-wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://cheeaun.com/projects/\" target=\"_blank\" />,\n                    <a\n                      href=\"https://www.nytimes.com/games/wordle/\"\n                      target=\"_blank\"\n                    />,\n                  ]}\n                />\n              </p>\n              <h2>{t('feedback.heading')}</h2>\n              <ul>\n                <li>\n                  <a href=\"https://t.me/+ykuhfiImLd1kNjk1\" target=\"_blank\">\n                    {t('feedback.telegramGroup')}\n                  </a>\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubDiscussions\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/discussions\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubIssues\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/issues\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <a href=\"https://twitter.com/cheeaun\" target=\"_blank\">\n                    {t('feedback.twitter')}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://t.me/cheeaun\" target=\"_blank\">\n                    {t('feedback.telegram')}\n                  </a>\n                </li>\n              </ul>\n              <details id=\"debugging-container\">\n                <summary>\n                  {t('debugging.heading')} ({__COMMIT_HASH__})\n                </summary>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmResetGame'))) {\n                      LS.removeItem(KEY_PREFIX + currentGame.id);\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.resetGame')}\n                </button>\n                &nbsp;\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmClearDB'))) {\n                      clearGames();\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.clearDB')}\n                </button>\n              </details>\n            </>\n          ) : (\n            <p>\n              <button\n                type=\"button\"\n                class=\"large\"\n                onClick={() => {\n                  setShowInfoModal(false);\n                  LS.setItem(KEY_PREFIX + 'skipFirstTime', 1);\n                  setSkipFirstTime(true);\n                }}\n              >\n                <PlayIcon width=\"20\" height=\"20\" /> {t('ui.startPlay')}\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n      {showDashboard && (\n        <div id=\"dashboard-modal\">\n          <CloseIcon\n            height=\"24\"\n            width=\"24\"\n            class=\"close\"\n            onClick={() => {\n              setShowDashboard(false);\n            }}\n          />\n          <IdiomsDashboard />\n        </div>\n      )}\n      <Toaster\n        containerStyle={{\n          top: '3.5em',\n        }}\n        toastOptions={{\n          className: 'toast',\n          style: {\n            pointerEvents: 'none',\n          },\n        }}\n      />\n    </>\n  );\n}\n","import '@fontsource/nunito/400.css';\nimport '@fontsource/nunito/700.css';\nimport 'rc-switch/assets/index.css';\nimport './index.css';\n\nimport { render } from 'preact';\nimport { App } from './app';\n\nimport en from '../i18n/en.json';\nimport zhCN from '../i18n/zh-CN.json';\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n      zh: {\n        translation: zhCN,\n      },\n    },\n    fallbackLng: 'en',\n    debug: /localhost/i.test(location.hostname),\n    detection: {\n      // localStorage is default\n      lookupLocalStorage: 'locale',\n      lookupCookie: 'locale',\n    },\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n  })\n  .then((t) => {\n    const updateLocale = () => {\n      document.documentElement.lang = i18n.resolvedLanguage;\n      document.title = document.querySelector(\n        'meta[property=\"og:title\"]',\n      ).content = t('app.title');\n      document.querySelector('meta[name=\"description\"]').content =\n        document.querySelector('meta[property=\"og:description\"]').content =\n          t('app.description');\n    };\n    i18n.on('languageChanged', updateLocale);\n    updateLocale();\n  });\n\nrender(<App />, document.getElementById('app'));\n"],"names":["getIdiomStates","hiddenIdiom","testIdiom","letters1","split","letters2","lettersLength","length","states","Array","from","Error","correctLetterIndices","i","l1","l2","push","presentLetterIndices","l1Index","findIndex","l","index","includes","jsxRuntime.jsx","jsxRuntime.jsxs","jsxRuntime.Fragment","py","pinyin","window","alert","text","toast","copy","fn","navigator","clipboard","writeText","then","catch","e","LS","getItem","key","localStorage","setItem","value","removeItem","fireEvent","props","plausible","idioms","idiomsTxt","games","gameIdioms","slice","map","row","id","idiom","KEY_PREFIX","HARD_MODE","JSON","parse","MAX_GAMES_BEFORE_SHOW_DASHBOARD","MAX_LETTERS","MAX_KEYS","MAX_STEPS","MIN_IDIOMS","clearGames","startsWith","allGames","Map","game","set","replace","getBoardGameState","boardStates","some","every","s","lastRow","blankBoard","v","getIdiomsKeys","prevPassedIdioms","prevKeys","depth","passedIdioms","Set","add","keys","idiomLetters","forEach","letter","consecutiveFailures","anotherIdiom","find","has","j","size","nextIdiom","_passedIdioms","_keys","randomIdiom","Math","floor","random","gameID","g","error","possibleIdioms","keySize","ShareIcon","_jsx","DownloadIcon","_jsxs","PlayIcon","CloseIcon","startDate","Date","getTodayGame","diff","today","setHours","dayCount","max","Countdown","t","useTranslation","nextDay","nextStartDate","hours","useState","minutes","setMinutes","seconds","setSeconds","isNow","setIsNow","timer","setInterval","toString","padStart","clearInterval","CodeInput","code","url","target","focus","select","Letter","state","opacity","confettiRAF","blastConfetti","colors","particleCount","angle","spread","origin","x","y","shapes","disableForReducedMotion","requestAnimationFrame","frame","stopConfetti","IdiomsDashboard","wonCount","lostCount","boardGame","gameState","board","gamesCount","gamesCountOverTotal","prefersColorSchemeSupported","matchMedia","media","ShareImageButton","header","footer","imageRef","useRef","imageSrc","setImageSrc","imageOpts","canvasWidth","canvasHeight","quality","mediaChanged","setMediaChanged","colorSchemeChange","event","matches","addEventListener","addListener","removeEventListener","removeListener","current","dataURL","fileName","i18n","showDashboard","setShowDashboard","showError","setShowError","showModal","setShowModal","showInfoModal","setShowInfoModal","colorScheme","setColorScheme","html","document","querySelector","classList","remove","skipFirstTime","setSkipFirstTime","currentGame","setCurrentGame","location","hash","setBoard","cachedGame","useMemo","stringify","definition","setDefinition","r","json","currentStep","currentGameKeys","currentGameKeysPinyin","allPossibleIdioms","filter","keysPinyin","type","get","sort","a","b","localeCompare","console","groupCollapsed","log","join","groupEnd","ANSWER","handleLetter","overwrite","newBoard","columnIndex","correctKeys","presentKeys","absentKeys","handleEnter","currentIdiom","valid","handleBackspace","handleKey","metaKey","ctrlKey","toLowerCase","preventDefault","stopPropagation","test","reverse","pinyinLetter","possibleLettersSet","pinyins","firstPinyinChar","sensitivity","possibleLetters","letterIndex","indexOf","nextLetter","breakLoop","permalink","pathname","shortPermalink","host","emojiResults","trim","attemptsText","shareTextWithLink","hints","letters","absentHints","k","zh","c","en","letterHints","pinyinHint","pattern","HINTS","hintIndex","showHint","hint","toasts","useToasterStore","TOAST_LIMIT","visible","dismiss","gamesPlayedCount","Object","isPrefixed","precision","count","toPrecision","GamesCount","useCallback","currentTarget","p","userAgent","share","encodeURIComponent","confirm","rand","round","randGame","prompt","URL","resolvedLanguage","undefined","changeLanguage","checked","reload","__COMMIT_HASH__","top","className","style","pointerEvents","use","LanguageDetector","initReactI18next","init","resources","translation","zhCN","fallbackLng","debug","hostname","detection","lookupLocalStorage","lookupCookie","interpolation","escapeValue","updateLocale","documentElement","lang","title","content","on","render","getElementById"],"mappings":"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"}