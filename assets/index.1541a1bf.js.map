{"version":3,"file":"index.1541a1bf.js","sources":["../../vite/modulepreload-polyfill","../../preact/jsx-runtime","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import * as jsxRuntime from \"/home/runner/work/chengyu-wordle/chengyu-wordle/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import { useState, useEffect, useMemo, useRef } from 'preact/hooks';\nimport pinyin from 'pinyin';\nconst py = (str) =>\n  pinyin(str, { segment: true, group: true }).flat().join(' ').trim();\nimport { useTranslation, Trans } from 'react-i18next';\nimport toast, { Toaster, useToasterStore } from 'react-hot-toast';\nconst alert = (text) => toast(text);\n\nimport { toClipboard } from 'copee';\nconst copy = (text, fn = () => {}) => {\n  if (navigator.clipboard?.writeText) {\n    navigator.clipboard\n      .writeText(text)\n      .then(fn)\n      .catch((e) => {});\n  } else {\n    toClipboard(text);\n    fn();\n  }\n};\n\n// Always need to wrap localStorage in a try/catch block because\n// it can throw an exception in some browsers (e.g. Safari)\nconst LS = {\n  getItem: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n  setItem: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      return null;\n    }\n  },\n  removeItem: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n};\n\nconst fireEvent = (...props) => {\n  if (window.plausible) {\n    plausible(...props);\n  }\n};\n\n// Data\nimport idiomsTxt from '../game-data/all-idioms.txt?raw';\nconst idioms = idiomsTxt.split('\\n');\nimport gameIdioms from '../game-data/game-idioms.csv';\nconst games = gameIdioms.slice(1).map((row) => ({\n  id: row[0],\n  idiom: row[1],\n}));\n\nconst MAX_LETTERS = 4;\nconst MAX_KEYS = 20;\nconst MAX_STEPS = 6;\nconst MIN_IDIOMS = 6;\nconst KEY_PREFIX = 'cywd-';\n\nwindow.clearGames = () => {\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      localStorage.removeItem(key);\n    }\n  }\n};\n\nwindow.allGames = () => {\n  const allGames = new Map();\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      const game = JSON.parse(localStorage.getItem(key));\n      allGames.set(key.replace(KEY_PREFIX, ''), game);\n    }\n  }\n  return allGames;\n};\n\nconst getIdiomStates = (hiddenIdiom, testIdiom) => {\n  const letters1 =\n    typeof testIdiom === 'string' ? testIdiom.split('') : testIdiom;\n  const letters2 =\n    typeof hiddenIdiom === 'string' ? hiddenIdiom.split('') : hiddenIdiom;\n  const lettersLength = letters1.length;\n  const states = Array.from({ length: lettersLength }, () => '‚¨ú');\n  if (lettersLength !== letters2.length) {\n    throw new Error('idioms must have the same length');\n  }\n  const correctLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 === l2) {\n      states[i] = 'üü©';\n      correctLetterIndices.push(i);\n    }\n  }\n  const presentLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 !== l2) {\n      const l1Index = letters2.indexOf(l1);\n      if (\n        l1Index !== -1 &&\n        !correctLetterIndices.includes(l1Index) &&\n        !presentLetterIndices.includes(l1Index)\n      ) {\n        states[i] = 'üüß';\n        presentLetterIndices.push(l1Index);\n      }\n    }\n  }\n  return states;\n};\n\nwindow.getIdiomStates = getIdiomStates;\n\nconst getBoardGameState = (boardStates) => {\n  const won = boardStates.some(\n    (row) => !!row.length && row.every((s) => s === 'üü©'),\n  );\n  if (won) return 'won';\n  const lastRow = boardStates[boardStates.length - 1];\n  const lost = !!lastRow.length && lastRow.every((s) => s !== 'üü©');\n  if (lost) return 'lost';\n  return null;\n};\n\n// v = letter values of the row\n// s = submitted state of the row (after user press enter)\nconst blankBoard = () =>\n  Array.from({ length: MAX_STEPS }, () => ({\n    v: Array.from({ length: MAX_LETTERS }, () => ''),\n    s: false,\n  }));\n\nconst getIdiomsKeys = (idiom, prevPassedIdioms, prevKeys, depth = 0) => {\n  let passedIdioms = prevPassedIdioms || new Set();\n  passedIdioms.add(idiom);\n  let keys = prevKeys || new Set();\n  const idiomLetters = idiom.split('');\n  idiomLetters.forEach((letter) => keys.add(letter));\n  let consecutiveFailures = 0;\n  lettersCycle: for (let i = 0; i < games.length; i++) {\n    const letter = idiomLetters[(i + 1) % MAX_LETTERS];\n    const anotherIdiom = games.find(\n      ({ idiom }) => !passedIdioms.has(idiom) && idiom.includes(letter),\n    );\n    if (anotherIdiom) {\n      for (let j = 0; j < anotherIdiom.idiom.length; j++) {\n        keys.add(anotherIdiom.idiom[j]);\n\n        if (keys.size >= MAX_KEYS) {\n          break lettersCycle;\n        }\n      }\n      passedIdioms.add(anotherIdiom.idiom);\n      consecutiveFailures = 0;\n    } else {\n      if (consecutiveFailures >= MAX_LETTERS + 1) {\n        // Too many failures, stop\n        break lettersCycle;\n      }\n      consecutiveFailures += 1;\n    }\n  }\n\n  // Try the next idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const nextIdiom = [...passedIdioms][++depth];\n    if (nextIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        nextIdiom,\n        passedIdioms,\n        keys,\n        depth,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Still not enough keys, choose a random idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const randomIdiom = games[Math.floor(Math.random() * games.length)].idiom;\n    if (randomIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        randomIdiom,\n        passedIdioms,\n        keys,\n        0,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Something very wrong happened\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const gameID = games.find((g) => g.idiom === idiom)?.id;\n    console.error(gameID, {\n      possibleIdioms: passedIdioms.size,\n      keySize: keys.size,\n      consecutiveFailures,\n    });\n  }\n\n  return {\n    passedIdioms,\n    keys,\n  };\n};\n\n// Check if all idioms have enough keys/idioms\n// games.forEach((game) => {\n//   getIdiomsKeys(game.idiom);\n// });\n\nconst PlayIcon = (props) => (\n  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" {...props}>\n    <title>‚ñ∂Ô∏è</title>\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\n      clip-rule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst CloseIcon = (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <title>‚úñÔ∏è</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    ></path>\n  </svg>\n);\n\nconst startDate = new Date(2022, 0, 27); // 27 January 2022\nconst getTodayGame = () => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const diff = today - startDate;\n  const dayCount = Math.floor(diff / (1000 * 60 * 60 * 24));\n  return games[Math.max(0, dayCount % games.length)];\n};\n\n// Component that shows hours, minutes and seconds counting down to start of next day\nconst Countdown = () => {\n  const { t } = useTranslation();\n  let nextDay = new Date().setHours(0, 0, 0, 0) + 24 * 60 * 60 * 1000;\n  const nextStartDate = new Date(+startDate + 24 * 60 * 60 * 1000);\n  if (nextDay < nextStartDate) {\n    nextDay = nextStartDate;\n  }\n  const [hours, setHours] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [isNow, setIsNow] = useState(false);\n  // update countdown every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const diff = nextDay - new Date();\n      if (diff <= 0) {\n        setIsNow(true);\n        clearInterval(timer);\n        return;\n      }\n      setHours(\n        Math.floor(diff / (1000 * 60 * 60))\n          .toString()\n          .padStart(2, '0'),\n      );\n      setMinutes(\n        Math.floor((diff / (1000 * 60)) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n      setSeconds(\n        Math.floor((diff / 1000) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  if (isNow) {\n    return <a href=\"./\">{t('ui.countdownNow')}</a>;\n  }\n  return (\n    <time class=\"countdown\">\n      {hours}:{minutes}:{seconds}\n    </time>\n  );\n};\n\nconst CodeInput = ({ code, url }) => {\n  const { t } = useTranslation();\n  return (\n    code && (\n      <input\n        readOnly\n        value={code}\n        class=\"idiom-code\"\n        onClick={(e) => {\n          e.target.focus();\n          e.target.select();\n          copy(url || code, () => {\n            alert(t('ui.copiedURL'));\n          });\n        }}\n      />\n    )\n  );\n};\n\nconst Letter = ({ letter, state }) => {\n  return (\n    <div\n      class={`letter ${letter ? 'lettered' : ''} ${state ?? ''} ${\n        state ? 'üåà' : ''\n      }`}\n    >\n      <ruby>\n        {letter || <span style={{ opacity: 0 }}>‰∏Ä</span>}\n        <rp>(</rp>\n        <rt>{py(letter) || <>&nbsp;</>}</rt>\n        <rp>)</rp>\n      </ruby>\n    </div>\n  );\n};\n\nconst prefersColorSchemeSupported =\n  'matchMedia' in window &&\n  window.matchMedia('(prefers-color-scheme: dark)').media !== 'not all';\n\nexport function App() {\n  const { t, i18n } = useTranslation();\n\n  const [colorScheme, setColorScheme] = useState(\n    LS.getItem(`${KEY_PREFIX}colorScheme`) || 'auto',\n  );\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const html = document.querySelector('html');\n    if (colorScheme === 'dark') {\n      html.classList.add('dark-mode');\n      html.classList.remove('light-mode');\n    } else if (colorScheme === 'light') {\n      html.classList.add('light-mode');\n      html.classList.remove('dark-mode');\n    } else {\n      html.classList.remove('dark-mode', 'light-mode');\n    }\n  }, [colorScheme]);\n\n  const [skipFirstTime, setSkipFirstTime] = useState(\n    LS.getItem(`${KEY_PREFIX}skipFirstTime`) || false,\n  );\n\n  const [currentGame, setCurrentGame] = useState(\n    games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n  );\n  useEffect(() => {\n    window.addEventListener('hashchange', () => {\n      setCurrentGame(\n        games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n      );\n    });\n  }, []);\n\n  const [board, setBoard] = useState(\n    JSON.parse(LS.getItem(`${KEY_PREFIX}${currentGame.id}`))?.board ||\n      blankBoard(),\n  );\n  useEffect(() => {\n    const cachedGame = LS.getItem(`${KEY_PREFIX}${currentGame.id}`);\n    if (cachedGame) {\n      setBoard(JSON.parse(cachedGame).board);\n    } else {\n      setBoard(blankBoard());\n    }\n  }, [currentGame.id]);\n\n  const boardStates = useMemo(() => {\n    return board.map((row, i) => {\n      if (row.s) {\n        return getIdiomStates(currentGame.idiom, row.v);\n      }\n      return [];\n    });\n  }, [board]);\n\n  // Save to localStorage every time board changes\n  useEffect(() => {\n    // Only store in localStorage if board has some values\n    if (board && board.some((row) => row.v.some((v) => v))) {\n      LS.setItem(\n        `${KEY_PREFIX}${currentGame.id}`,\n        JSON.stringify({\n          board,\n          gameState: getBoardGameState(boardStates),\n        }),\n      );\n    }\n  }, [boardStates]);\n\n  const [definition, setDefinition] = useState(null);\n  useEffect(() => {\n    setDefinition(null);\n    fetch(\n      `https://baidu-hanyu-idiom.cheeaun.workers.dev/?wd=${currentGame.idiom}`,\n    )\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.definition) {\n          setDefinition(r.definition);\n        }\n      })\n      .catch(() => {});\n  }, [currentGame.idiom]);\n\n  const currentStep = board?.findIndex((row) => row.s === false) || 0;\n\n  // Set current step to first empty item in board\n  const [showError, setShowError] = useState(false);\n  const [showModal, setShowModal] = useState(false); // false | won | lost\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const currentGameKeys = useMemo(() => {\n    const { keys } = getIdiomsKeys(currentGame.idiom);\n\n    // SPOILER inside console.log!\n    const allPossibleIdioms = idioms.filter((idiom) => {\n      // check if idiom contains 4 letters from keys\n      return idiom.split('').every((letter) => keys.has(letter));\n    });\n    const possibleIdioms = allPossibleIdioms\n      .map((idiom) => {\n        return `${idiom} (${py(idiom)})`;\n      })\n      .sort((a, b) => a.localeCompare(b, 'zh'));\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\n        `${possibleIdioms.length} Possible Idioms [${currentGame.id}] (${keys.size} keys):`,\n      );\n      console.log(`${possibleIdioms\n        .map((idiom, i) => `${i + 1}. ${idiom}`)\n        .join('\\n')}\n\nüö®SPOILERüö® Type 'ANSWER' to see the answer.`);\n      console.groupEnd();\n    }\n    window.ANSWER = `${currentGame.idiom} (${py(currentGame.idiom)})`;\n\n    return [...keys].sort((a, b) => a.localeCompare(b, 'zh'));\n  }, [currentGame.idiom]);\n\n  const handleLetter = (letter, overwrite = false) => {\n    if (!board[currentStep]) return;\n    if (gameState) return;\n    const newBoard = [...board];\n    let columnIndex = newBoard[currentStep].v.findIndex((v) => v === '');\n    if (overwrite) {\n      if (columnIndex === -1) {\n        columnIndex = 3;\n      } else {\n        columnIndex--;\n      }\n    }\n    if (columnIndex !== -1) {\n      newBoard[currentStep].v[columnIndex] = letter;\n      setBoard(newBoard);\n    }\n  };\n\n  const correctKeys = new Set();\n  const presentKeys = new Set();\n  const absentKeys = new Set();\n  board.forEach((row, i) => {\n    if (!row.s) return;\n    row.v.forEach((letter, j) => {\n      const state = boardStates[i][j];\n      if (state === 'üü©') {\n        correctKeys.add(letter);\n      } else if (state === 'üüß') {\n        presentKeys.add(letter);\n      } else if (state === '‚¨ú') {\n        absentKeys.add(letter);\n      }\n    });\n  });\n\n  const handleEnter = () => {\n    if (gameState) return;\n    console.log('handleEnter');\n    setShowError(false);\n\n    const row = board[currentStep];\n    if (!row) return;\n    const currentIdiom = row.v.join('');\n    const valid = idioms.includes(currentIdiom);\n    if (valid) {\n      row.s = true;\n      setBoard([...board]);\n    } else {\n      setTimeout(() => {\n        setShowError(true);\n      }, 10);\n    }\n    console.log({ currentIdiom, valid });\n  };\n\n  const gameState = useMemo(() => {\n    return getBoardGameState(boardStates);\n  }, [boardStates]);\n\n  useEffect(() => {\n    if (gameState === 'won') {\n      setShowModal('won');\n    } else if (gameState === 'lost') {\n      setShowModal('lost');\n    } else {\n      setShowModal(false);\n    }\n  }, [gameState]);\n\n  const handleBackspace = () => {\n    if (gameState) return;\n    const newBoard = [...board];\n    // Get last column with value\n    const row = newBoard[currentStep];\n    if (!row || row.s) return;\n    let columnIndex = -1;\n    for (let i = row.v.length - 1; i >= 0; i--) {\n      if (row.v[i] !== '') {\n        columnIndex = i;\n        break;\n      }\n    }\n    if (columnIndex !== -1) {\n      row.v[columnIndex] = '';\n      setBoard(newBoard);\n    }\n  };\n\n  useEffect(() => {\n    const handleKey = (e) => {\n      if (gameState) return;\n      if (e.metaKey || e.ctrlKey || !e.key) {\n        return;\n      }\n      const key = e.key.toLowerCase();\n      if (key === 'enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        handleEnter();\n      } else if (key === 'backspace') {\n        e.preventDefault();\n        handleBackspace();\n      } else if (/^arrow(left|right)/i.test(key)) {\n        // This will cycle through all letters with same starting pinyin letter\n        const row = board[currentStep];\n        const value = [...row.v].reverse().find((v) => v !== '');\n        if (value) {\n          const pinyinLetter = py(value)[0];\n          const possibleLetters = currentGameKeys.filter(\n            (k) => py(k)[0] === pinyinLetter,\n          );\n          if (possibleLetters.length <= 1) return;\n          const letterIndex = possibleLetters.indexOf(value);\n          const nextLetter =\n            key === 'arrowright'\n              ? possibleLetters[(letterIndex + 1) % possibleLetters.length]\n              : possibleLetters[\n                  (letterIndex + possibleLetters.length - 1) %\n                    possibleLetters.length\n                ];\n          if (nextLetter) {\n            handleLetter(nextLetter, true);\n          }\n        }\n      } else {\n        // Type \"a\" will trigger the first letter pinyin that starts with \"ƒÅ\"\n        const letter = currentGameKeys.find((k) => {\n          const firstPinyinChar = py(k)[0];\n          return (\n            firstPinyinChar.localeCompare(key, 'en', {\n              sensitivity: 'base',\n            }) === 0\n          );\n        });\n        if (letter) {\n          e.preventDefault();\n          handleLetter(letter);\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKey);\n    return () => {\n      document.removeEventListener('keydown', handleKey);\n    };\n  }, [currentGameKeys, board, currentStep, gameState]);\n\n  const permalink = location.origin + location.pathname + '#' + currentGame.id;\n  const shortPermalink =\n    location.host + location.pathname + '#' + currentGame.id;\n  const emojiResults = boardStates\n    .map((row) => row.join(''))\n    .join('\\n')\n    .trim();\n  const attempts = gameState === 'won' ? emojiResults.split('\\n').length : 'X';\n  const shareText = `${t('app.title')} [${\n    currentGame.id\n  }] ${attempts}/6\\n\\n${emojiResults}`;\n  const shareTextWithLink = `${shareText}\\n\\n${shortPermalink}`;\n\n  const hints = useMemo(() => {\n    const hints = [];\n    const letters = currentGame.idiom.split('');\n\n    // 1. Absent letters hints\n    const absentHints = currentGameKeys\n      .filter((k) => {\n        return !letters.includes(k) && !absentKeys.has(k);\n      })\n      .slice(0, -1) // Don't reveal at least one letter\n      .slice(0, 3) // But still max 3 letters\n      .map((letter) => {\n        return t('hints.absentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...absentHints);\n\n    // 2. Definition hints\n    if (\n      definition?.zh &&\n      letters.filter((c) => definition.zh.includes(c)).length <= 2\n      // Only show hint if definition contains 2 or less of the characters in the idiom\n      // Else, the definition basically revealed the answer\n    ) {\n      hints.push(`‚ÑπÔ∏è ${definition.zh}`);\n    }\n    if (definition?.en) hints.push(`‚ÑπÔ∏è ${definition.en}`);\n\n    // 3. Letter hints\n    const letterHints = letters\n      .filter((c) => !correctKeys.has(c) && !presentKeys.has(c))\n      .slice(0, -1) // Don't reveal at least one letter\n      .map((letter) => {\n        return t('hints.presentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...letterHints);\n\n    // 4. Pinyin hints\n    const pinyinHint = letters\n      .map((c) => py(c)[0])\n      .join('')\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '');\n    // https://stackoverflow.com/a/37511463/20838\n    hints.push(t('hints.abbreviatedPinyin', { pinyinHint }));\n\n    return hints;\n  }, [currentGame.idiom, definition]);\n  const hintIndex = useRef(0);\n  useEffect(() => {\n    hintIndex.current = 0;\n  }, [currentGame.idiom]);\n  const showHint = () => {\n    if (gameState) return;\n    const hint = hints[hintIndex.current];\n    hintIndex.current = (hintIndex.current + 1) % hints.length;\n    alert(hint);\n  };\n\n  // Limit number of toasts\n  // https://github.com/timolins/react-hot-toast/issues/31#issuecomment-803359550\n  const { toasts } = useToasterStore();\n  const TOAST_LIMIT = 1;\n  useEffect(() => {\n    toasts\n      .filter((t, i) => t.visible && i >= TOAST_LIMIT)\n      .forEach((t) => toast.dismiss(t.id));\n  }, [toasts]);\n\n  return (\n    <>\n      <header>\n        <div class=\"inner\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowInfoModal(true);\n            }}\n          >\n            <svg\n              width=\"16\"\n              height=\"16\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <title>‚ÑπÔ∏è</title>\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          </button>\n          <h1>{t('app.title')}</h1>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowModal(gameState || 'play');\n            }}\n          >\n            {gameState ? (\n              t('common.play')\n            ) : (\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 290 290\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M255 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM35 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM145 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70z\"\n                />\n              </svg>\n            )}\n          </button>\n        </div>\n      </header>\n      <div id=\"board\">\n        {board.map((row, index) => {\n          return (\n            <div\n              className={`row ${\n                currentStep === index && showError ? 'error' : ''\n              } ${currentStep === index ? 'current' : ''}`}\n              key={index}\n            >\n              {row.v.map((letter, i) => (\n                <Letter key={i} letter={letter} state={boardStates[index][i]} />\n              ))}\n            </div>\n          );\n        })}\n      </div>\n      <div id=\"keyboard\">\n        <div class=\"inner\">\n          <div class=\"keys\">\n            {currentGameKeys.map((key, i) => (\n              <button\n                class={`${correctKeys.has(key) ? 'üü©' : ''} ${\n                  presentKeys.has(key) ? 'üüß' : ''\n                } ${absentKeys.has(key) ? '‚¨ú' : ''}`}\n                type=\"button\"\n                tabIndex={-1}\n                onClick={() => {\n                  handleLetter(key);\n                }}\n              >\n                <ruby>\n                  {key}\n                  <rp>(</rp>\n                  <rt>{py(key)}</rt>\n                  <rp>)</rp>\n                </ruby>\n              </button>\n            ))}\n          </div>\n          <div class=\"row\">\n            <button type=\"button\" onClick={handleEnter} tabIndex={-1}>\n              {t('common.enter')}\n            </button>\n            <button type=\"button\" class=\"stuck\" onClick={showHint}>\n              {t('ui.hint')}\n            </button>\n            <button type=\"button\" onClick={handleBackspace} tabIndex={-1}>\n              <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"modal\"\n        class={showModal ? 'appear' : ''}\n        onClick={(e) => {\n          if (e.target === e.currentTarget) setShowModal(null);\n        }}\n      >\n        <CloseIcon\n          height=\"24\"\n          width=\"24\"\n          class=\"close\"\n          onClick={() => {\n            setShowModal(null);\n          }}\n        />\n        <div class=\"content\">\n          <h2>\n            {showModal === 'won'\n              ? 'üéâüéâüéâ'\n              : showModal === 'lost'\n              ? 'üò≠üò≠üò≠'\n              : 'üêØüêØüêØ'}\n          </h2>\n          {showModal === 'play' && (\n            <p>\n              {t('ui.idiomId')}{' '}\n              <CodeInput code={currentGame.id} url={permalink} />\n            </p>\n          )}\n          {/(won|lost)/i.test(showModal) && (\n            <>\n              <p>\n                <b class=\"answer\">\n                  <ruby>\n                    {currentGame.idiom}\n                    <rp>(</rp>\n                    <rt>{py(currentGame.idiom)}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </b>\n                <div class=\"definition\">\n                  {definition?.zh\n                    ? definition.zh.split('').map((c) => {\n                        const p = py(c);\n                        if (p === c) return c;\n                        return (\n                          <ruby>\n                            {c}\n                            <rp>(</rp>\n                            <rt>{py(c)}</rt>\n                            <rp>)</rp>\n                          </ruby>\n                        );\n                      })\n                    : ''}\n                  {definition?.zh && definition?.en && <br />}\n                  {definition?.en}\n                </div>\n                <small>\n                  <a\n                    href={`https://hanyu.baidu.com/s?wd=${currentGame.idiom}&from=zici`}\n                    target=\"_blank\"\n                  >\n                    üìñ {t('glossary.baidu')}\n                  </a>\n                  &nbsp; &nbsp;\n                  <a\n                    href={`https://www.zdic.net/hans/${currentGame.idiom}`}\n                    target=\"_blank\"\n                  >\n                    üìñ {t('glossary.zdic')}\n                  </a>\n                </small>\n              </p>\n              <div class=\"results\">{shareTextWithLink}</div>\n              <button\n                id=\"share\"\n                onClick={async () => {\n                  try {\n                    if (\n                      // Edge/ or Edg/\n                      /edge?\\//i.test(navigator.userAgent) ||\n                      // Windows\n                      /windows/.test(navigator.userAgent)\n                    ) {\n                      throw new Error('Web Share API not working well here');\n                    }\n                    copy(shareTextWithLink);\n                    await navigator.share({ text: shareTextWithLink });\n                  } catch (e) {\n                    copy(shareTextWithLink, () => {\n                      alert(t('ui.copiedResults'));\n                    });\n                  }\n                }}\n              >\n                {t('common.share')}{' '}\n                <svg height=\"16\" width=\"16\" viewBox=\"0 0 24 24\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n                  ></path>\n                </svg>\n              </button>\n              &nbsp;\n              <a\n                class=\"button facebook\"\n                href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n                  permalink,\n                )}&hashtag=${encodeURIComponent('#chengyuwordle')}`}\n                target=\"_blank\"\n                onClick={() => {\n                  copy(shareTextWithLink);\n                }}\n              >\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 96.1 96.1\">\n                  <title>Facebook</title>\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M72 0H59.7c-14 0-23 9.3-23 23.7v10.9H24c-1 0-2 .8-2 2v15.7c0 1.1 1 2 2 2h12.6v39.9c0 1 .8 2 2 2h16.3c1 0 2-1 2-2v-40h14.6c1 0 2-.8 2-1.9V36.5a2 2 0 0 0-2-2H56.8v-9.2c0-4.4 1.1-6.7 6.9-6.7H72c1 0 2-.9 2-2V2c0-1.1-1-2-2-2z\"\n                  />\n                </svg>\n              </a>\n              &nbsp;\n              <a\n                class=\"button tweet\"\n                href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n                  shareTextWithLink,\n                )}`}\n                target=\"_blank\"\n              >\n                <svg height=\"16\" width=\"16\" viewBox=\"0 0 24 24\">\n                  <title>{t('common.tweet')}</title>\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"\n                  />\n                </svg>\n              </a>\n              &nbsp;\n              <CodeInput code={currentGame.id} url={permalink} />\n            </>\n          )}\n          <div class=\"footer\">\n            {/won|lost/i.test(gameState) &&\n              getTodayGame().id === currentGame.id && (\n                <p>\n                  <big>\n                    <Trans\n                      i18nKey=\"ui.nextIdiom\"\n                      components={[<Countdown />]}\n                    />\n                  </big>\n                </p>\n              )}\n            <div>\n              {getTodayGame().id !== currentGame.id && (\n                <>\n                  <a href=\"./\" class=\"button strong\">\n                    <PlayIcon width={20} height={20} /> {t('ui.playTodayGame')}\n                  </a>\n                  <br />\n                </>\n              )}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Random');\n                  const yes = confirm(t('ui.confirmRandom'));\n                  if (yes) {\n                    const rand = Math.round(Math.random() * (games.length - 1));\n                    const randGame = games[rand];\n                    location.hash = `#${randGame.id}`;\n                    setShowModal(null);\n                    fireEvent('Game load: Random');\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.random')}\n              </button>{' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Idiom ID');\n                  // Ask user for idiom ID, load game if ID is valid\n                  let id = prompt(t('ui.promptIdiom'));\n                  try {\n                    id = new URL(id).hash.slice(1);\n                  } catch (e) {}\n                  if (id) {\n                    const game = games.find((g) => g.id === id);\n                    if (game) {\n                      location.hash = `#${game.id}`;\n                      setShowModal(null);\n                      fireEvent('Game load: Idiom ID');\n                    } else {\n                      alert('Invalid idiom ID');\n                    }\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.choose')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"info-modal\"\n        class={showInfoModal || !skipFirstTime ? 'appear' : ''}\n      >\n        {skipFirstTime && (\n          <CloseIcon\n            height=\"32\"\n            width=\"32\"\n            class=\"close\"\n            onClick={() => {\n              setShowInfoModal(false);\n            }}\n          />\n        )}\n        <div class=\"content\">\n          {prefersColorSchemeSupported && (\n            <p class=\"color-scheme-selector\">\n              <button\n                type=\"button\"\n                class={colorScheme === 'dark' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'dark');\n                  setColorScheme('dark');\n                }}\n              >\n                üåë\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'auto' ? 'active' : ''}\n                onClick={() => {\n                  LS.removeItem(`${KEY_PREFIX}colorScheme`);\n                  setColorScheme('auto');\n                }}\n              >\n                üåì\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'light' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'light');\n                  setColorScheme('light');\n                }}\n              >\n                üåï\n              </button>\n            </p>\n          )}{' '}\n          <p class=\"locale-selector\">\n            üåê{' '}\n            <a\n              href=\"./?lng=en\"\n              hreflang=\"en\"\n              rel={i18n.resolvedLanguage === 'en' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'en' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('en');\n              }}\n            >\n              English\n            </a>{' '}\n            &#8901;{' '}\n            <a\n              href=\"./?lng=zh-CN\"\n              hreflang=\"zh-CN\"\n              rel={i18n.resolvedLanguage === 'zh' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'zh' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('zh-CN');\n              }}\n            >\n              ‰∏≠Êñá\n            </a>\n          </p>\n          <h2>{t('howToPlay.heading')}</h2>\n          <p>{t('howToPlay.how1')}</p>\n          <p>{t('howToPlay.how2')}</p>\n          <p>{t('howToPlay.how3')}</p>\n          <div class=\"example-idiom\">\n            {'‰πùÁâõ‰∏ÄÊØõ'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 0 ? 'üü©' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotCorrect')}</p>\n          <div class=\"example-idiom\">\n            {'ÁêÜÊâÄÂΩìÁÑ∂'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 1 ? 'üüß' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotPresent')}</p>\n          <div class=\"example-idiom\">\n            {'Áà±‰∏çÈáäÊâã'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 2 ? '‚¨ú' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotAbsent')}</p>\n          <p>{t('howToPlay.how4')}</p>\n          {skipFirstTime ? (\n            <>\n              <h2>{t('about.heading')}</h2>\n              <p>\n                <Trans\n                  i18nKey=\"about.about1\"\n                  components={[\n                    <a\n                      href=\"https://github.com/cheeaun/chengyu-wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://cheeaun.com\" target=\"_blank\" />,\n                    <a\n                      href=\"https://www.powerlanguage.co.uk/wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://powerlanguage.co.uk/\" target=\"_blank\" />,\n                  ]}\n                />\n              </p>\n              <h2>{t('feedback.heading')}</h2>\n              <ul>\n                <li>\n                  <a href=\"https://t.me/+ykuhfiImLd1kNjk1\" target=\"_blank\">\n                    {t('feedback.telegramGroup')}\n                  </a>\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubDiscussions\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/discussions\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubIssues\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/issues\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <a href=\"https://twitter.com/cheeaun\" target=\"_blank\">\n                    {t('feedback.twitter')}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://t.me/cheeaun\" target=\"_blank\">\n                    {t('feedback.telegram')}\n                  </a>\n                </li>\n              </ul>\n              <details id=\"debugging-container\">\n                <summary>\n                  {t('debugging.heading')} ({__COMMIT_HASH__})\n                </summary>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmResetGame'))) {\n                      LS.removeItem(KEY_PREFIX + currentGame.id);\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.resetGame')}\n                </button>\n                &nbsp;\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmClearDB'))) {\n                      clearGames();\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.clearDB')}\n                </button>\n              </details>\n            </>\n          ) : (\n            <p>\n              <button\n                type=\"button\"\n                class=\"large\"\n                onClick={() => {\n                  setShowInfoModal(false);\n                  LS.setItem(KEY_PREFIX + 'skipFirstTime', 1);\n                  setSkipFirstTime(true);\n                }}\n              >\n                <PlayIcon width=\"20\" height=\"20\" /> {t('ui.startPlay')}\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n      <Toaster\n        containerStyle={{\n          top: '3.5em',\n        }}\n        toastOptions={{\n          className: 'toast',\n          style: {\n            pointerEvents: 'none',\n          },\n        }}\n      />\n    </>\n  );\n}\n","import { render } from 'preact';\nimport { App } from './app';\nimport './index.css';\n\nimport en from '../i18n/en.json';\nimport zhCN from '../i18n/zh-CN.json';\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n      zh: {\n        translation: zhCN,\n      },\n    },\n    fallbackLng: 'en',\n    debug: /localhost/i.test(location.hostname),\n    detection: {\n      // localStorage is default\n      lookupLocalStorage: 'locale',\n      lookupCookie: 'locale',\n    },\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n  })\n  .then((t) => {\n    const updateLocale = () => {\n      document.documentElement.lang = i18n.resolvedLanguage;\n      document.title = document.querySelector(\n        'meta[property=\"og:title\"]',\n      ).content = t('app.title');\n      document.querySelector('meta[name=\"description\"]').content =\n        document.querySelector('meta[property=\"og:description\"]').content =\n          t('app.description');\n    };\n    i18n.on('languageChanged', updateLocale);\n    updateLocale();\n  });\n\nrender(<App />, document.getElementById('app'));\n"],"names":["relList","document","createElement","supports","link","querySelectorAll","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","href","p","jsx","jsxRuntime.jsx","jsxs","jsxRuntime.jsxs","Fragment","jsxRuntime.Fragment","py","pinyin","str","segment","group","flat","join","trim","alert","toast","text","copy","fn","navigator","clipboard","writeText","then","catch","LS","localStorage","getItem","key","e","value","setItem","removeItem","fireEvent","props","window","plausible","idioms","idiomsTxt","split","games","gameIdioms","slice","map","id","row","idiom","clearGames","i","length","startsWith","allGames","Map","game","JSON","parse","set","replace","getIdiomStates","hiddenIdiom","testIdiom","letters1","letters2","lettersLength","states","Array","from","Error","correctLetterIndices","push","presentLetterIndices","l1","l1Index","indexOf","includes","getBoardGameState","boardStates","some","every","s","lastRow","blankBoard","v","getIdiomsKeys","prevPassedIdioms","prevKeys","depth","passedIdioms","Set","add","keys","idiomLetters","forEach","letter","consecutiveFailures","anotherIdiom","find","has","j","size","MAX_LETTERS","nextIdiom","_passedIdioms","_keys","randomIdiom","Math","floor","random","gameID","g","error","possibleIdioms","keySize","PlayIcon","_jsxs","viewBox","fill","_jsx","d","CloseIcon","startDate","Date","getTodayGame","diff","setHours","dayCount","max","Countdown","t","useTranslation","nextDay","nextStartDate","hours","useState","minutes","setMinutes","seconds","setSeconds","isNow","setIsNow","timer","setInterval","toString","padStart","clearInterval","class","CodeInput","code","url","readOnly","onClick","target","focus","select","Letter","state","style","opacity","prefersColorSchemeSupported","matchMedia","media","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","zh","zhCN","fallbackLng","debug","test","location","hostname","detection","lookupLocalStorage","lookupCookie","interpolation","escapeValue","updateLocale","documentElement","lang","resolvedLanguage","title","querySelector","content","on","render","colorScheme","setColorScheme","html","classList","remove","skipFirstTime","setSkipFirstTime","currentGame","setCurrentGame","hash","addEventListener","board","setBoard","cachedGame","useMemo","stringify","gameState","definition","setDefinition","r","json","currentStep","findIndex","showError","setShowError","showModal","setShowModal","showInfoModal","setShowInfoModal","currentGameKeys","filter","sort","a","b","localeCompare","console","groupCollapsed","log","groupEnd","ANSWER","handleLetter","overwrite","newBoard","columnIndex","correctKeys","presentKeys","absentKeys","handleEnter","currentIdiom","valid","handleBackspace","handleKey","metaKey","ctrlKey","toLowerCase","preventDefault","stopPropagation","reverse","pinyinLetter","possibleLetters","k","letterIndex","nextLetter","sensitivity","removeEventListener","permalink","origin","pathname","shortPermalink","host","emojiResults","attempts","shareTextWithLink","hints","letters","absentHints","c","letterHints","pinyinHint","normalize","hintIndex","useRef","current","toasts","useToasterStore","visible","dismiss","width","height","stroke","index","className","tabIndex","hint","currentTarget","async","userAgent","share","encodeURIComponent","Trans","i18nKey","components","confirm","rand","round","randGame","prompt","URL","hreflang","undefined","changeLanguage","__COMMIT_HASH__","reload","KEY_PREFIX","Toaster","containerStyle","top","toastOptions","pointerEvents","getElementById"],"mappings":"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"}