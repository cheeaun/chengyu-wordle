{"version":3,"file":"index.a707ffa6.js","sources":["../../vite/modulepreload-polyfill","../../src/getIdiomStates.js","../../preact/jsx-runtime","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","const getIdiomStates = (hiddenIdiom, testIdiom) => {\n  const letters1 =\n    typeof testIdiom === 'string' ? testIdiom.split('') : testIdiom;\n  const letters2 =\n    typeof hiddenIdiom === 'string' ? hiddenIdiom.split('') : hiddenIdiom;\n  const lettersLength = letters1.length;\n  const states = Array.from({ length: lettersLength }, () => '‚¨ú');\n  if (lettersLength !== letters2.length) {\n    throw new Error('idioms must have the same length');\n  }\n  const correctLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 === l2) {\n      states[i] = 'üü©';\n      correctLetterIndices.push(i);\n    }\n  }\n  const presentLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 !== l2) {\n      const l1Index = letters2.findIndex(\n        (l, index) =>\n          l === l1 &&\n          !correctLetterIndices.includes(index) &&\n          !presentLetterIndices.includes(index),\n      );\n      if (l1Index !== -1) {\n        states[i] = 'üüß';\n        presentLetterIndices.push(l1Index);\n      }\n    }\n  }\n  return states;\n};\n\nexport default getIdiomStates;\n","import * as jsxRuntime from \"/home/runner/work/chengyu-wordle/chengyu-wordle/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import {\n  useState,\n  useEffect,\n  useMemo,\n  useRef,\n  useCallback,\n} from 'preact/hooks';\nimport pinyin from 'pinyin';\nconst py = (str) =>\n  pinyin(str, { segment: true, group: true }).flat().join(' ').trim();\nimport { useTranslation, Trans } from 'react-i18next';\nimport toast, { Toaster, useToasterStore } from 'react-hot-toast';\nconst alert = (text) => toast(text);\n\nimport { toClipboard } from 'copee';\nconst copy = (text, fn = () => {}) => {\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard\n      .writeText(text)\n      .then(fn)\n      .catch((e) => {});\n  } else {\n    toClipboard(text);\n    fn();\n  }\n};\n\nimport getIdiomStates from './getIdiomStates';\n\n// Always need to wrap localStorage in a try/catch block because\n// it can throw an exception in some browsers (e.g. Safari)\nconst LS = {\n  getItem: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n  setItem: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      return null;\n    }\n  },\n  removeItem: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n};\n\nconst fireEvent = (...props) => {\n  if (window.plausible) {\n    plausible(...props);\n  }\n};\n\n// Data\nimport idiomsTxt from '../game-data/all-idioms.txt?raw';\nconst idioms = idiomsTxt.split('\\n');\nimport gameIdioms from '../game-data/game-idioms.csv';\nconst games = gameIdioms.slice(1).map((row) => ({\n  id: row[0],\n  idiom: row[1],\n}));\n\nconst MAX_GAMES_BEFORE_SHOW_DASHBOARD = 7000;\nconst MAX_LETTERS = 4;\nconst MAX_KEYS = 20;\nconst MAX_STEPS = 6;\nconst MIN_IDIOMS = 6;\nconst KEY_PREFIX = 'cywd-';\n\nwindow.clearGames = () => {\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      localStorage.removeItem(key);\n    }\n  }\n};\n\nwindow.allGames = () => {\n  const allGames = new Map();\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      const game = JSON.parse(localStorage.getItem(key));\n      allGames.set(key.replace(KEY_PREFIX, ''), game);\n    }\n  }\n  return allGames;\n};\n\nconst getBoardGameState = (boardStates) => {\n  const won = boardStates.some(\n    (row) => !!row.length && row.every((s) => s === 'üü©'),\n  );\n  if (won) return 'won';\n  const lastRow = boardStates[boardStates.length - 1];\n  const lost = !!lastRow.length && lastRow.every((s) => s !== 'üü©');\n  if (lost) return 'lost';\n  return null;\n};\n\n// v = letter values of the row\n// s = submitted state of the row (after user press enter)\nconst blankBoard = () =>\n  Array.from({ length: MAX_STEPS }, () => ({\n    v: Array.from({ length: MAX_LETTERS }, () => ''),\n    s: false,\n  }));\n\nconst getIdiomsKeys = (idiom, prevPassedIdioms, prevKeys, depth = 0) => {\n  let passedIdioms = prevPassedIdioms || new Set();\n  passedIdioms.add(idiom);\n  let keys = prevKeys || new Set();\n  const idiomLetters = idiom.split('');\n  idiomLetters.forEach((letter) => keys.add(letter));\n  let consecutiveFailures = 0;\n  lettersCycle: for (let i = 0; i < games.length; i++) {\n    const letter = idiomLetters[(i + 1) % MAX_LETTERS];\n    const anotherIdiom = games.find(\n      ({ idiom }) => !passedIdioms.has(idiom) && idiom.includes(letter),\n    );\n    if (anotherIdiom) {\n      for (let j = 0; j < anotherIdiom.idiom.length; j++) {\n        keys.add(anotherIdiom.idiom[j]);\n\n        if (keys.size >= MAX_KEYS) {\n          break lettersCycle;\n        }\n      }\n      passedIdioms.add(anotherIdiom.idiom);\n      consecutiveFailures = 0;\n    } else {\n      if (consecutiveFailures >= MAX_LETTERS + 1) {\n        // Too many failures, stop\n        break lettersCycle;\n      }\n      consecutiveFailures += 1;\n    }\n  }\n\n  // Try the next idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const nextIdiom = [...passedIdioms][++depth];\n    if (nextIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        nextIdiom,\n        passedIdioms,\n        keys,\n        depth,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Still not enough keys, choose a random idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const randomIdiom = games[Math.floor(Math.random() * games.length)].idiom;\n    if (randomIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        randomIdiom,\n        passedIdioms,\n        keys,\n        0,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Something very wrong happened\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const gameID = games.find((g) => g.idiom === idiom)?.id;\n    console.error(gameID, {\n      possibleIdioms: passedIdioms.size,\n      keySize: keys.size,\n      consecutiveFailures,\n    });\n  }\n\n  return {\n    passedIdioms,\n    keys,\n  };\n};\n\n// Check if all idioms have enough keys/idioms\n// games.forEach((game) => {\n//   getIdiomsKeys(game.idiom);\n// });\n\nconst PlayIcon = (props) => (\n  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" {...props}>\n    <title>‚ñ∂Ô∏è</title>\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\n      clip-rule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst CloseIcon = (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <title>‚úñÔ∏è</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    ></path>\n  </svg>\n);\n\nconst startDate = new Date(2022, 0, 27); // 27 January 2022\nconst getTodayGame = () => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const diff = today - startDate;\n  const dayCount = Math.floor(diff / (1000 * 60 * 60 * 24));\n  return games[Math.max(0, dayCount % games.length)];\n};\n\n// Component that shows hours, minutes and seconds counting down to start of next day\nconst Countdown = () => {\n  const { t } = useTranslation();\n  let nextDay = new Date().setHours(0, 0, 0, 0) + 24 * 60 * 60 * 1000;\n  const nextStartDate = new Date(+startDate + 24 * 60 * 60 * 1000);\n  if (nextDay < nextStartDate) {\n    nextDay = nextStartDate;\n  }\n  const [hours, setHours] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [isNow, setIsNow] = useState(false);\n  // update countdown every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const diff = nextDay - new Date();\n      if (diff <= 0) {\n        setIsNow(true);\n        clearInterval(timer);\n        return;\n      }\n      setHours(\n        Math.floor(diff / (1000 * 60 * 60))\n          .toString()\n          .padStart(2, '0'),\n      );\n      setMinutes(\n        Math.floor((diff / (1000 * 60)) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n      setSeconds(\n        Math.floor((diff / 1000) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  if (isNow) {\n    return <a href=\"./\">{t('ui.countdownNow')}</a>;\n  }\n  return (\n    <time class=\"countdown\">\n      {hours}:{minutes}:{seconds}\n    </time>\n  );\n};\n\nconst CodeInput = ({ code, url }) => {\n  const { t } = useTranslation();\n  return (\n    code && (\n      <input\n        readOnly\n        value={code}\n        class=\"idiom-code\"\n        onClick={(e) => {\n          e.target.focus();\n          e.target.select();\n          copy(url || code, () => {\n            alert(t('ui.copiedURL'));\n          });\n        }}\n      />\n    )\n  );\n};\n\nconst Letter = ({ letter, state }) => {\n  return (\n    <div\n      class={`letter ${letter ? 'lettered' : ''} ${state ?? ''} ${\n        state ? 'üåà' : ''\n      }`}\n    >\n      <ruby>\n        {letter || <span style={{ opacity: 0 }}>‰∏Ä</span>}\n        <rp>(</rp>\n        <rt>{py(letter) || <>&nbsp;</>}</rt>\n        <rp>)</rp>\n      </ruby>\n    </div>\n  );\n};\n\nimport JSConfetti from 'js-confetti';\nconst jsConfetti = new JSConfetti();\nconst IdiomsDashboard = () => {\n  const { t } = useTranslation();\n  let wonCount = 0;\n  let lostCount = 0;\n  const idioms = games.map((game) => {\n    // Get board from localStorage\n    const boardGame = JSON.parse(LS.getItem(`${KEY_PREFIX}${game.id}`));\n    if (boardGame && boardGame.gameState) {\n      const { board, gameState } = boardGame;\n      if (gameState === 'won') {\n        wonCount++;\n      } else if (gameState === 'lost') {\n        lostCount++;\n      }\n      return (\n        <a\n          href={`/#${game.id}`}\n          class={`board ${gameState}`}\n          title={`${game.id} (${gameState})`}\n        >\n          {gameState === 'won' ? 'üü©' : 'üüß'}\n        </a>\n      );\n    } else {\n      return (\n        <a href={`/#${game.id}`} class=\"board\" title={`${game.id}`}>\n          ‚¨ú\n        </a>\n      );\n    }\n  });\n\n  useEffect(() => {\n    jsConfetti.addConfetti({\n      emojis: ['üü©', 'üüß'],\n      emojiSize: 30,\n      confettiNumber: 100,\n    });\n  }, []);\n\n  return (\n    <>\n      <h2>\n        {t('dashboard.heading', {\n          gamesCount: MAX_GAMES_BEFORE_SHOW_DASHBOARD,\n        })}\n      </h2>\n      <p>{t('dashboard.subheading')}</p>\n      <p>\n        <Trans\n          i18nKey=\"dashboard.totalGamesPlayed\"\n          values={{\n            gamesCountOverTotal: `${wonCount + lostCount} / ${games.length}`,\n          }}\n          components={[<b />]}\n        />\n        <br />\n        <Trans\n          i18nKey=\"dashboard.wonLost\"\n          values={{\n            wonCount,\n            lostCount,\n          }}\n          components={[<b />, <b />]}\n        />\n      </p>\n      <div class=\"boards\">{idioms}</div>\n    </>\n  );\n};\n\nconst prefersColorSchemeSupported =\n  'matchMedia' in window &&\n  window.matchMedia('(prefers-color-scheme: dark)').media !== 'not all';\n\nexport function App() {\n  const { t, i18n } = useTranslation();\n\n  const [showDashboard, setShowDashboard] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showModal, setShowModal] = useState(false); // false | won | lost\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const [colorScheme, setColorScheme] = useState(\n    LS.getItem(`${KEY_PREFIX}colorScheme`) || 'auto',\n  );\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const html = document.querySelector('html');\n    if (colorScheme === 'dark') {\n      html.classList.add('dark-mode');\n      html.classList.remove('light-mode');\n    } else if (colorScheme === 'light') {\n      html.classList.add('light-mode');\n      html.classList.remove('dark-mode');\n    } else {\n      html.classList.remove('dark-mode', 'light-mode');\n    }\n  }, [colorScheme]);\n\n  const [skipFirstTime, setSkipFirstTime] = useState(\n    LS.getItem(`${KEY_PREFIX}skipFirstTime`) || false,\n  );\n\n  const [currentGame, setCurrentGame] = useState(\n    games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n  );\n  useEffect(() => {\n    window.addEventListener('hashchange', () => {\n      setCurrentGame(\n        games.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n      );\n      setShowDashboard(false);\n    });\n  }, []);\n\n  const [board, setBoard] = useState(\n    JSON.parse(LS.getItem(`${KEY_PREFIX}${currentGame.id}`))?.board ||\n      blankBoard(),\n  );\n  useEffect(() => {\n    const cachedGame = LS.getItem(`${KEY_PREFIX}${currentGame.id}`);\n    if (cachedGame) {\n      setBoard(JSON.parse(cachedGame).board);\n    } else {\n      setBoard(blankBoard());\n    }\n  }, [currentGame.id]);\n\n  const boardStates = useMemo(() => {\n    return board.map((row, i) => {\n      if (row.s) {\n        return getIdiomStates(currentGame.idiom, row.v);\n      }\n      return [];\n    });\n  }, [board]);\n\n  // Save to localStorage every time board changes\n  useEffect(() => {\n    // Only store in localStorage if board has some values\n    if (board && board.some((row) => row.v.some((v) => v))) {\n      LS.setItem(\n        `${KEY_PREFIX}${currentGame.id}`,\n        JSON.stringify({\n          board,\n          gameState: getBoardGameState(boardStates),\n        }),\n      );\n    }\n  }, [boardStates]);\n\n  const [definition, setDefinition] = useState(null);\n  useEffect(() => {\n    setDefinition(null);\n    fetch(\n      `https://baidu-hanyu-idiom.cheeaun.workers.dev/?wd=${currentGame.idiom}`,\n    )\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.definition) {\n          setDefinition(r.definition);\n        }\n      })\n      .catch(() => {});\n  }, [currentGame.idiom]);\n\n  const currentStep = board?.findIndex((row) => row.s === false) || 0;\n\n  const currentGameKeys = useMemo(() => {\n    const { keys } = getIdiomsKeys(currentGame.idiom);\n\n    // SPOILER inside console.log!\n    const allPossibleIdioms = idioms.filter((idiom) => {\n      // check if idiom contains 4 letters from keys\n      return idiom.split('').every((letter) => keys.has(letter));\n    });\n    const possibleIdioms = allPossibleIdioms\n      .map((idiom) => {\n        return `${idiom} (${py(idiom)})`;\n      })\n      .sort((a, b) => a.localeCompare(b, 'zh'));\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\n        `${possibleIdioms.length} Possible Idioms [${currentGame.id}] (${keys.size} keys):`,\n      );\n      console.log(`${possibleIdioms\n        .map((idiom, i) => `${i + 1}. ${idiom}`)\n        .join('\\n')}\n\nüö®SPOILERüö® Type 'ANSWER' to see the answer.`);\n      console.groupEnd();\n    }\n    window.ANSWER = `${currentGame.idiom} (${py(currentGame.idiom)})`;\n\n    return [...keys].sort((a, b) => a.localeCompare(b, 'zh'));\n  }, [currentGame.idiom]);\n\n  const handleLetter = (letter, overwrite = false) => {\n    if (!board[currentStep]) return;\n    if (gameState) return;\n    const newBoard = [...board];\n    let columnIndex = newBoard[currentStep].v.findIndex((v) => v === '');\n    if (overwrite) {\n      if (columnIndex === -1) {\n        columnIndex = 3;\n      } else {\n        columnIndex--;\n      }\n    }\n    if (columnIndex !== -1) {\n      newBoard[currentStep].v[columnIndex] = letter;\n      setBoard(newBoard);\n    }\n  };\n\n  const correctKeys = new Set();\n  const presentKeys = new Set();\n  const absentKeys = new Set();\n  board.forEach((row, i) => {\n    if (!row.s) return;\n    row.v.forEach((letter, j) => {\n      const state = boardStates[i][j];\n      if (state === 'üü©') {\n        correctKeys.add(letter);\n      } else if (state === 'üüß') {\n        presentKeys.add(letter);\n      } else if (state === '‚¨ú') {\n        absentKeys.add(letter);\n      }\n    });\n  });\n\n  const handleEnter = () => {\n    if (gameState) return;\n    console.log('handleEnter');\n    setShowError(false);\n\n    const row = board[currentStep];\n    if (!row) return;\n    const currentIdiom = row.v.join('');\n    const valid = idioms.includes(currentIdiom);\n    if (valid) {\n      row.s = true;\n      setBoard([...board]);\n    } else {\n      setTimeout(() => {\n        setShowError(true);\n      }, 10);\n    }\n    console.log({ currentIdiom, valid });\n  };\n\n  const gameState = useMemo(() => {\n    return getBoardGameState(boardStates);\n  }, [boardStates]);\n\n  useEffect(() => {\n    if (gameState === 'won') {\n      setShowModal('won');\n    } else if (gameState === 'lost') {\n      setShowModal('lost');\n    } else {\n      setShowModal(false);\n    }\n  }, [gameState]);\n\n  const handleBackspace = () => {\n    if (gameState) return;\n    const newBoard = [...board];\n    // Get last column with value\n    const row = newBoard[currentStep];\n    if (!row || row.s) return;\n    let columnIndex = -1;\n    for (let i = row.v.length - 1; i >= 0; i--) {\n      if (row.v[i] !== '') {\n        columnIndex = i;\n        break;\n      }\n    }\n    if (columnIndex !== -1) {\n      row.v[columnIndex] = '';\n      setBoard(newBoard);\n    }\n  };\n\n  useEffect(() => {\n    const handleKey = (e) => {\n      if (gameState) return;\n      if (e.metaKey || e.ctrlKey || !e.key) {\n        return;\n      }\n      const key = e.key.toLowerCase();\n      if (key === 'enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        handleEnter();\n      } else if (key === 'backspace') {\n        e.preventDefault();\n        handleBackspace();\n      } else if (/^arrow(left|right)/i.test(key)) {\n        // This will cycle through all letters with same starting pinyin letter\n        const row = board[currentStep];\n        const value = [...row.v].reverse().find((v) => v !== '');\n        if (value) {\n          const pinyinLetter = py(value)[0];\n          const possibleLetters = currentGameKeys.filter(\n            (k) => py(k)[0] === pinyinLetter,\n          );\n          if (possibleLetters.length <= 1) return;\n          const letterIndex = possibleLetters.indexOf(value);\n          const nextLetter =\n            key === 'arrowright'\n              ? possibleLetters[(letterIndex + 1) % possibleLetters.length]\n              : possibleLetters[\n                  (letterIndex + possibleLetters.length - 1) %\n                    possibleLetters.length\n                ];\n          if (nextLetter) {\n            handleLetter(nextLetter, true);\n          }\n        }\n      } else {\n        // Type \"a\" will trigger the first letter pinyin that starts with \"ƒÅ\"\n        const letter = currentGameKeys.find((k) => {\n          const firstPinyinChar = py(k)[0];\n          return (\n            firstPinyinChar.localeCompare(key, 'en', {\n              sensitivity: 'base',\n            }) === 0\n          );\n        });\n        if (letter) {\n          e.preventDefault();\n          handleLetter(letter);\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKey);\n    return () => {\n      document.removeEventListener('keydown', handleKey);\n    };\n  }, [currentGameKeys, board, currentStep, gameState]);\n\n  const permalink = location.origin + location.pathname + '#' + currentGame.id;\n  const shortPermalink =\n    location.host + location.pathname + '#' + currentGame.id;\n  const emojiResults = boardStates\n    .map((row) => row.join(''))\n    .join('\\n')\n    .trim();\n  const attempts = gameState === 'won' ? emojiResults.split('\\n').length : 'X';\n  const shareText = `${t('app.title')} [${\n    currentGame.id\n  }] ${attempts}/6\\n\\n${emojiResults}`;\n  const shareTextWithLink = `${shareText}\\n\\n${shortPermalink}`;\n\n  const hints = useMemo(() => {\n    const hints = [];\n    const letters = currentGame.idiom.split('');\n\n    // 1. Absent letters hints\n    const absentHints = currentGameKeys\n      .filter((k) => {\n        return !letters.includes(k) && !absentKeys.has(k);\n      })\n      .slice(0, -1) // Don't reveal at least one letter\n      .slice(0, 3) // But still max 3 letters\n      .map((letter) => {\n        return t('hints.absentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...absentHints);\n\n    // 2. Definition hints\n    if (\n      definition?.zh &&\n      letters.filter((c) => definition.zh.includes(c)).length <= 2\n      // Only show hint if definition contains 2 or less of the characters in the idiom\n      // Else, the definition basically revealed the answer\n    ) {\n      hints.push(`‚ÑπÔ∏è ${definition.zh}`);\n    }\n    if (definition?.en) hints.push(`‚ÑπÔ∏è ${definition.en}`);\n\n    // 3. Letter hints\n    const letterHints = letters\n      .filter((c) => !correctKeys.has(c) && !presentKeys.has(c))\n      .slice(0, -1) // Don't reveal at least one letter\n      .map((letter) => {\n        return t('hints.presentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...letterHints);\n\n    // 4. Pinyin hints\n    const pinyinHint = letters\n      .map((c) => py(c)[0])\n      .join('')\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '');\n    // https://stackoverflow.com/a/37511463/20838\n    hints.push(t('hints.abbreviatedPinyin', { pinyinHint }));\n\n    return hints;\n  }, [currentGame.idiom, definition]);\n  const hintIndex = useRef(0);\n  useEffect(() => {\n    hintIndex.current = 0;\n  }, [currentGame.idiom]);\n  const showHint = () => {\n    if (gameState) return;\n    const hint = hints[hintIndex.current];\n    hintIndex.current = (hintIndex.current + 1) % hints.length;\n    alert(hint);\n  };\n\n  // Limit number of toasts\n  // https://github.com/timolins/react-hot-toast/issues/31#issuecomment-803359550\n  const { toasts } = useToasterStore();\n  const TOAST_LIMIT = 1;\n  useEffect(() => {\n    toasts\n      .filter((t, i) => t.visible && i >= TOAST_LIMIT)\n      .forEach((t) => toast.dismiss(t.id));\n  }, [toasts]);\n\n  const gamesPlayedCount = useMemo(() => {\n    // Only count games played if info modal is open\n    if (!showInfoModal) return;\n    try {\n      const keys = Object.keys(localStorage).filter((k) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && games.find((g) => g.id === gameID);\n      });\n      return keys.length;\n    } catch (e) {}\n  }, [showInfoModal]);\n\n  useEffect(() => {\n    if (!gamesPlayedCount || gamesPlayedCount < 10) return;\n    const precision = gamesPlayedCount < 100 ? 1 : 2;\n    const count = +gamesPlayedCount.toPrecision(precision);\n    fireEvent('Games Played', {\n      props: {\n        count,\n      },\n    });\n  }, [gamesPlayedCount]);\n\n  const GamesCount = useCallback(\n    () => (\n      <b>\n        {gamesPlayedCount}\n        {gamesPlayedCount >= MAX_GAMES_BEFORE_SHOW_DASHBOARD && (\n          <>\n            {' '}\n            /{' '}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                setShowInfoModal(false);\n                setShowDashboard(true);\n              }}\n            >\n              {games.length}\n            </a>\n          </>\n        )}\n      </b>\n    ),\n    [gamesPlayedCount],\n  );\n\n  return (\n    <>\n      <header>\n        <div class=\"inner\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowInfoModal(true);\n            }}\n          >\n            <svg\n              width=\"16\"\n              height=\"16\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <title>‚ÑπÔ∏è</title>\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          </button>\n          <h1>{t('app.title')}</h1>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowModal(gameState || 'play');\n            }}\n          >\n            {gameState ? (\n              t('common.play')\n            ) : (\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 290 290\">\n                <title>...</title>\n                <path\n                  fill=\"currentColor\"\n                  d=\"M255 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM35 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM145 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70z\"\n                />\n              </svg>\n            )}\n          </button>\n        </div>\n      </header>\n      <div id=\"board\" class={gameState}>\n        {board.map((row, index) => {\n          return (\n            <div\n              className={`row ${\n                currentStep === index && showError ? 'error' : ''\n              } ${currentStep === index ? 'current' : ''}`}\n              key={index}\n            >\n              {row.v.map((letter, i) => (\n                <Letter key={i} letter={letter} state={boardStates[index][i]} />\n              ))}\n            </div>\n          );\n        })}\n      </div>\n      <div id=\"keyboard\" class={gameState}>\n        <div class=\"inner\">\n          <div class=\"keys\">\n            {currentGameKeys.map((key, i) => (\n              <button\n                class={`${correctKeys.has(key) ? 'üü©' : ''} ${\n                  presentKeys.has(key) ? 'üüß' : ''\n                } ${absentKeys.has(key) ? '‚¨ú' : ''}`}\n                type=\"button\"\n                tabIndex={-1}\n                onClick={() => {\n                  handleLetter(key);\n                }}\n              >\n                <ruby>\n                  {key}\n                  <rp>(</rp>\n                  <rt>{py(key)}</rt>\n                  <rp>)</rp>\n                </ruby>\n              </button>\n            ))}\n          </div>\n          <div class=\"row\">\n            <button type=\"button\" onClick={handleEnter} tabIndex={-1}>\n              {t('common.enter')}\n            </button>\n            <button type=\"button\" class=\"stuck\" onClick={showHint}>\n              {t('ui.hint')}\n            </button>\n            <button type=\"button\" onClick={handleBackspace} tabIndex={-1}>\n              <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"modal\"\n        class={showModal ? 'appear' : ''}\n        onClick={(e) => {\n          if (e.target === e.currentTarget) setShowModal(null);\n        }}\n      >\n        <CloseIcon\n          height=\"24\"\n          width=\"24\"\n          class=\"close\"\n          onClick={() => {\n            setShowModal(null);\n          }}\n        />\n        <div class=\"content\">\n          <h2>\n            {showModal === 'won'\n              ? 'üéâüéâüéâ'\n              : showModal === 'lost'\n              ? 'üò≠üò≠üò≠'\n              : 'üêØüêØüêØ'}\n          </h2>\n          {showModal === 'play' && (\n            <p>\n              {t('ui.idiomId')}{' '}\n              <CodeInput code={currentGame.id} url={permalink} />\n            </p>\n          )}\n          {/(won|lost)/i.test(showModal) && (\n            <>\n              <p>\n                <b class=\"answer\">\n                  <ruby>\n                    {currentGame.idiom}\n                    <rp>(</rp>\n                    <rt>{py(currentGame.idiom)}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </b>\n                <div class=\"definition\">\n                  {definition?.zh\n                    ? definition.zh.split('').map((c) => {\n                        const p = py(c);\n                        if (p === c) return c;\n                        return (\n                          <ruby>\n                            {c}\n                            <rp>(</rp>\n                            <rt>{py(c)}</rt>\n                            <rp>)</rp>\n                          </ruby>\n                        );\n                      })\n                    : ''}\n                  {definition?.zh && definition?.en && <br />}\n                  {definition?.en}\n                </div>\n                <small>\n                  <a\n                    href={`https://hanyu.baidu.com/s?wd=${currentGame.idiom}&from=zici`}\n                    target=\"_blank\"\n                  >\n                    üìñ {t('glossary.baidu')}\n                  </a>\n                  &nbsp; &nbsp;\n                  <a\n                    href={`https://www.zdic.net/hans/${currentGame.idiom}`}\n                    target=\"_blank\"\n                  >\n                    üìñ {t('glossary.zdic')}\n                  </a>\n                </small>\n              </p>\n              <div class=\"results\">{shareTextWithLink}</div>\n              <button\n                id=\"share\"\n                onClick={async () => {\n                  try {\n                    if (\n                      // Edge/ or Edg/\n                      /edge?\\//i.test(navigator.userAgent) ||\n                      // Windows\n                      /windows/.test(navigator.userAgent)\n                    ) {\n                      throw new Error('Web Share API not working well here');\n                    }\n                    copy(shareTextWithLink);\n                    await navigator.share({ text: shareTextWithLink });\n                  } catch (e) {\n                    copy(shareTextWithLink, () => {\n                      alert(t('ui.copiedResults'));\n                    });\n                  }\n                }}\n              >\n                {t('common.share')}{' '}\n                <svg height=\"16\" width=\"16\" viewBox=\"0 0 24 24\">\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n                  ></path>\n                </svg>\n              </button>\n              &nbsp;\n              <a\n                class=\"button facebook\"\n                href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n                  permalink,\n                )}&hashtag=${encodeURIComponent('#chengyuwordle')}`}\n                target=\"_blank\"\n                onClick={() => {\n                  copy(shareTextWithLink);\n                }}\n              >\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 96.1 96.1\">\n                  <title>Facebook</title>\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M72 0H59.7c-14 0-23 9.3-23 23.7v10.9H24c-1 0-2 .8-2 2v15.7c0 1.1 1 2 2 2h12.6v39.9c0 1 .8 2 2 2h16.3c1 0 2-1 2-2v-40h14.6c1 0 2-.8 2-1.9V36.5a2 2 0 0 0-2-2H56.8v-9.2c0-4.4 1.1-6.7 6.9-6.7H72c1 0 2-.9 2-2V2c0-1.1-1-2-2-2z\"\n                  />\n                </svg>\n              </a>\n              &nbsp;\n              <a\n                class=\"button tweet\"\n                href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n                  shareTextWithLink,\n                )}`}\n                target=\"_blank\"\n              >\n                <svg height=\"16\" width=\"16\" viewBox=\"0 0 24 24\">\n                  <title>{t('common.tweet')}</title>\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"\n                  />\n                </svg>\n              </a>\n              &nbsp;\n              <CodeInput code={currentGame.id} url={permalink} />\n            </>\n          )}\n          <div class=\"footer\">\n            {/won|lost/i.test(gameState) &&\n              getTodayGame().id === currentGame.id && (\n                <p>\n                  <big>\n                    <Trans\n                      i18nKey=\"ui.nextIdiom\"\n                      components={[<Countdown />]}\n                    />\n                  </big>\n                </p>\n              )}\n            <div>\n              {getTodayGame().id !== currentGame.id && (\n                <>\n                  <a href=\"./\" class=\"button strong\">\n                    <PlayIcon width={20} height={20} /> {t('ui.playTodayGame')}\n                  </a>\n                  <br />\n                </>\n              )}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Random');\n                  const yes = confirm(t('ui.confirmRandom'));\n                  if (yes) {\n                    const rand = Math.round(Math.random() * (games.length - 1));\n                    const randGame = games[rand];\n                    location.hash = `#${randGame.id}`;\n                    setShowModal(null);\n                    fireEvent('Game load: Random');\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.random')}\n              </button>{' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Idiom ID');\n                  // Ask user for idiom ID, load game if ID is valid\n                  let id = prompt(t('ui.promptIdiom'));\n                  try {\n                    id = new URL(id).hash.slice(1);\n                  } catch (e) {}\n                  if (id) {\n                    const game = games.find((g) => g.id === id);\n                    if (game) {\n                      location.hash = `#${game.id}`;\n                      setShowModal(null);\n                      fireEvent('Game load: Idiom ID');\n                    } else {\n                      alert('Invalid idiom ID');\n                    }\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.choose')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"info-modal\"\n        class={showInfoModal || !skipFirstTime ? 'appear' : ''}\n      >\n        {skipFirstTime && (\n          <CloseIcon\n            height=\"32\"\n            width=\"32\"\n            class=\"close\"\n            onClick={() => {\n              setShowInfoModal(false);\n            }}\n          />\n        )}\n        <div class=\"content\">\n          {prefersColorSchemeSupported && (\n            <p class=\"color-scheme-selector\">\n              <button\n                type=\"button\"\n                class={colorScheme === 'dark' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'dark');\n                  setColorScheme('dark');\n                }}\n              >\n                üåë\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'auto' ? 'active' : ''}\n                onClick={() => {\n                  LS.removeItem(`${KEY_PREFIX}colorScheme`);\n                  setColorScheme('auto');\n                }}\n              >\n                üåì\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'light' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'light');\n                  setColorScheme('light');\n                }}\n              >\n                üåï\n              </button>\n            </p>\n          )}{' '}\n          <p class=\"locale-selector\">\n            üåê{' '}\n            <a\n              href=\"./?lng=en\"\n              hreflang=\"en\"\n              rel={i18n.resolvedLanguage === 'en' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'en' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('en');\n              }}\n            >\n              English\n            </a>{' '}\n            &#8901;{' '}\n            <a\n              href=\"./?lng=zh-CN\"\n              hreflang=\"zh-CN\"\n              rel={i18n.resolvedLanguage === 'zh' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'zh' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('zh-CN');\n              }}\n            >\n              ‰∏≠Êñá\n            </a>\n          </p>\n          {skipFirstTime && gamesPlayedCount > 0 && (\n            <div id=\"stats\">\n              <p>\n                <Trans i18nKey=\"ui.gamesPlayed\" components={[<GamesCount />]} />\n              </p>\n            </div>\n          )}\n          <h2>{t('howToPlay.heading')}</h2>\n          <p>{t('howToPlay.how1')}</p>\n          <p>{t('howToPlay.how2')}</p>\n          <p>{t('howToPlay.how3')}</p>\n          <div class=\"example-idiom\">\n            {'‰πùÁâõ‰∏ÄÊØõ'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 0 ? 'üü©' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotCorrect')}</p>\n          <div class=\"example-idiom\">\n            {'ÁêÜÊâÄÂΩìÁÑ∂'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 1 ? 'üüß' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotPresent')}</p>\n          <div class=\"example-idiom\">\n            {'Áà±‰∏çÈáäÊâã'.split('').map((letter, i) => (\n              <Letter\n                key={letter}\n                letter={letter}\n                state={i === 2 ? '‚¨ú' : ''}\n              />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotAbsent')}</p>\n          <p>{t('howToPlay.how4')}</p>\n          {skipFirstTime ? (\n            <>\n              <h2>{t('about.heading')}</h2>\n              <p>\n                <Trans\n                  i18nKey=\"about.about1\"\n                  components={[\n                    <a\n                      href=\"https://github.com/cheeaun/chengyu-wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://cheeaun.com/projects/\" target=\"_blank\" />,\n                    <a\n                      href=\"https://www.powerlanguage.co.uk/wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://powerlanguage.co.uk/\" target=\"_blank\" />,\n                  ]}\n                />\n              </p>\n              <h2>{t('feedback.heading')}</h2>\n              <ul>\n                <li>\n                  <a href=\"https://t.me/+ykuhfiImLd1kNjk1\" target=\"_blank\">\n                    {t('feedback.telegramGroup')}\n                  </a>\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubDiscussions\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/discussions\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubIssues\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/issues\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <a href=\"https://twitter.com/cheeaun\" target=\"_blank\">\n                    {t('feedback.twitter')}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://t.me/cheeaun\" target=\"_blank\">\n                    {t('feedback.telegram')}\n                  </a>\n                </li>\n              </ul>\n              <details id=\"debugging-container\">\n                <summary>\n                  {t('debugging.heading')} ({__COMMIT_HASH__})\n                </summary>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmResetGame'))) {\n                      LS.removeItem(KEY_PREFIX + currentGame.id);\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.resetGame')}\n                </button>\n                &nbsp;\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmClearDB'))) {\n                      clearGames();\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.clearDB')}\n                </button>\n              </details>\n            </>\n          ) : (\n            <p>\n              <button\n                type=\"button\"\n                class=\"large\"\n                onClick={() => {\n                  setShowInfoModal(false);\n                  LS.setItem(KEY_PREFIX + 'skipFirstTime', 1);\n                  setSkipFirstTime(true);\n                }}\n              >\n                <PlayIcon width=\"20\" height=\"20\" /> {t('ui.startPlay')}\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n      {showDashboard && (\n        <div id=\"dashboard-modal\">\n          <CloseIcon\n            height=\"24\"\n            width=\"24\"\n            class=\"close\"\n            onClick={() => {\n              setShowDashboard(false);\n            }}\n          />\n          <IdiomsDashboard />\n        </div>\n      )}\n      <Toaster\n        containerStyle={{\n          top: '3.5em',\n        }}\n        toastOptions={{\n          className: 'toast',\n          style: {\n            pointerEvents: 'none',\n          },\n        }}\n      />\n    </>\n  );\n}\n","import '@fontsource/nunito/400.css';\nimport '@fontsource/nunito/700.css';\nimport './index.css';\n\nimport { render } from 'preact';\nimport { App } from './app';\n\nimport en from '../i18n/en.json';\nimport zhCN from '../i18n/zh-CN.json';\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n      zh: {\n        translation: zhCN,\n      },\n    },\n    fallbackLng: 'en',\n    debug: /localhost/i.test(location.hostname),\n    detection: {\n      // localStorage is default\n      lookupLocalStorage: 'locale',\n      lookupCookie: 'locale',\n    },\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n  })\n  .then((t) => {\n    const updateLocale = () => {\n      document.documentElement.lang = i18n.resolvedLanguage;\n      document.title = document.querySelector(\n        'meta[property=\"og:title\"]',\n      ).content = t('app.title');\n      document.querySelector('meta[name=\"description\"]').content =\n        document.querySelector('meta[property=\"og:description\"]').content =\n          t('app.description');\n    };\n    i18n.on('languageChanged', updateLocale);\n    updateLocale();\n  });\n\nrender(<App />, document.getElementById('app'));\n"],"names":["relList","document","createElement","supports","link","querySelectorAll","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","href","p","jsx","jsxRuntime.jsx","jsxs","jsxRuntime.jsxs","Fragment","jsxRuntime.Fragment","py","pinyin","str","segment","group","flat","join","trim","alert","toast","text","copy","fn","navigator","clipboard","writeText","then","catch","LS","localStorage","getItem","key","e","value","setItem","removeItem","fireEvent","props","window","plausible","idioms","idiomsTxt","split","games","gameIdioms","slice","map","id","row","idiom","clearGames","i","length","startsWith","allGames","Map","game","JSON","parse","set","replace","getBoardGameState","boardStates","some","every","s","lastRow","blankBoard","Array","from","v","getIdiomsKeys","prevPassedIdioms","prevKeys","depth","passedIdioms","Set","add","keys","idiomLetters","forEach","letter","consecutiveFailures","anotherIdiom","find","has","includes","j","size","MAX_LETTERS","nextIdiom","_passedIdioms","_keys","randomIdiom","Math","floor","random","gameID","g","error","possibleIdioms","keySize","PlayIcon","_jsxs","viewBox","fill","_jsx","d","CloseIcon","startDate","Date","getTodayGame","diff","setHours","dayCount","max","Countdown","t","useTranslation","nextDay","nextStartDate","hours","useState","minutes","setMinutes","seconds","setSeconds","isNow","setIsNow","timer","setInterval","toString","padStart","clearInterval","class","CodeInput","code","url","readOnly","onClick","target","focus","select","Letter","state","style","opacity","jsConfetti","JSConfetti","IdiomsDashboard","wonCount","lostCount","boardGame","gameState","board","title","addConfetti","emojis","emojiSize","confettiNumber","gamesCount","Trans","i18nKey","values","gamesCountOverTotal","components","prefersColorSchemeSupported","matchMedia","media","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","zh","zhCN","fallbackLng","debug","test","location","hostname","detection","lookupLocalStorage","lookupCookie","interpolation","escapeValue","updateLocale","documentElement","lang","resolvedLanguage","querySelector","content","on","render","showDashboard","setShowDashboard","showError","setShowError","showModal","setShowModal","showInfoModal","setShowInfoModal","colorScheme","setColorScheme","html","classList","remove","skipFirstTime","setSkipFirstTime","currentGame","setCurrentGame","hash","addEventListener","setBoard","cachedGame","useMemo","hiddenIdiom","testIdiom","letters1","letters2","lettersLength","states","Error","correctLetterIndices","push","presentLetterIndices","l1","l2","l1Index","findIndex","l","index","getIdiomStates","stringify","definition","setDefinition","r","json","currentStep","currentGameKeys","filter","sort","a","b","localeCompare","console","groupCollapsed","log","groupEnd","ANSWER","handleLetter","overwrite","newBoard","columnIndex","correctKeys","presentKeys","absentKeys","handleEnter","currentIdiom","valid","handleBackspace","handleKey","metaKey","ctrlKey","toLowerCase","preventDefault","stopPropagation","reverse","pinyinLetter","possibleLetters","k","letterIndex","indexOf","nextLetter","sensitivity","removeEventListener","permalink","origin","pathname","shortPermalink","host","emojiResults","attempts","shareTextWithLink","hints","letters","absentHints","c","letterHints","pinyinHint","normalize","hintIndex","useRef","current","toasts","useToasterStore","visible","dismiss","gamesPlayedCount","Object","isPrefixed","precision","count","toPrecision","GamesCount","useCallback","width","height","stroke","className","tabIndex","hint","currentTarget","async","userAgent","share","encodeURIComponent","confirm","rand","round","randGame","prompt","URL","hreflang","undefined","changeLanguage","__COMMIT_HASH__","reload","KEY_PREFIX","Toaster","containerStyle","top","toastOptions","pointerEvents","getElementById"],"mappings":"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"}